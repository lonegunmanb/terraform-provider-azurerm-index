{
  "version": "v4.39.0",
  "services": [
    {
      "service_name": "aadb2c",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/aadb2c",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "AadB2cDirectoryResource"
      ],
      "data_sources": [
        "AadB2cDirectoryDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "AadB2cDirectoryResource": "azurerm_aadb2c_directory"
      },
      "data_source_terraform_types": {
        "AadB2cDirectoryDataSource": "azurerm_aadb2c_directory"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "analysisservices",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/analysisservices",
      "supported_resources": {
        "azurerm_analysis_services_server": "resourceAnalysisServicesServer"
      },
      "supported_data_sources": {},
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_analysis_services_server": {
          "create_method": "resourceAnalysisServicesServerCreate",
          "read_method": "resourceAnalysisServicesServerRead",
          "update_method": "resourceAnalysisServicesServerUpdate",
          "delete_method": "resourceAnalysisServicesServerDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "advisor",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/advisor",
      "supported_resources": {},
      "supported_data_sources": {
        "azurerm_advisor_recommendations": "dataSourceAdvisorRecommendations"
      },
      "resources": [
        "AdvisorSuppressionResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {
        "azurerm_advisor_recommendations": {
          "read_method": "dataSourceAdvisorRecommendationsRead"
        }
      },
      "resource_terraform_types": {
        "AdvisorSuppressionResource": "azurerm_advisor_suppression"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "apimanagement",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement",
      "supported_resources": {
        "azurerm_api_management": "resourceApiManagementService",
        "azurerm_api_management_api": "resourceApiManagementApi",
        "azurerm_api_management_api_diagnostic": "resourceApiManagementApiDiagnostic",
        "azurerm_api_management_api_operation": "resourceApiManagementApiOperation",
        "azurerm_api_management_api_operation_policy": "resourceApiManagementApiOperationPolicy",
        "azurerm_api_management_api_operation_tag": "resourceApiManagementApiOperationTag",
        "azurerm_api_management_api_policy": "resourceApiManagementApiPolicy",
        "azurerm_api_management_api_release": "resourceApiManagementApiRelease",
        "azurerm_api_management_api_schema": "resourceApiManagementApiSchema",
        "azurerm_api_management_api_tag": "resourceApiManagementApiTag",
        "azurerm_api_management_api_tag_description": "resourceApiManagementApiTagDescription",
        "azurerm_api_management_api_version_set": "resourceApiManagementApiVersionSet",
        "azurerm_api_management_authorization_server": "resourceApiManagementAuthorizationServer",
        "azurerm_api_management_backend": "resourceApiManagementBackend",
        "azurerm_api_management_certificate": "resourceApiManagementCertificate",
        "azurerm_api_management_custom_domain": "resourceApiManagementCustomDomain",
        "azurerm_api_management_diagnostic": "resourceApiManagementDiagnostic",
        "azurerm_api_management_email_template": "resourceApiManagementEmailTemplate",
        "azurerm_api_management_gateway": "resourceApiManagementGateway",
        "azurerm_api_management_gateway_api": "resourceApiManagementGatewayApi",
        "azurerm_api_management_gateway_certificate_authority": "resourceApiManagementGatewayCertificateAuthority",
        "azurerm_api_management_gateway_host_name_configuration": "resourceApiManagementGatewayHostNameConfiguration",
        "azurerm_api_management_global_schema": "resourceApiManagementGlobalSchema",
        "azurerm_api_management_group": "resourceApiManagementGroup",
        "azurerm_api_management_group_user": "resourceApiManagementGroupUser",
        "azurerm_api_management_identity_provider_aad": "resourceApiManagementIdentityProviderAAD",
        "azurerm_api_management_identity_provider_aadb2c": "resourceArmApiManagementIdentityProviderAADB2C",
        "azurerm_api_management_identity_provider_facebook": "resourceApiManagementIdentityProviderFacebook",
        "azurerm_api_management_identity_provider_google": "resourceApiManagementIdentityProviderGoogle",
        "azurerm_api_management_identity_provider_microsoft": "resourceApiManagementIdentityProviderMicrosoft",
        "azurerm_api_management_identity_provider_twitter": "resourceApiManagementIdentityProviderTwitter",
        "azurerm_api_management_logger": "resourceApiManagementLogger",
        "azurerm_api_management_named_value": "resourceApiManagementNamedValue",
        "azurerm_api_management_openid_connect_provider": "resourceApiManagementOpenIDConnectProvider",
        "azurerm_api_management_policy": "resourceApiManagementPolicy",
        "azurerm_api_management_policy_fragment": "resourceApiManagementPolicyFragment",
        "azurerm_api_management_product": "resourceApiManagementProduct",
        "azurerm_api_management_product_api": "resourceApiManagementProductApi",
        "azurerm_api_management_product_group": "resourceApiManagementProductGroup",
        "azurerm_api_management_product_policy": "resourceApiManagementProductPolicy",
        "azurerm_api_management_product_tag": "resourceApiManagementProductTag",
        "azurerm_api_management_redis_cache": "resourceApiManagementRedisCache",
        "azurerm_api_management_subscription": "resourceApiManagementSubscription",
        "azurerm_api_management_tag": "resourceApiManagementTag",
        "azurerm_api_management_user": "resourceApiManagementUser"
      },
      "supported_data_sources": {
        "azurerm_api_management": "dataSourceApiManagementService",
        "azurerm_api_management_api": "dataSourceApiManagementApi",
        "azurerm_api_management_api_version_set": "dataSourceApiManagementApiVersionSet",
        "azurerm_api_management_gateway": "dataSourceApiManagementGateway",
        "azurerm_api_management_gateway_host_name_configuration": "dataSourceApiManagementGatewayHostNameConfiguration",
        "azurerm_api_management_group": "dataSourceApiManagementGroup",
        "azurerm_api_management_product": "dataSourceApiManagementProduct",
        "azurerm_api_management_user": "dataSourceApiManagementUser"
      },
      "resources": [
        "ApiManagementNotificationRecipientEmailResource",
        "ApiManagementNotificationRecipientUserResource",
        "ApiManagementWorkspaceResource",
        "ApiManagementStandaloneGatewayResource"
      ],
      "data_sources": [
        "ApiManagementSubscriptionDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_api_management": {
          "create_method": "resourceApiManagementServiceCreate",
          "read_method": "resourceApiManagementServiceRead",
          "update_method": "resourceApiManagementServiceUpdate",
          "delete_method": "resourceApiManagementServiceDelete"
        },
        "azurerm_api_management_api": {
          "create_method": "resourceApiManagementApiCreate",
          "read_method": "resourceApiManagementApiRead",
          "update_method": "resourceApiManagementApiUpdate",
          "delete_method": "resourceApiManagementApiDelete"
        },
        "azurerm_api_management_api_diagnostic": {
          "create_method": "resourceApiManagementApiDiagnosticCreateUpdate",
          "read_method": "resourceApiManagementApiDiagnosticRead",
          "update_method": "resourceApiManagementApiDiagnosticCreateUpdate",
          "delete_method": "resourceApiManagementApiDiagnosticDelete"
        },
        "azurerm_api_management_api_operation": {
          "create_method": "resourceApiManagementApiOperationCreateUpdate",
          "read_method": "resourceApiManagementApiOperationRead",
          "update_method": "resourceApiManagementApiOperationCreateUpdate",
          "delete_method": "resourceApiManagementApiOperationDelete"
        },
        "azurerm_api_management_api_operation_policy": {
          "create_method": "resourceApiManagementAPIOperationPolicyCreateUpdate",
          "read_method": "resourceApiManagementAPIOperationPolicyRead",
          "update_method": "resourceApiManagementAPIOperationPolicyCreateUpdate",
          "delete_method": "resourceApiManagementAPIOperationPolicyDelete"
        },
        "azurerm_api_management_api_operation_tag": {
          "create_method": "resourceApiManagementApiOperationTagCreateUpdate",
          "read_method": "resourceApiManagementApiOperationTagRead",
          "update_method": "resourceApiManagementApiOperationTagCreateUpdate",
          "delete_method": "resourceApiManagementApiOperationTagDelete"
        },
        "azurerm_api_management_api_policy": {
          "create_method": "resourceApiManagementAPIPolicyCreateUpdate",
          "read_method": "resourceApiManagementAPIPolicyRead",
          "update_method": "resourceApiManagementAPIPolicyCreateUpdate",
          "delete_method": "resourceApiManagementAPIPolicyDelete"
        },
        "azurerm_api_management_api_release": {
          "create_method": "resourceApiManagementApiReleaseCreateUpdate",
          "read_method": "resourceApiManagementApiReleaseRead",
          "update_method": "resourceApiManagementApiReleaseCreateUpdate",
          "delete_method": "resourceApiManagementApiReleaseDelete"
        },
        "azurerm_api_management_api_schema": {
          "create_method": "resourceApiManagementApiSchemaCreateUpdate",
          "read_method": "resourceApiManagementApiSchemaRead",
          "update_method": "resourceApiManagementApiSchemaCreateUpdate",
          "delete_method": "resourceApiManagementApiSchemaDelete"
        },
        "azurerm_api_management_api_tag": {
          "create_method": "resourceApiManagementApiTagCreate",
          "read_method": "resourceApiManagementApiTagRead",
          "delete_method": "resourceApiManagementApiTagDelete"
        },
        "azurerm_api_management_api_tag_description": {
          "create_method": "resourceApiManagementApiTagDescriptionCreateUpdate",
          "read_method": "resourceApiManagementApiTagDescriptionRead",
          "update_method": "resourceApiManagementApiTagDescriptionCreateUpdate",
          "delete_method": "resourceApiManagementApiTagDescriptionDelete"
        },
        "azurerm_api_management_api_version_set": {
          "create_method": "resourceApiManagementApiVersionSetCreateUpdate",
          "read_method": "resourceApiManagementApiVersionSetRead",
          "update_method": "resourceApiManagementApiVersionSetCreateUpdate",
          "delete_method": "resourceApiManagementApiVersionSetDelete"
        },
        "azurerm_api_management_authorization_server": {
          "create_method": "resourceApiManagementAuthorizationServerCreateUpdate",
          "read_method": "resourceApiManagementAuthorizationServerRead",
          "update_method": "resourceApiManagementAuthorizationServerCreateUpdate",
          "delete_method": "resourceApiManagementAuthorizationServerDelete"
        },
        "azurerm_api_management_backend": {
          "create_method": "resourceApiManagementBackendCreateUpdate",
          "read_method": "resourceApiManagementBackendRead",
          "update_method": "resourceApiManagementBackendCreateUpdate",
          "delete_method": "resourceApiManagementBackendDelete"
        },
        "azurerm_api_management_certificate": {
          "create_method": "resourceApiManagementCertificateCreateUpdate",
          "read_method": "resourceApiManagementCertificateRead",
          "update_method": "resourceApiManagementCertificateCreateUpdate",
          "delete_method": "resourceApiManagementCertificateDelete"
        },
        "azurerm_api_management_custom_domain": {
          "create_method": "apiManagementCustomDomainCreateUpdate",
          "read_method": "apiManagementCustomDomainRead",
          "update_method": "apiManagementCustomDomainCreateUpdate",
          "delete_method": "apiManagementCustomDomainDelete"
        },
        "azurerm_api_management_diagnostic": {
          "create_method": "resourceApiManagementDiagnosticCreateUpdate",
          "read_method": "resourceApiManagementDiagnosticRead",
          "update_method": "resourceApiManagementDiagnosticCreateUpdate",
          "delete_method": "resourceApiManagementDiagnosticDelete"
        },
        "azurerm_api_management_email_template": {
          "create_method": "resourceApiManagementEmailTemplateCreateUpdate",
          "read_method": "resourceApiManagementEmailTemplateRead",
          "update_method": "resourceApiManagementEmailTemplateCreateUpdate",
          "delete_method": "resourceApiManagementEmailTemplateDelete"
        },
        "azurerm_api_management_gateway": {
          "create_method": "resourceApiManagementGatewayCreateUpdate",
          "read_method": "resourceApiManagementGatewayRead",
          "update_method": "resourceApiManagementGatewayCreateUpdate",
          "delete_method": "resourceApiManagementGatewayDelete"
        },
        "azurerm_api_management_gateway_api": {
          "create_method": "resourceApiManagementGatewayApiCreate",
          "read_method": "resourceApiManagementGatewayApiRead",
          "delete_method": "resourceApiManagementGatewayApiDelete"
        },
        "azurerm_api_management_gateway_certificate_authority": {
          "create_method": "resourceApiManagementGatewayCertificateAuthorityCreateUpdate",
          "read_method": "resourceApiManagementGatewayCertificateAuthorityRead",
          "update_method": "resourceApiManagementGatewayCertificateAuthorityCreateUpdate",
          "delete_method": "resourceApiManagementGatewayCertificateAuthorityDelete"
        },
        "azurerm_api_management_gateway_host_name_configuration": {
          "create_method": "resourceApiManagementGatewayHostNameConfigurationCreateUpdate",
          "read_method": "resourceApiManagementGatewayHostNameConfigurationRead",
          "update_method": "resourceApiManagementGatewayHostNameConfigurationCreateUpdate",
          "delete_method": "resourceApiManagementGatewayHostNameConfigurationDelete"
        },
        "azurerm_api_management_global_schema": {
          "create_method": "resourceApiManagementGlobalSchemaCreateUpdate",
          "read_method": "resourceApiManagementGlobalSchemaRead",
          "update_method": "resourceApiManagementGlobalSchemaCreateUpdate",
          "delete_method": "resourceApiManagementGlobalSchemaDelete"
        },
        "azurerm_api_management_group": {
          "create_method": "resourceApiManagementGroupCreateUpdate",
          "read_method": "resourceApiManagementGroupRead",
          "update_method": "resourceApiManagementGroupCreateUpdate",
          "delete_method": "resourceApiManagementGroupDelete"
        },
        "azurerm_api_management_group_user": {
          "create_method": "resourceApiManagementGroupUserCreate",
          "read_method": "resourceApiManagementGroupUserRead",
          "delete_method": "resourceApiManagementGroupUserDelete"
        },
        "azurerm_api_management_identity_provider_aad": {
          "create_method": "resourceApiManagementIdentityProviderAADCreateUpdate",
          "read_method": "resourceApiManagementIdentityProviderAADRead",
          "update_method": "resourceApiManagementIdentityProviderAADCreateUpdate",
          "delete_method": "resourceApiManagementIdentityProviderAADDelete"
        },
        "azurerm_api_management_identity_provider_aadb2c": {
          "create_method": "resourceArmApiManagementIdentityProviderAADB2CCreateUpdate",
          "read_method": "resourceArmApiManagementIdentityProviderAADB2CRead",
          "update_method": "resourceArmApiManagementIdentityProviderAADB2CCreateUpdate",
          "delete_method": "resourceArmApiManagementIdentityProviderAADB2CDelete"
        },
        "azurerm_api_management_identity_provider_facebook": {
          "create_method": "resourceApiManagementIdentityProviderFacebookCreateUpdate",
          "read_method": "resourceApiManagementIdentityProviderFacebookRead",
          "update_method": "resourceApiManagementIdentityProviderFacebookCreateUpdate",
          "delete_method": "resourceApiManagementIdentityProviderFacebookDelete"
        },
        "azurerm_api_management_identity_provider_google": {
          "create_method": "resourceApiManagementIdentityProviderGoogleCreateUpdate",
          "read_method": "resourceApiManagementIdentityProviderGoogleRead",
          "update_method": "resourceApiManagementIdentityProviderGoogleCreateUpdate",
          "delete_method": "resourceApiManagementIdentityProviderGoogleDelete"
        },
        "azurerm_api_management_identity_provider_microsoft": {
          "create_method": "resourceApiManagementIdentityProviderMicrosoftCreateUpdate",
          "read_method": "resourceApiManagementIdentityProviderMicrosoftRead",
          "update_method": "resourceApiManagementIdentityProviderMicrosoftCreateUpdate",
          "delete_method": "resourceApiManagementIdentityProviderMicrosoftDelete"
        },
        "azurerm_api_management_identity_provider_twitter": {
          "create_method": "resourceApiManagementIdentityProviderTwitterCreateUpdate",
          "read_method": "resourceApiManagementIdentityProviderTwitterRead",
          "update_method": "resourceApiManagementIdentityProviderTwitterCreateUpdate",
          "delete_method": "resourceApiManagementIdentityProviderTwitterDelete"
        },
        "azurerm_api_management_logger": {
          "create_method": "resourceApiManagementLoggerCreate",
          "read_method": "resourceApiManagementLoggerRead",
          "update_method": "resourceApiManagementLoggerUpdate",
          "delete_method": "resourceApiManagementLoggerDelete"
        },
        "azurerm_api_management_named_value": {
          "create_method": "resourceApiManagementNamedValueCreateUpdate",
          "read_method": "resourceApiManagementNamedValueRead",
          "update_method": "resourceApiManagementNamedValueCreateUpdate",
          "delete_method": "resourceApiManagementNamedValueDelete"
        },
        "azurerm_api_management_openid_connect_provider": {
          "create_method": "resourceApiManagementOpenIDConnectProviderCreateUpdate",
          "read_method": "resourceApiManagementOpenIDConnectProviderRead",
          "update_method": "resourceApiManagementOpenIDConnectProviderCreateUpdate",
          "delete_method": "resourceApiManagementOpenIDConnectProviderDelete"
        },
        "azurerm_api_management_policy": {
          "create_method": "resourceApiManagementPolicyCreateUpdate",
          "read_method": "resourceApiManagementPolicyRead",
          "update_method": "resourceApiManagementPolicyCreateUpdate",
          "delete_method": "resourceApiManagementPolicyDelete"
        },
        "azurerm_api_management_policy_fragment": {
          "create_method": "resourceApiManagementPolicyFragmentCreate",
          "read_method": "resourceApiManagementPolicyFragmentRead",
          "update_method": "resourceApiManagementPolicyFragmentUpdate",
          "delete_method": "resourceApiManagementPolicyFragmentDelete"
        },
        "azurerm_api_management_product": {
          "create_method": "resourceApiManagementProductCreateUpdate",
          "read_method": "resourceApiManagementProductRead",
          "update_method": "resourceApiManagementProductCreateUpdate",
          "delete_method": "resourceApiManagementProductDelete"
        },
        "azurerm_api_management_product_api": {
          "create_method": "resourceApiManagementProductApiCreate",
          "read_method": "resourceApiManagementProductApiRead",
          "delete_method": "resourceApiManagementProductApiDelete"
        },
        "azurerm_api_management_product_group": {
          "create_method": "resourceApiManagementProductGroupCreate",
          "read_method": "resourceApiManagementProductGroupRead",
          "delete_method": "resourceApiManagementProductGroupDelete"
        },
        "azurerm_api_management_product_policy": {
          "create_method": "resourceApiManagementProductPolicyCreateUpdate",
          "read_method": "resourceApiManagementProductPolicyRead",
          "update_method": "resourceApiManagementProductPolicyCreateUpdate",
          "delete_method": "resourceApiManagementProductPolicyDelete"
        },
        "azurerm_api_management_product_tag": {
          "create_method": "resourceApiManagementProductTagCreate",
          "read_method": "resourceApiManagementProductTagRead",
          "delete_method": "resourceApiManagementProductTagDelete"
        },
        "azurerm_api_management_redis_cache": {
          "create_method": "resourceApiManagementRedisCacheCreateUpdate",
          "read_method": "resourceApiManagementRedisCacheRead",
          "update_method": "resourceApiManagementRedisCacheCreateUpdate",
          "delete_method": "resourceApiManagementRedisCacheDelete"
        },
        "azurerm_api_management_subscription": {
          "create_method": "resourceApiManagementSubscriptionCreateUpdate",
          "read_method": "resourceApiManagementSubscriptionRead",
          "update_method": "resourceApiManagementSubscriptionCreateUpdate",
          "delete_method": "resourceApiManagementSubscriptionDelete"
        },
        "azurerm_api_management_tag": {
          "create_method": "resourceApiManagementTagCreateUpdate",
          "read_method": "resourceApiManagementTagRead",
          "update_method": "resourceApiManagementTagCreateUpdate",
          "delete_method": "resourceApiManagementTagDelete"
        },
        "azurerm_api_management_user": {
          "create_method": "resourceApiManagementUserCreateUpdate",
          "read_method": "resourceApiManagementUserRead",
          "update_method": "resourceApiManagementUserCreateUpdate",
          "delete_method": "resourceApiManagementUserDelete"
        }
      },
      "data_source_methods": {
        "azurerm_api_management": {
          "read_method": "dataSourceApiManagementRead"
        },
        "azurerm_api_management_api": {
          "read_method": "dataSourceApiManagementApiRead"
        },
        "azurerm_api_management_api_version_set": {
          "read_method": "dataSourceApiManagementApiVersionSetRead"
        },
        "azurerm_api_management_gateway": {
          "read_method": "dataSourceApiManagementGatewayRead"
        },
        "azurerm_api_management_gateway_host_name_configuration": {
          "read_method": "dataSourceApiManagementGatewayHostnameConfigurationRead"
        },
        "azurerm_api_management_group": {
          "read_method": "dataSourceApiManagementGroupRead"
        },
        "azurerm_api_management_product": {
          "read_method": "dataSourceApiManagementProductRead"
        },
        "azurerm_api_management_user": {
          "read_method": "dataSourceApiManagementUserRead"
        }
      },
      "resource_terraform_types": {
        "ApiManagementNotificationRecipientEmailResource": "azurerm_api_management_notification_recipient_email",
        "ApiManagementNotificationRecipientUserResource": "azurerm_api_management_notification_recipient_user",
        "ApiManagementStandaloneGatewayResource": "azurerm_api_management_standalone_gateway",
        "ApiManagementWorkspaceResource": "azurerm_api_management_workspace"
      },
      "data_source_terraform_types": {
        "ApiManagementSubscriptionDataSource": "azurerm_api_management_subscription"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "appconfiguration",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/appconfiguration",
      "supported_resources": {
        "azurerm_app_configuration": "resourceAppConfiguration"
      },
      "supported_data_sources": {
        "azurerm_app_configuration": "dataSourceAppConfiguration"
      },
      "resources": [
        "KeyResource",
        "FeatureResource"
      ],
      "data_sources": [
        "KeyDataSource",
        "KeysDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_app_configuration": {
          "create_method": "resourceAppConfigurationCreate",
          "read_method": "resourceAppConfigurationRead",
          "update_method": "resourceAppConfigurationUpdate",
          "delete_method": "resourceAppConfigurationDelete"
        }
      },
      "data_source_methods": {
        "azurerm_app_configuration": {
          "read_method": "dataSourceAppConfigurationRead"
        }
      },
      "resource_terraform_types": {
        "FeatureResource": "azurerm_app_configuration_feature",
        "KeyResource": "azurerm_app_configuration_key"
      },
      "data_source_terraform_types": {
        "KeyDataSource": "azurerm_app_configuration_key",
        "KeysDataSource": "azurerm_app_configuration_keys"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "applicationinsights",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/applicationinsights",
      "supported_resources": {
        "azurerm_application_insights": "resourceApplicationInsights",
        "azurerm_application_insights_analytics_item": "resourceApplicationInsightsAnalyticsItem",
        "azurerm_application_insights_api_key": "resourceApplicationInsightsAPIKey",
        "azurerm_application_insights_smart_detection_rule": "resourceApplicationInsightsSmartDetectionRule",
        "azurerm_application_insights_web_test": "resourceApplicationInsightsWebTests"
      },
      "supported_data_sources": {
        "azurerm_application_insights": "dataSourceApplicationInsights"
      },
      "resources": [
        "ApplicationInsightsWorkbookResource",
        "ApplicationInsightsWorkbookTemplateResource",
        "ApplicationInsightsStandardWebTestResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_application_insights": {
          "create_method": "resourceApplicationInsightsCreate",
          "read_method": "resourceApplicationInsightsRead",
          "update_method": "resourceApplicationInsightsUpdate",
          "delete_method": "resourceApplicationInsightsDelete"
        },
        "azurerm_application_insights_analytics_item": {
          "create_method": "resourceApplicationInsightsAnalyticsItemCreate",
          "read_method": "resourceApplicationInsightsAnalyticsItemRead",
          "update_method": "resourceApplicationInsightsAnalyticsItemUpdate",
          "delete_method": "resourceApplicationInsightsAnalyticsItemDelete"
        },
        "azurerm_application_insights_api_key": {
          "create_method": "resourceApplicationInsightsAPIKeyCreate",
          "read_method": "resourceApplicationInsightsAPIKeyRead",
          "delete_method": "resourceApplicationInsightsAPIKeyDelete"
        },
        "azurerm_application_insights_smart_detection_rule": {
          "create_method": "resourceApplicationInsightsSmartDetectionRuleUpdate",
          "read_method": "resourceApplicationInsightsSmartDetectionRuleRead",
          "update_method": "resourceApplicationInsightsSmartDetectionRuleUpdate",
          "delete_method": "resourceApplicationInsightsSmartDetectionRuleDelete"
        },
        "azurerm_application_insights_web_test": {
          "create_method": "resourceApplicationInsightsWebTestsCreateUpdate",
          "read_method": "resourceApplicationInsightsWebTestsRead",
          "update_method": "resourceApplicationInsightsWebTestsCreateUpdate",
          "delete_method": "resourceApplicationInsightsWebTestsDelete"
        }
      },
      "data_source_methods": {
        "azurerm_application_insights": {
          "read_method": "dataSourceArmApplicationInsightsRead"
        }
      },
      "resource_terraform_types": {
        "ApplicationInsightsStandardWebTestResource": "azurerm_application_insights_standard_web_test",
        "ApplicationInsightsWorkbookResource": "azurerm_application_insights_workbook",
        "ApplicationInsightsWorkbookTemplateResource": "azurerm_application_insights_workbook_template"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "appservice",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/appservice",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "AppServiceEnvironmentV3Resource",
        "AppServiceSourceControlTokenResource",
        "FunctionAppActiveSlotResource",
        "FunctionAppFlexConsumptionResource",
        "FunctionAppFunctionResource",
        "FunctionAppHybridConnectionResource",
        "LinuxFunctionAppResource",
        "LinuxFunctionAppSlotResource",
        "LinuxWebAppResource",
        "LinuxWebAppSlotResource",
        "ServicePlanResource",
        "SourceControlResource",
        "SourceControlSlotResource",
        "StaticWebAppResource",
        "StaticWebAppCustomDomainResource",
        "StaticWebAppFunctionAppRegistrationResource",
        "WebAppActiveSlotResource",
        "WebAppHybridConnectionResource",
        "WindowsFunctionAppResource",
        "WindowsFunctionAppSlotResource",
        "WindowsWebAppResource",
        "WindowsWebAppSlotResource"
      ],
      "data_sources": [
        "AppServiceEnvironmentV3DataSource",
        "AppServiceSourceControlTokenDataSource",
        "LinuxFunctionAppDataSource",
        "LinuxWebAppDataSource",
        "ServicePlanDataSource",
        "StaticWebAppDataSource",
        "WindowsFunctionAppDataSource",
        "WindowsWebAppDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "AppServiceEnvironmentV3Resource": "azurerm_app_service_environment_v3",
        "AppServiceSourceControlTokenResource": "azurerm_source_control_token",
        "FunctionAppActiveSlotResource": "azurerm_function_app_active_slot",
        "FunctionAppFlexConsumptionResource": "azurerm_function_app_flex_consumption",
        "FunctionAppFunctionResource": "azurerm_function_app_function",
        "FunctionAppHybridConnectionResource": "azurerm_function_app_hybrid_connection",
        "LinuxFunctionAppResource": "azurerm_linux_function_app",
        "LinuxFunctionAppSlotResource": "azurerm_linux_function_app_slot",
        "LinuxWebAppResource": "azurerm_linux_web_app",
        "LinuxWebAppSlotResource": "azurerm_linux_web_app_slot",
        "ServicePlanResource": "azurerm_service_plan",
        "SourceControlResource": "azurerm_app_service_source_control",
        "SourceControlSlotResource": "azurerm_app_service_source_control_slot",
        "StaticWebAppCustomDomainResource": "azurerm_static_web_app_custom_domain",
        "StaticWebAppFunctionAppRegistrationResource": "azurerm_static_web_app_function_app_registration",
        "StaticWebAppResource": "azurerm_static_web_app",
        "WebAppActiveSlotResource": "azurerm_web_app_active_slot",
        "WebAppHybridConnectionResource": "azurerm_web_app_hybrid_connection",
        "WindowsFunctionAppResource": "azurerm_windows_function_app",
        "WindowsFunctionAppSlotResource": "azurerm_windows_function_app_slot",
        "WindowsWebAppResource": "azurerm_windows_web_app",
        "WindowsWebAppSlotResource": "azurerm_windows_web_app_slot"
      },
      "data_source_terraform_types": {
        "AppServiceEnvironmentV3DataSource": "azurerm_app_service_environment_v3",
        "AppServiceSourceControlTokenDataSource": "azurerm_source_control_token",
        "LinuxFunctionAppDataSource": "azurerm_linux_function_app",
        "LinuxWebAppDataSource": "azurerm_linux_web_app",
        "ServicePlanDataSource": "azurerm_service_plan",
        "StaticWebAppDataSource": "azurerm_static_web_app",
        "WindowsFunctionAppDataSource": "azurerm_windows_function_app",
        "WindowsWebAppDataSource": "azurerm_windows_web_app"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "arckubernetes",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/arckubernetes",
      "supported_resources": {
        "azurerm_arc_kubernetes_cluster": "resourceArcKubernetesCluster"
      },
      "supported_data_sources": {},
      "resources": [
        "ArcKubernetesClusterExtensionResource",
        "ArcKubernetesFluxConfigurationResource",
        "ArcKubernetesProvisionedClusterResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_arc_kubernetes_cluster": {
          "create_method": "resourceArcKubernetesClusterCreate",
          "read_method": "resourceArcKubernetesClusterRead",
          "update_method": "resourceArcKubernetesClusterUpdate",
          "delete_method": "resourceArcKubernetesClusterDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {
        "ArcKubernetesClusterExtensionResource": "azurerm_arc_kubernetes_cluster_extension",
        "ArcKubernetesFluxConfigurationResource": "azurerm_arc_kubernetes_flux_configuration",
        "ArcKubernetesProvisionedClusterResource": "azurerm_arc_kubernetes_provisioned_cluster"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "arcresourcebridge",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/arcresourcebridge",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "ArcResourceBridgeApplianceResource"
      ],
      "data_sources": [
        "ArcResourceBridgeApplianceDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "ArcResourceBridgeApplianceResource": "azurerm_arc_resource_bridge_appliance"
      },
      "data_source_terraform_types": {
        "ArcResourceBridgeApplianceDataSource": "azurerm_arc_resource_bridge_appliance"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "attestation",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/attestation",
      "supported_resources": {
        "azurerm_attestation_provider": "resourceAttestationProvider"
      },
      "supported_data_sources": {
        "azurerm_attestation_provider": "dataSourceAttestationProvider"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_attestation_provider": {
          "create_method": "resourceAttestationProviderCreate",
          "read_method": "resourceAttestationProviderRead",
          "update_method": "resourceAttestationProviderUpdate",
          "delete_method": "resourceAttestationProviderDelete"
        }
      },
      "data_source_methods": {
        "azurerm_attestation_provider": {
          "read_method": "dataSourceArmAttestationProviderRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "authorization",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/authorization",
      "supported_resources": {
        "azurerm_role_assignment": "resourceArmRoleAssignment"
      },
      "supported_data_sources": {
        "azurerm_client_config": "dataSourceArmClientConfig"
      },
      "resources": [
        "PimActiveRoleAssignmentResource",
        "PimEligibleRoleAssignmentResource",
        "RoleAssignmentMarketplaceResource",
        "RoleDefinitionResource",
        "RoleManagementPolicyResource"
      ],
      "data_sources": [
        "RoleAssignmentsDataSource",
        "RoleDefinitionDataSource",
        "RoleManagementPolicyDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_role_assignment": {
          "create_method": "resourceArmRoleAssignmentCreate",
          "read_method": "resourceArmRoleAssignmentRead",
          "delete_method": "resourceArmRoleAssignmentDelete"
        }
      },
      "data_source_methods": {
        "azurerm_client_config": {
          "read_method": "dataSourceArmClientConfigRead"
        }
      },
      "resource_terraform_types": {
        "PimActiveRoleAssignmentResource": "azurerm_pim_active_role_assignment",
        "PimEligibleRoleAssignmentResource": "azurerm_pim_eligible_role_assignment",
        "RoleAssignmentMarketplaceResource": "azurerm_marketplace_role_assignment",
        "RoleDefinitionResource": "azurerm_role_definition",
        "RoleManagementPolicyResource": "azurerm_role_management_policy"
      },
      "data_source_terraform_types": {
        "RoleAssignmentsDataSource": "azurerm_role_assignments",
        "RoleDefinitionDataSource": "azurerm_role_definition",
        "RoleManagementPolicyDataSource": "azurerm_role_management_policy"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "automanage",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/automanage",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "AutoManageConfigurationResource",
        "VirtualMachineConfigurationAssignment",
        "ArcMachineConfigurationAssignment"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "ArcMachineConfigurationAssignment": "azurerm_arc_machine_automanage_configuration_assignment",
        "AutoManageConfigurationResource": "azurerm_automanage_configuration",
        "VirtualMachineConfigurationAssignment": "azurerm_virtual_machine_automanage_configuration_assignment"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "azurestackhci",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/azurestackhci",
      "supported_resources": {
        "azurerm_stack_hci_cluster": "resourceArmStackHCICluster"
      },
      "supported_data_sources": {},
      "resources": [
        "StackHCIDeploymentSettingResource",
        "StackHCIExtensionResource",
        "StackHCILogicalNetworkResource",
        "StackHCIMarketplaceGalleryImageResource",
        "StackHCINetworkInterfaceResource",
        "StackHCIStoragePathResource",
        "StackHCIVirtualHardDiskResource"
      ],
      "data_sources": [
        "StackHCIClusterDataSource",
        "StackHCIStoragePathDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_stack_hci_cluster": {
          "create_method": "resourceArmStackHCIClusterCreate",
          "read_method": "resourceArmStackHCIClusterRead",
          "update_method": "resourceArmStackHCIClusterUpdate",
          "delete_method": "resourceArmStackHCIClusterDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {
        "StackHCIDeploymentSettingResource": "azurerm_stack_hci_deployment_setting",
        "StackHCIExtensionResource": "azurerm_stack_hci_extension",
        "StackHCILogicalNetworkResource": "azurerm_stack_hci_logical_network",
        "StackHCIMarketplaceGalleryImageResource": "azurerm_stack_hci_marketplace_gallery_image",
        "StackHCINetworkInterfaceResource": "azurerm_stack_hci_network_interface",
        "StackHCIStoragePathResource": "azurerm_stack_hci_storage_path",
        "StackHCIVirtualHardDiskResource": "azurerm_stack_hci_virtual_hard_disk"
      },
      "data_source_terraform_types": {
        "StackHCIClusterDataSource": "azurerm_stack_hci_cluster",
        "StackHCIStoragePathDataSource": "azurerm_stack_hci_storage_path"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "automation",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/automation",
      "supported_resources": {
        "azurerm_automation_account": "resourceAutomationAccount",
        "azurerm_automation_certificate": "resourceAutomationCertificate",
        "azurerm_automation_connection": "resourceAutomationConnection",
        "azurerm_automation_connection_certificate": "resourceAutomationConnectionCertificate",
        "azurerm_automation_connection_classic_certificate": "resourceAutomationConnectionClassicCertificate",
        "azurerm_automation_connection_service_principal": "resourceAutomationConnectionServicePrincipal",
        "azurerm_automation_credential": "resourceAutomationCredential",
        "azurerm_automation_dsc_configuration": "resourceAutomationDscConfiguration",
        "azurerm_automation_dsc_nodeconfiguration": "resourceAutomationDscNodeConfiguration",
        "azurerm_automation_job_schedule": "resourceAutomationJobSchedule",
        "azurerm_automation_module": "resourceAutomationModule",
        "azurerm_automation_runbook": "resourceAutomationRunbook",
        "azurerm_automation_schedule": "resourceAutomationSchedule",
        "azurerm_automation_variable_bool": "resourceAutomationVariableBool",
        "azurerm_automation_variable_datetime": "resourceAutomationVariableDateTime",
        "azurerm_automation_variable_int": "resourceAutomationVariableInt",
        "azurerm_automation_variable_object": "resourceAutomationVariableObject",
        "azurerm_automation_variable_string": "resourceAutomationVariableString",
        "azurerm_automation_webhook": "resourceAutomationWebhook"
      },
      "supported_data_sources": {
        "azurerm_automation_account": "dataSourceAutomationAccount",
        "azurerm_automation_variable_bool": "dataSourceAutomationVariableBool",
        "azurerm_automation_variable_datetime": "dataSourceAutomationVariableDateTime",
        "azurerm_automation_variable_int": "dataSourceAutomationVariableInt",
        "azurerm_automation_variable_object": "dataSourceAutomationVariableObject",
        "azurerm_automation_variable_string": "dataSourceAutomationVariableString"
      },
      "resources": [
        "AutomationConnectionTypeResource",
        "HybridRunbookWorkerGroupResource",
        "HybridRunbookWorkerResource",
        "SoftwareUpdateConfigurationResource",
        "SourceControlResource",
        "WatcherResource",
        "Python3PackageResource",
        "PowerShell72ModuleResource"
      ],
      "data_sources": [
        "AutomationVariablesDataSource",
        "AutomationRunbookDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_automation_account": {
          "create_method": "resourceAutomationAccountCreate",
          "read_method": "resourceAutomationAccountRead",
          "update_method": "resourceAutomationAccountUpdate",
          "delete_method": "resourceAutomationAccountDelete"
        },
        "azurerm_automation_certificate": {
          "create_method": "resourceAutomationCertificateCreateUpdate",
          "read_method": "resourceAutomationCertificateRead",
          "update_method": "resourceAutomationCertificateCreateUpdate",
          "delete_method": "resourceAutomationCertificateDelete"
        },
        "azurerm_automation_connection": {
          "create_method": "resourceAutomationConnectionCreateUpdate",
          "read_method": "resourceAutomationConnectionRead",
          "update_method": "resourceAutomationConnectionCreateUpdate",
          "delete_method": "resourceAutomationConnectionDelete"
        },
        "azurerm_automation_connection_certificate": {
          "create_method": "resourceAutomationConnectionCertificateCreateUpdate",
          "read_method": "resourceAutomationConnectionCertificateRead",
          "update_method": "resourceAutomationConnectionCertificateCreateUpdate",
          "delete_method": "resourceAutomationConnectionCertificateDelete"
        },
        "azurerm_automation_connection_classic_certificate": {
          "create_method": "resourceAutomationConnectionClassicCertificateCreateUpdate",
          "read_method": "resourceAutomationConnectionClassicCertificateRead",
          "update_method": "resourceAutomationConnectionClassicCertificateCreateUpdate",
          "delete_method": "resourceAutomationConnectionClassicCertificateDelete"
        },
        "azurerm_automation_connection_service_principal": {
          "create_method": "resourceAutomationConnectionServicePrincipalCreateUpdate",
          "read_method": "resourceAutomationConnectionServicePrincipalRead",
          "update_method": "resourceAutomationConnectionServicePrincipalCreateUpdate",
          "delete_method": "resourceAutomationConnectionServicePrincipalDelete"
        },
        "azurerm_automation_credential": {
          "create_method": "resourceAutomationCredentialCreateUpdate",
          "read_method": "resourceAutomationCredentialRead",
          "update_method": "resourceAutomationCredentialCreateUpdate",
          "delete_method": "resourceAutomationCredentialDelete"
        },
        "azurerm_automation_dsc_configuration": {
          "create_method": "resourceAutomationDscConfigurationCreateUpdate",
          "read_method": "resourceAutomationDscConfigurationRead",
          "update_method": "resourceAutomationDscConfigurationCreateUpdate",
          "delete_method": "resourceAutomationDscConfigurationDelete"
        },
        "azurerm_automation_dsc_nodeconfiguration": {
          "create_method": "resourceAutomationDscNodeConfigurationCreateUpdate",
          "read_method": "resourceAutomationDscNodeConfigurationRead",
          "update_method": "resourceAutomationDscNodeConfigurationCreateUpdate",
          "delete_method": "resourceAutomationDscNodeConfigurationDelete"
        },
        "azurerm_automation_job_schedule": {
          "create_method": "resourceAutomationJobScheduleCreate",
          "read_method": "resourceAutomationJobScheduleRead",
          "delete_method": "resourceAutomationJobScheduleDelete"
        },
        "azurerm_automation_module": {
          "create_method": "resourceAutomationModuleCreateUpdate",
          "read_method": "resourceAutomationModuleRead",
          "update_method": "resourceAutomationModuleCreateUpdate",
          "delete_method": "resourceAutomationModuleDelete"
        },
        "azurerm_automation_runbook": {
          "create_method": "resourceAutomationRunbookCreateUpdate",
          "read_method": "resourceAutomationRunbookRead",
          "update_method": "resourceAutomationRunbookCreateUpdate",
          "delete_method": "resourceAutomationRunbookDelete"
        },
        "azurerm_automation_schedule": {
          "create_method": "resourceAutomationScheduleCreate",
          "read_method": "resourceAutomationScheduleRead",
          "update_method": "resourceAutomationScheduleUpdate",
          "delete_method": "resourceAutomationScheduleDelete"
        },
        "azurerm_automation_variable_bool": {
          "create_method": "resourceAutomationVariableBoolCreateUpdate",
          "read_method": "resourceAutomationVariableBoolRead",
          "update_method": "resourceAutomationVariableBoolCreateUpdate",
          "delete_method": "resourceAutomationVariableBoolDelete"
        },
        "azurerm_automation_variable_datetime": {
          "create_method": "resourceAutomationVariableDateTimeCreateUpdate",
          "read_method": "resourceAutomationVariableDateTimeRead",
          "update_method": "resourceAutomationVariableDateTimeCreateUpdate",
          "delete_method": "resourceAutomationVariableDateTimeDelete"
        },
        "azurerm_automation_variable_int": {
          "create_method": "resourceAutomationVariableIntCreateUpdate",
          "read_method": "resourceAutomationVariableIntRead",
          "update_method": "resourceAutomationVariableIntCreateUpdate",
          "delete_method": "resourceAutomationVariableIntDelete"
        },
        "azurerm_automation_variable_object": {
          "create_method": "resourceAutomationVariableObjectCreate",
          "read_method": "resourceAutomationVariableObjectRead",
          "update_method": "resourceAutomationVariableObjectUpdate",
          "delete_method": "resourceAutomationVariableObjectDelete"
        },
        "azurerm_automation_variable_string": {
          "create_method": "resourceAutomationVariableStringCreateUpdate",
          "read_method": "resourceAutomationVariableStringRead",
          "update_method": "resourceAutomationVariableStringCreateUpdate",
          "delete_method": "resourceAutomationVariableStringDelete"
        },
        "azurerm_automation_webhook": {
          "create_method": "resourceAutomationWebhookCreateUpdate",
          "read_method": "resourceAutomationWebhookRead",
          "update_method": "resourceAutomationWebhookCreateUpdate",
          "delete_method": "resourceAutomationWebhookDelete"
        }
      },
      "data_source_methods": {
        "azurerm_automation_account": {
          "read_method": "dataSourceAutomationAccountRead"
        },
        "azurerm_automation_variable_bool": {
          "read_method": "dataSourceAutomationVariableBoolRead"
        },
        "azurerm_automation_variable_datetime": {
          "read_method": "dataSourceAutomationVariableDateTimeRead"
        },
        "azurerm_automation_variable_int": {
          "read_method": "dataSourceAutomationVariableIntRead"
        },
        "azurerm_automation_variable_object": {
          "read_method": "dataSourceAutomationVariableObjectRead"
        },
        "azurerm_automation_variable_string": {
          "read_method": "dataSourceAutomationVariableStringRead"
        }
      },
      "resource_terraform_types": {
        "AutomationConnectionTypeResource": "azurerm_automation_connection_type",
        "HybridRunbookWorkerGroupResource": "azurerm_automation_hybrid_runbook_worker_group",
        "HybridRunbookWorkerResource": "azurerm_automation_hybrid_runbook_worker",
        "PowerShell72ModuleResource": "azurerm_automation_powershell72_module",
        "Python3PackageResource": "azurerm_automation_python3_package",
        "SoftwareUpdateConfigurationResource": "azurerm_automation_software_update_configuration",
        "SourceControlResource": "azurerm_automation_source_control",
        "WatcherResource": "azurerm_automation_watcher"
      },
      "data_source_terraform_types": {
        "AutomationRunbookDataSource": "azurerm_automation_runbook",
        "AutomationVariablesDataSource": "azurerm_automation_variables"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "batch",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/batch",
      "supported_resources": {
        "azurerm_batch_account": "resourceBatchAccount",
        "azurerm_batch_application": "resourceBatchApplication",
        "azurerm_batch_certificate": "resourceBatchCertificate",
        "azurerm_batch_pool": "resourceBatchPool"
      },
      "supported_data_sources": {
        "azurerm_batch_account": "dataSourceBatchAccount",
        "azurerm_batch_application": "dataSourceBatchApplication",
        "azurerm_batch_certificate": "dataSourceBatchCertificate",
        "azurerm_batch_pool": "dataSourceBatchPool"
      },
      "resources": [
        "BatchJobResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_batch_account": {
          "create_method": "resourceBatchAccountCreate",
          "read_method": "resourceBatchAccountRead",
          "update_method": "resourceBatchAccountUpdate",
          "delete_method": "resourceBatchAccountDelete"
        },
        "azurerm_batch_application": {
          "create_method": "resourceBatchApplicationCreate",
          "read_method": "resourceBatchApplicationRead",
          "update_method": "resourceBatchApplicationUpdate",
          "delete_method": "resourceBatchApplicationDelete"
        },
        "azurerm_batch_certificate": {
          "create_method": "resourceBatchCertificateCreate",
          "read_method": "resourceBatchCertificateRead",
          "update_method": "resourceBatchCertificateUpdate",
          "delete_method": "resourceBatchCertificateDelete"
        },
        "azurerm_batch_pool": {
          "create_method": "resourceBatchPoolCreate",
          "read_method": "resourceBatchPoolRead",
          "update_method": "resourceBatchPoolUpdate",
          "delete_method": "resourceBatchPoolDelete"
        }
      },
      "data_source_methods": {
        "azurerm_batch_account": {
          "read_method": "dataSourceBatchAccountRead"
        },
        "azurerm_batch_application": {
          "read_method": "dataSourceBatchApplicationRead"
        },
        "azurerm_batch_certificate": {
          "read_method": "dataSourceBatchCertificateRead"
        },
        "azurerm_batch_pool": {
          "read_method": "dataSourceBatchPoolRead"
        }
      },
      "resource_terraform_types": {
        "BatchJobResource": "azurerm_batch_job"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "billing",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/billing",
      "supported_resources": {},
      "supported_data_sources": {
        "azurerm_billing_enrollment_account_scope": "dataSourceBillingEnrollmentAccountScope",
        "azurerm_billing_mca_account_scope": "dataSourceBillingMCAAccountScope",
        "azurerm_billing_mpa_account_scope": "dataSourceBillingMPAAccountScope"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {
        "azurerm_billing_enrollment_account_scope": {
          "read_method": "dataSourceBillingEnrollemntAccountRead"
        },
        "azurerm_billing_mca_account_scope": {
          "read_method": "dataSourceBillingMCAAccountRead"
        },
        "azurerm_billing_mpa_account_scope": {
          "read_method": "dataSourceBillingMPAAccountRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "bot",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/bot",
      "supported_resources": {
        "azurerm_bot_channel_alexa": "resourceBotChannelAlexa",
        "azurerm_bot_channel_direct_line_speech": "resourceBotChannelDirectLineSpeech",
        "azurerm_bot_channel_directline": "resourceBotChannelDirectline",
        "azurerm_bot_channel_email": "resourceBotChannelEmail",
        "azurerm_bot_channel_facebook": "resourceBotChannelFacebook",
        "azurerm_bot_channel_line": "resourceBotChannelLine",
        "azurerm_bot_channel_ms_teams": "resourceBotChannelMsTeams",
        "azurerm_bot_channel_slack": "resourceBotChannelSlack",
        "azurerm_bot_channel_sms": "resourceBotChannelSMS",
        "azurerm_bot_channel_web_chat": "resourceBotChannelWebChat",
        "azurerm_bot_channels_registration": "resourceBotChannelsRegistration",
        "azurerm_bot_connection": "resourceArmBotConnection",
        "azurerm_bot_web_app": "resourceBotWebApp",
        "azurerm_healthbot": "resourceHealthbotService"
      },
      "supported_data_sources": {},
      "resources": [
        "AzureBotServiceResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_bot_channel_alexa": {
          "create_method": "resourceBotChannelAlexaCreate",
          "read_method": "resourceBotChannelAlexaRead",
          "update_method": "resourceBotChannelAlexaUpdate",
          "delete_method": "resourceBotChannelAlexaDelete"
        },
        "azurerm_bot_channel_direct_line_speech": {
          "create_method": "resourceBotChannelDirectLineSpeechCreate",
          "read_method": "resourceBotChannelDirectLineSpeechRead",
          "update_method": "resourceBotChannelDirectLineSpeechUpdate",
          "delete_method": "resourceBotChannelDirectLineSpeechDelete"
        },
        "azurerm_bot_channel_directline": {
          "create_method": "resourceBotChannelDirectlineCreate",
          "read_method": "resourceBotChannelDirectlineRead",
          "update_method": "resourceBotChannelDirectlineUpdate",
          "delete_method": "resourceBotChannelDirectlineDelete"
        },
        "azurerm_bot_channel_email": {
          "create_method": "resourceBotChannelEmailCreate",
          "read_method": "resourceBotChannelEmailRead",
          "update_method": "resourceBotChannelEmailUpdate",
          "delete_method": "resourceBotChannelEmailDelete"
        },
        "azurerm_bot_channel_facebook": {
          "create_method": "resourceBotChannelFacebookCreate",
          "read_method": "resourceBotChannelFacebookRead",
          "update_method": "resourceBotChannelFacebookUpdate",
          "delete_method": "resourceBotChannelFacebookDelete"
        },
        "azurerm_bot_channel_line": {
          "create_method": "resourceBotChannelLineCreate",
          "read_method": "resourceBotChannelLineRead",
          "update_method": "resourceBotChannelLineUpdate",
          "delete_method": "resourceBotChannelLineDelete"
        },
        "azurerm_bot_channel_ms_teams": {
          "create_method": "resourceBotChannelMsTeamsCreate",
          "read_method": "resourceBotChannelMsTeamsRead",
          "update_method": "resourceBotChannelMsTeamsUpdate",
          "delete_method": "resourceBotChannelMsTeamsDelete"
        },
        "azurerm_bot_channel_slack": {
          "create_method": "resourceBotChannelSlackCreate",
          "read_method": "resourceBotChannelSlackRead",
          "update_method": "resourceBotChannelSlackUpdate",
          "delete_method": "resourceBotChannelSlackDelete"
        },
        "azurerm_bot_channel_sms": {
          "create_method": "resourceBotChannelSMSCreate",
          "read_method": "resourceBotChannelSMSRead",
          "update_method": "resourceBotChannelSMSUpdate",
          "delete_method": "resourceBotChannelSMSDelete"
        },
        "azurerm_bot_channel_web_chat": {
          "create_method": "resourceBotChannelWebChatCreate",
          "read_method": "resourceBotChannelWebChatRead",
          "update_method": "resourceBotChannelWebChatUpdate",
          "delete_method": "resourceBotChannelWebChatDelete"
        },
        "azurerm_bot_channels_registration": {
          "create_method": "resourceBotChannelsRegistrationCreate",
          "read_method": "resourceBotChannelsRegistrationRead",
          "update_method": "resourceBotChannelsRegistrationUpdate",
          "delete_method": "resourceBotChannelsRegistrationDelete"
        },
        "azurerm_bot_connection": {
          "create_method": "resourceArmBotConnectionCreate",
          "read_method": "resourceArmBotConnectionRead",
          "update_method": "resourceArmBotConnectionUpdate",
          "delete_method": "resourceArmBotConnectionDelete"
        },
        "azurerm_bot_web_app": {
          "create_method": "resourceBotWebAppCreate",
          "read_method": "resourceBotWebAppRead",
          "update_method": "resourceBotWebAppUpdate",
          "delete_method": "resourceBotWebAppDelete"
        },
        "azurerm_healthbot": {
          "create_method": "resourceHealthbotServiceCreate",
          "read_method": "resourceHealthbotServiceRead",
          "update_method": "resourceHealthbotServiceUpdate",
          "delete_method": "resourceHealthbotServiceDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {
        "AzureBotServiceResource": "azurerm_bot_service_azure_bot"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "blueprints",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/blueprints",
      "supported_resources": {
        "azurerm_blueprint_assignment": "resourceBlueprintAssignment"
      },
      "supported_data_sources": {
        "azurerm_blueprint_definition": "dataSourceBlueprintDefinition",
        "azurerm_blueprint_published_version": "dataSourceBlueprintPublishedVersion"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_blueprint_assignment": {
          "create_method": "resourceBlueprintAssignmentCreateUpdate",
          "read_method": "resourceBlueprintAssignmentRead",
          "update_method": "resourceBlueprintAssignmentCreateUpdate",
          "delete_method": "resourceBlueprintAssignmentDelete"
        }
      },
      "data_source_methods": {
        "azurerm_blueprint_definition": {
          "read_method": "dataSourceBlueprintDefinitionRead"
        },
        "azurerm_blueprint_published_version": {
          "read_method": "dataSourceBlueprintPublishedVersionRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "cdn",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn",
      "supported_resources": {
        "azurerm_cdn_endpoint": "resourceCdnEndpoint",
        "azurerm_cdn_endpoint_custom_domain": "resourceArmCdnEndpointCustomDomain",
        "azurerm_cdn_frontdoor_custom_domain": "resourceCdnFrontDoorCustomDomain",
        "azurerm_cdn_frontdoor_custom_domain_association": "resourceCdnFrontDoorCustomDomainAssociation",
        "azurerm_cdn_frontdoor_endpoint": "resourceCdnFrontDoorEndpoint",
        "azurerm_cdn_frontdoor_firewall_policy": "resourceCdnFrontDoorFirewallPolicy",
        "azurerm_cdn_frontdoor_origin": "resourceCdnFrontDoorOrigin",
        "azurerm_cdn_frontdoor_origin_group": "resourceCdnFrontDoorOriginGroup",
        "azurerm_cdn_frontdoor_profile": "resourceCdnFrontDoorProfile",
        "azurerm_cdn_frontdoor_route": "resourceCdnFrontDoorRoute",
        "azurerm_cdn_frontdoor_rule": "resourceCdnFrontDoorRule",
        "azurerm_cdn_frontdoor_rule_set": "resourceCdnFrontDoorRuleSet",
        "azurerm_cdn_frontdoor_secret": "resourceCdnFrontDoorSecret",
        "azurerm_cdn_frontdoor_security_policy": "resourceCdnFrontDoorSecurityPolicy",
        "azurerm_cdn_profile": "resourceCdnProfile"
      },
      "supported_data_sources": {
        "azurerm_cdn_frontdoor_custom_domain": "dataSourceCdnFrontDoorCustomDomain",
        "azurerm_cdn_frontdoor_endpoint": "dataSourceCdnFrontDoorEndpoint",
        "azurerm_cdn_frontdoor_firewall_policy": "dataSourceCdnFrontDoorFirewallPolicy",
        "azurerm_cdn_frontdoor_origin_group": "dataSourceCdnFrontDoorOriginGroup",
        "azurerm_cdn_frontdoor_profile": "dataSourceCdnFrontDoorProfile",
        "azurerm_cdn_frontdoor_rule_set": "dataSourceCdnFrontDoorRuleSet",
        "azurerm_cdn_frontdoor_secret": "dataSourceCdnFrontDoorSecret",
        "azurerm_cdn_profile": "dataSourceCdnProfile"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_cdn_endpoint": {
          "create_method": "resourceCdnEndpointCreate",
          "read_method": "resourceCdnEndpointRead",
          "update_method": "resourceCdnEndpointUpdate",
          "delete_method": "resourceCdnEndpointDelete"
        },
        "azurerm_cdn_endpoint_custom_domain": {
          "create_method": "resourceArmCdnEndpointCustomDomainCreate",
          "read_method": "resourceArmCdnEndpointCustomDomainRead",
          "update_method": "resourceArmCdnEndpointCustomDomainUpdate",
          "delete_method": "resourceArmCdnEndpointCustomDomainDelete"
        },
        "azurerm_cdn_frontdoor_custom_domain": {
          "create_method": "resourceCdnFrontDoorCustomDomainCreate",
          "read_method": "resourceCdnFrontDoorCustomDomainRead",
          "update_method": "resourceCdnFrontDoorCustomDomainUpdate",
          "delete_method": "resourceCdnFrontDoorCustomDomainDelete"
        },
        "azurerm_cdn_frontdoor_custom_domain_association": {
          "create_method": "resourceCdnFrontDoorCustomDomainAssociationCreate",
          "read_method": "resourceCdnFrontDoorCustomDomainAssociationRead",
          "update_method": "resourceCdnFrontDoorCustomDomainAssociationUpdate",
          "delete_method": "resourceCdnFrontDoorCustomDomainAssociationDelete"
        },
        "azurerm_cdn_frontdoor_endpoint": {
          "create_method": "resourceCdnFrontDoorEndpointCreate",
          "read_method": "resourceCdnFrontDoorEndpointRead",
          "update_method": "resourceCdnFrontDoorEndpointUpdate",
          "delete_method": "resourceCdnFrontDoorEndpointDelete"
        },
        "azurerm_cdn_frontdoor_firewall_policy": {
          "create_method": "resourceCdnFrontDoorFirewallPolicyCreate",
          "read_method": "resourceCdnFrontDoorFirewallPolicyRead",
          "update_method": "resourceCdnFrontDoorFirewallPolicyUpdate",
          "delete_method": "resourceCdnFrontDoorFirewallPolicyDelete"
        },
        "azurerm_cdn_frontdoor_origin": {
          "create_method": "resourceCdnFrontDoorOriginCreate",
          "read_method": "resourceCdnFrontDoorOriginRead",
          "update_method": "resourceCdnFrontDoorOriginUpdate",
          "delete_method": "resourceCdnFrontDoorOriginDelete"
        },
        "azurerm_cdn_frontdoor_origin_group": {
          "create_method": "resourceCdnFrontDoorOriginGroupCreate",
          "read_method": "resourceCdnFrontDoorOriginGroupRead",
          "update_method": "resourceCdnFrontDoorOriginGroupUpdate",
          "delete_method": "resourceCdnFrontDoorOriginGroupDelete"
        },
        "azurerm_cdn_frontdoor_profile": {
          "create_method": "resourceCdnFrontDoorProfileCreate",
          "read_method": "resourceCdnFrontDoorProfileRead",
          "update_method": "resourceCdnFrontDoorProfileUpdate",
          "delete_method": "resourceCdnFrontDoorProfileDelete"
        },
        "azurerm_cdn_frontdoor_route": {
          "create_method": "resourceCdnFrontDoorRouteCreate",
          "read_method": "resourceCdnFrontDoorRouteRead",
          "update_method": "resourceCdnFrontDoorRouteUpdate",
          "delete_method": "resourceCdnFrontDoorRouteDelete"
        },
        "azurerm_cdn_frontdoor_rule": {
          "create_method": "resourceCdnFrontDoorRuleCreate",
          "read_method": "resourceCdnFrontDoorRuleRead",
          "update_method": "resourceCdnFrontDoorRuleUpdate",
          "delete_method": "resourceCdnFrontDoorRuleDelete"
        },
        "azurerm_cdn_frontdoor_rule_set": {
          "create_method": "resourceCdnFrontDoorRuleSetCreate",
          "read_method": "resourceCdnFrontDoorRuleSetRead",
          "delete_method": "resourceCdnFrontDoorRuleSetDelete"
        },
        "azurerm_cdn_frontdoor_secret": {
          "create_method": "resourceCdnFrontDoorSecretCreate",
          "read_method": "resourceCdnFrontDoorSecretRead",
          "delete_method": "resourceCdnFrontDoorSecretDelete"
        },
        "azurerm_cdn_frontdoor_security_policy": {
          "create_method": "resourceCdnFrontdoorSecurityPolicyCreate",
          "read_method": "resourceCdnFrontdoorSecurityPolicyRead",
          "delete_method": "resourceCdnFrontdoorSecurityPolicyDelete"
        },
        "azurerm_cdn_profile": {
          "create_method": "resourceCdnProfileCreate",
          "read_method": "resourceCdnProfileRead",
          "update_method": "resourceCdnProfileUpdate",
          "delete_method": "resourceCdnProfileDelete"
        }
      },
      "data_source_methods": {
        "azurerm_cdn_frontdoor_custom_domain": {
          "read_method": "dataSourceCdnFrontDoorCustomDomainRead"
        },
        "azurerm_cdn_frontdoor_endpoint": {
          "read_method": "dataSourceCdnFrontDoorEndpointRead"
        },
        "azurerm_cdn_frontdoor_firewall_policy": {
          "read_method": "dataSourceCdnFrontDoorFirewallPolicyRead"
        },
        "azurerm_cdn_frontdoor_origin_group": {
          "read_method": "dataSourceCdnFrontDoorOriginGroupRead"
        },
        "azurerm_cdn_frontdoor_profile": {
          "read_method": "dataSourceCdnFrontDoorProfileRead"
        },
        "azurerm_cdn_frontdoor_rule_set": {
          "read_method": "dataSourceCdnFrontDoorRuleSetRead"
        },
        "azurerm_cdn_frontdoor_secret": {
          "read_method": "dataSourceCdnFrontDoorSecretRead"
        },
        "azurerm_cdn_profile": {
          "read_method": "dataSourceCdnProfileRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "chaosstudio",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/chaosstudio",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "ChaosStudioCapabilityResource",
        "ChaosStudioExperimentResource",
        "ChaosStudioTargetResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "ChaosStudioCapabilityResource": "azurerm_chaos_studio_capability",
        "ChaosStudioExperimentResource": "azurerm_chaos_studio_experiment",
        "ChaosStudioTargetResource": "azurerm_chaos_studio_target"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "codesigning",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/codesigning",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "TrustedSigningAccountResource"
      ],
      "data_sources": [
        "TrustedSigningAccountDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "TrustedSigningAccountResource": "azurerm_trusted_signing_account"
      },
      "data_source_terraform_types": {
        "TrustedSigningAccountDataSource": "azurerm_trusted_signing_account"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "cognitive",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/cognitive",
      "supported_resources": {
        "azurerm_cognitive_account": "resourceCognitiveAccount",
        "azurerm_cognitive_account_customer_managed_key": "resourceCognitiveAccountCustomerManagedKey"
      },
      "supported_data_sources": {
        "azurerm_cognitive_account": "dataSourceCognitiveAccount"
      },
      "resources": [
        "AIServices",
        "CognitiveAccountRaiPolicyResource",
        "CognitiveDeploymentResource",
        "CognitiveRaiBlocklistResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_cognitive_account": {
          "create_method": "resourceCognitiveAccountCreate",
          "read_method": "resourceCognitiveAccountRead",
          "update_method": "resourceCognitiveAccountUpdate",
          "delete_method": "resourceCognitiveAccountDelete"
        },
        "azurerm_cognitive_account_customer_managed_key": {
          "create_method": "resourceCognitiveAccountCustomerManagedKeyCreateUpdate",
          "read_method": "resourceCognitiveAccountCustomerManagedKeyRead",
          "update_method": "resourceCognitiveAccountCustomerManagedKeyCreateUpdate",
          "delete_method": "resourceCognitiveAccountCustomerManagedKeyDelete"
        }
      },
      "data_source_methods": {
        "azurerm_cognitive_account": {
          "read_method": "dataSourceCognitiveAccountRead"
        }
      },
      "resource_terraform_types": {
        "AIServices": "azurerm_ai_services",
        "CognitiveAccountRaiPolicyResource": "azurerm_cognitive_account_rai_policy",
        "CognitiveDeploymentResource": "azurerm_cognitive_deployment",
        "CognitiveRaiBlocklistResource": "azurerm_cognitive_account_rai_blocklist"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "communication",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/communication",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "EmailCommunicationServiceDomainSenderUsernameResource",
        "EmailCommunicationServiceDomainResource",
        "EmailCommunicationServiceResource",
        "EmailDomainAssociationResource",
        "CommunicationServiceResource"
      ],
      "data_sources": [
        "CommunicationServiceDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "CommunicationServiceResource": "azurerm_communication_service",
        "EmailCommunicationServiceDomainResource": "azurerm_email_communication_service_domain",
        "EmailCommunicationServiceDomainSenderUsernameResource": "azurerm_email_communication_service_domain_sender_username",
        "EmailCommunicationServiceResource": "azurerm_email_communication_service",
        "EmailDomainAssociationResource": "azurerm_communication_service_email_domain_association"
      },
      "data_source_terraform_types": {
        "CommunicationServiceDataSource": "azurerm_communication_service"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "compute",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/compute",
      "supported_resources": {
        "azurerm_availability_set": "resourceAvailabilitySet",
        "azurerm_capacity_reservation": "resourceCapacityReservation",
        "azurerm_capacity_reservation_group": "resourceCapacityReservationGroup",
        "azurerm_dedicated_host": "resourceDedicatedHost",
        "azurerm_dedicated_host_group": "resourceDedicatedHostGroup",
        "azurerm_disk_access": "resourceDiskAccess",
        "azurerm_disk_encryption_set": "resourceDiskEncryptionSet",
        "azurerm_image": "resourceImage",
        "azurerm_linux_virtual_machine": "resourceLinuxVirtualMachine",
        "azurerm_linux_virtual_machine_scale_set": "resourceLinuxVirtualMachineScaleSet",
        "azurerm_managed_disk": "resourceManagedDisk",
        "azurerm_managed_disk_sas_token": "resourceManagedDiskSasToken",
        "azurerm_marketplace_agreement": "resourceMarketplaceAgreement",
        "azurerm_orchestrated_virtual_machine_scale_set": "resourceOrchestratedVirtualMachineScaleSet",
        "azurerm_proximity_placement_group": "resourceProximityPlacementGroup",
        "azurerm_shared_image": "resourceSharedImage",
        "azurerm_shared_image_gallery": "resourceSharedImageGallery",
        "azurerm_shared_image_version": "resourceSharedImageVersion",
        "azurerm_snapshot": "resourceSnapshot",
        "azurerm_ssh_public_key": "resourceSshPublicKey",
        "azurerm_virtual_machine_data_disk_attachment": "resourceVirtualMachineDataDiskAttachment",
        "azurerm_virtual_machine_extension": "resourceVirtualMachineExtension",
        "azurerm_virtual_machine_scale_set_extension": "resourceVirtualMachineScaleSetExtension",
        "azurerm_windows_virtual_machine": "resourceWindowsVirtualMachine",
        "azurerm_windows_virtual_machine_scale_set": "resourceWindowsVirtualMachineScaleSet"
      },
      "supported_data_sources": {
        "azurerm_availability_set": "dataSourceAvailabilitySet",
        "azurerm_dedicated_host": "dataSourceDedicatedHost",
        "azurerm_dedicated_host_group": "dataSourceDedicatedHostGroup",
        "azurerm_disk_access": "dataSourceDiskAccess",
        "azurerm_disk_encryption_set": "dataSourceDiskEncryptionSet",
        "azurerm_image": "dataSourceImage",
        "azurerm_images": "dataSourceImages",
        "azurerm_managed_disk": "dataSourceManagedDisk",
        "azurerm_marketplace_agreement": "dataSourceMarketplaceAgreement",
        "azurerm_platform_image": "dataSourcePlatformImage",
        "azurerm_proximity_placement_group": "dataSourceProximityPlacementGroup",
        "azurerm_shared_image": "dataSourceSharedImage",
        "azurerm_shared_image_gallery": "dataSourceSharedImageGallery",
        "azurerm_shared_image_version": "dataSourceSharedImageVersion",
        "azurerm_shared_image_versions": "dataSourceSharedImageVersions",
        "azurerm_snapshot": "dataSourceSnapshot",
        "azurerm_ssh_public_key": "dataSourceSshPublicKey",
        "azurerm_virtual_machine": "dataSourceVirtualMachine",
        "azurerm_virtual_machine_scale_set": "dataSourceVirtualMachineScaleSet"
      },
      "resources": [
        "VirtualMachineImplicitDataDiskFromSourceResource",
        "VirtualMachineRunCommandResource",
        "GalleryApplicationResource",
        "GalleryApplicationVersionResource",
        "RestorePointCollectionResource",
        "VirtualMachineRestorePointCollectionResource",
        "VirtualMachineRestorePointResource",
        "VirtualMachineGalleryApplicationAssignmentResource",
        "VirtualMachineScaleSetStandbyPoolResource"
      ],
      "data_sources": [
        "OrchestratedVirtualMachineScaleSetDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_availability_set": {
          "create_method": "resourceAvailabilitySetCreateUpdate",
          "read_method": "resourceAvailabilitySetRead",
          "update_method": "resourceAvailabilitySetCreateUpdate",
          "delete_method": "resourceAvailabilitySetDelete"
        },
        "azurerm_capacity_reservation": {
          "create_method": "resourceCapacityReservationCreate",
          "read_method": "resourceCapacityReservationRead",
          "update_method": "resourceCapacityReservationUpdate",
          "delete_method": "resourceCapacityReservationDelete"
        },
        "azurerm_capacity_reservation_group": {
          "create_method": "resourceCapacityReservationGroupCreate",
          "read_method": "resourceCapacityReservationGroupRead",
          "update_method": "resourceCapacityReservationGroupUpdate",
          "delete_method": "resourceCapacityReservationGroupDelete"
        },
        "azurerm_dedicated_host": {
          "create_method": "resourceDedicatedHostCreate",
          "read_method": "resourceDedicatedHostRead",
          "update_method": "resourceDedicatedHostUpdate",
          "delete_method": "resourceDedicatedHostDelete"
        },
        "azurerm_dedicated_host_group": {
          "create_method": "resourceDedicatedHostGroupCreate",
          "read_method": "resourceDedicatedHostGroupRead",
          "update_method": "resourceDedicatedHostGroupUpdate",
          "delete_method": "resourceDedicatedHostGroupDelete"
        },
        "azurerm_disk_access": {
          "create_method": "resourceDiskAccessCreateUpdate",
          "read_method": "resourceDiskAccessRead",
          "update_method": "resourceDiskAccessCreateUpdate",
          "delete_method": "resourceDiskAccessDelete"
        },
        "azurerm_disk_encryption_set": {
          "create_method": "resourceDiskEncryptionSetCreate",
          "read_method": "resourceDiskEncryptionSetRead",
          "update_method": "resourceDiskEncryptionSetUpdate",
          "delete_method": "resourceDiskEncryptionSetDelete"
        },
        "azurerm_image": {
          "create_method": "resourceImageCreateUpdate",
          "read_method": "resourceImageRead",
          "update_method": "resourceImageCreateUpdate",
          "delete_method": "resourceImageDelete"
        },
        "azurerm_linux_virtual_machine": {
          "create_method": "resourceLinuxVirtualMachineCreate",
          "read_method": "resourceLinuxVirtualMachineRead",
          "update_method": "resourceLinuxVirtualMachineUpdate",
          "delete_method": "resourceLinuxVirtualMachineDelete"
        },
        "azurerm_linux_virtual_machine_scale_set": {
          "create_method": "resourceLinuxVirtualMachineScaleSetCreate",
          "read_method": "resourceLinuxVirtualMachineScaleSetRead",
          "update_method": "resourceLinuxVirtualMachineScaleSetUpdate",
          "delete_method": "resourceLinuxVirtualMachineScaleSetDelete"
        },
        "azurerm_managed_disk": {
          "create_method": "resourceManagedDiskCreate",
          "read_method": "resourceManagedDiskRead",
          "update_method": "resourceManagedDiskUpdate",
          "delete_method": "resourceManagedDiskDelete"
        },
        "azurerm_managed_disk_sas_token": {
          "create_method": "resourceManagedDiskSasTokenCreate",
          "read_method": "resourceManagedDiskSasTokenRead",
          "delete_method": "resourceManagedDiskSasTokenDelete"
        },
        "azurerm_marketplace_agreement": {
          "create_method": "resourceMarketplaceAgreementCreate",
          "read_method": "resourceMarketplaceAgreementRead",
          "delete_method": "resourceMarketplaceAgreementDelete"
        },
        "azurerm_orchestrated_virtual_machine_scale_set": {
          "create_method": "resourceOrchestratedVirtualMachineScaleSetCreate",
          "read_method": "resourceOrchestratedVirtualMachineScaleSetRead",
          "update_method": "resourceOrchestratedVirtualMachineScaleSetUpdate",
          "delete_method": "resourceOrchestratedVirtualMachineScaleSetDelete"
        },
        "azurerm_proximity_placement_group": {
          "create_method": "resourceProximityPlacementGroupCreateUpdate",
          "read_method": "resourceProximityPlacementGroupRead",
          "update_method": "resourceProximityPlacementGroupCreateUpdate",
          "delete_method": "resourceProximityPlacementGroupDelete"
        },
        "azurerm_shared_image": {
          "create_method": "resourceSharedImageCreate",
          "read_method": "resourceSharedImageRead",
          "update_method": "resourceSharedImageUpdate",
          "delete_method": "resourceSharedImageDelete"
        },
        "azurerm_shared_image_gallery": {
          "create_method": "resourceSharedImageGalleryCreate",
          "read_method": "resourceSharedImageGalleryRead",
          "update_method": "resourceSharedImageGalleryUpdate",
          "delete_method": "resourceSharedImageGalleryDelete"
        },
        "azurerm_shared_image_version": {
          "create_method": "resourceSharedImageVersionCreate",
          "read_method": "resourceSharedImageVersionRead",
          "update_method": "resourceSharedImageVersionUpdate",
          "delete_method": "resourceSharedImageVersionDelete"
        },
        "azurerm_snapshot": {
          "create_method": "resourceSnapshotCreateUpdate",
          "read_method": "resourceSnapshotRead",
          "update_method": "resourceSnapshotCreateUpdate",
          "delete_method": "resourceSnapshotDelete"
        },
        "azurerm_ssh_public_key": {
          "create_method": "resourceSshPublicKeyCreate",
          "read_method": "resourceSshPublicKeyRead",
          "update_method": "resourceSshPublicKeyUpdate",
          "delete_method": "resourceSshPublicKeyDelete"
        },
        "azurerm_virtual_machine_data_disk_attachment": {
          "create_method": "resourceVirtualMachineDataDiskAttachmentCreateUpdate",
          "read_method": "resourceVirtualMachineDataDiskAttachmentRead",
          "update_method": "resourceVirtualMachineDataDiskAttachmentCreateUpdate",
          "delete_method": "resourceVirtualMachineDataDiskAttachmentDelete"
        },
        "azurerm_virtual_machine_extension": {
          "create_method": "resourceVirtualMachineExtensionsCreateUpdate",
          "read_method": "resourceVirtualMachineExtensionsRead",
          "update_method": "resourceVirtualMachineExtensionsCreateUpdate",
          "delete_method": "resourceVirtualMachineExtensionsDelete"
        },
        "azurerm_virtual_machine_scale_set_extension": {
          "create_method": "resourceVirtualMachineScaleSetExtensionCreate",
          "read_method": "resourceVirtualMachineScaleSetExtensionRead",
          "update_method": "resourceVirtualMachineScaleSetExtensionUpdate",
          "delete_method": "resourceVirtualMachineScaleSetExtensionDelete"
        },
        "azurerm_windows_virtual_machine": {
          "create_method": "resourceWindowsVirtualMachineCreate",
          "read_method": "resourceWindowsVirtualMachineRead",
          "update_method": "resourceWindowsVirtualMachineUpdate",
          "delete_method": "resourceWindowsVirtualMachineDelete"
        },
        "azurerm_windows_virtual_machine_scale_set": {
          "create_method": "resourceWindowsVirtualMachineScaleSetCreate",
          "read_method": "resourceWindowsVirtualMachineScaleSetRead",
          "update_method": "resourceWindowsVirtualMachineScaleSetUpdate",
          "delete_method": "resourceWindowsVirtualMachineScaleSetDelete"
        }
      },
      "data_source_methods": {
        "azurerm_availability_set": {
          "read_method": "dataSourceAvailabilitySetRead"
        },
        "azurerm_dedicated_host": {
          "read_method": "dataSourceDedicatedHostRead"
        },
        "azurerm_dedicated_host_group": {
          "read_method": "dataSourceDedicatedHostGroupRead"
        },
        "azurerm_disk_access": {
          "read_method": "dataSourceDiskAccessRead"
        },
        "azurerm_disk_encryption_set": {
          "read_method": "dataSourceDiskEncryptionSetRead"
        },
        "azurerm_image": {
          "read_method": "dataSourceImageRead"
        },
        "azurerm_images": {
          "read_method": "dataSourceImagesRead"
        },
        "azurerm_managed_disk": {
          "read_method": "dataSourceManagedDiskRead"
        },
        "azurerm_marketplace_agreement": {
          "read_method": "dataSourceMarketplaceAgreementRead"
        },
        "azurerm_platform_image": {
          "read_method": "dataSourcePlatformImageRead"
        },
        "azurerm_proximity_placement_group": {
          "read_method": "dataSourceProximityPlacementGroupRead"
        },
        "azurerm_shared_image": {
          "read_method": "dataSourceSharedImageRead"
        },
        "azurerm_shared_image_gallery": {
          "read_method": "dataSourceSharedImageGalleryRead"
        },
        "azurerm_shared_image_version": {
          "read_method": "dataSourceSharedImageVersionRead"
        },
        "azurerm_shared_image_versions": {
          "read_method": "dataSourceSharedImageVersionsRead"
        },
        "azurerm_snapshot": {
          "read_method": "dataSourceSnapshotRead"
        },
        "azurerm_ssh_public_key": {
          "read_method": "dataSourceSshPublicKeyRead"
        },
        "azurerm_virtual_machine": {
          "read_method": "dataSourceVirtualMachineRead"
        },
        "azurerm_virtual_machine_scale_set": {
          "read_method": "dataSourceVirtualMachineScaleSetRead"
        }
      },
      "resource_terraform_types": {
        "GalleryApplicationResource": "azurerm_gallery_application",
        "GalleryApplicationVersionResource": "azurerm_gallery_application_version",
        "RestorePointCollectionResource": "azurerm_restore_point_collection",
        "VirtualMachineGalleryApplicationAssignmentResource": "azurerm_virtual_machine_gallery_application_assignment",
        "VirtualMachineImplicitDataDiskFromSourceResource": "azurerm_virtual_machine_implicit_data_disk_from_source",
        "VirtualMachineRestorePointCollectionResource": "azurerm_virtual_machine_restore_point_collection",
        "VirtualMachineRestorePointResource": "azurerm_virtual_machine_restore_point",
        "VirtualMachineRunCommandResource": "azurerm_virtual_machine_run_command",
        "VirtualMachineScaleSetStandbyPoolResource": "azurerm_virtual_machine_scale_set_standby_pool"
      },
      "data_source_terraform_types": {
        "OrchestratedVirtualMachineScaleSetDataSource": "azurerm_orchestrated_virtual_machine_scale_set"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "confidentialledger",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/confidentialledger",
      "supported_resources": {
        "azurerm_confidential_ledger": "resourceConfidentialLedger"
      },
      "supported_data_sources": {
        "azurerm_confidential_ledger": "dataSourceConfidentialLedger"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_confidential_ledger": {
          "create_method": "resourceConfidentialLedgerCreate",
          "read_method": "resourceConfidentialLedgerRead",
          "update_method": "resourceConfidentialLedgerUpdate",
          "delete_method": "resourceConfidentialLedgerDelete"
        }
      },
      "data_source_methods": {
        "azurerm_confidential_ledger": {
          "read_method": "dataSourceConfidentialLedgerRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "connections",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/connections",
      "supported_resources": {
        "azurerm_api_connection": "resourceApiConnection"
      },
      "supported_data_sources": {
        "azurerm_managed_api": "dataSourceManagedApi"
      },
      "resources": [],
      "data_sources": [
        "ApiConnectionDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_api_connection": {
          "create_method": "resourceApiConnectionCreate",
          "read_method": "resourceApiConnectionRead",
          "update_method": "resourceApiConnectionUpdate",
          "delete_method": "resourceApiConnectionDelete"
        }
      },
      "data_source_methods": {
        "azurerm_managed_api": {
          "read_method": "dataSourceManagedApiRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {
        "ApiConnectionDataSource": "azurerm_api_connection"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "consumption",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/consumption",
      "supported_resources": {},
      "supported_data_sources": {
        "azurerm_consumption_budget_resource_group": "resourceArmConsumptionBudgetResourceGroupDataSource",
        "azurerm_consumption_budget_subscription": "resourceArmConsumptionBudgetSubscriptionDataSource"
      },
      "resources": [
        "ManagementGroupConsumptionBudget",
        "ResourceGroupConsumptionBudget",
        "SubscriptionConsumptionBudget"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {
        "azurerm_consumption_budget_resource_group": {
          "read_method": "resourceArmConsumptionBudgetResourceGroupDataSourceRead"
        },
        "azurerm_consumption_budget_subscription": {
          "read_method": "resourceArmConsumptionBudgetSubscriptionDataSourceRead"
        }
      },
      "resource_terraform_types": {
        "ManagementGroupConsumptionBudget": "azurerm_consumption_budget_management_group",
        "ResourceGroupConsumptionBudget": "azurerm_consumption_budget_resource_group",
        "SubscriptionConsumptionBudget": "azurerm_consumption_budget_subscription"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "containerapps",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/containerapps",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "ContainerAppEnvironmentCertificateResource",
        "ContainerAppEnvironmentCustomDomainResource",
        "ContainerAppEnvironmentDaprComponentResource",
        "ContainerAppEnvironmentResource",
        "ContainerAppEnvironmentStorageResource",
        "ContainerAppResource",
        "ContainerAppCustomDomainResource",
        "ContainerAppJobResource"
      ],
      "data_sources": [
        "ContainerAppDataSource",
        "ContainerAppEnvironmentDataSource",
        "ContainerAppEnvironmentCertificateDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "ContainerAppCustomDomainResource": "azurerm_container_app_custom_domain",
        "ContainerAppEnvironmentCertificateResource": "azurerm_container_app_environment_certificate",
        "ContainerAppEnvironmentCustomDomainResource": "azurerm_container_app_environment_custom_domain",
        "ContainerAppEnvironmentDaprComponentResource": "azurerm_container_app_environment_dapr_component",
        "ContainerAppEnvironmentResource": "azurerm_container_app_environment",
        "ContainerAppEnvironmentStorageResource": "azurerm_container_app_environment_storage",
        "ContainerAppJobResource": "azurerm_container_app_job",
        "ContainerAppResource": "azurerm_container_app"
      },
      "data_source_terraform_types": {
        "ContainerAppDataSource": "azurerm_container_app",
        "ContainerAppEnvironmentCertificateDataSource": "azurerm_container_app_environment_certificate",
        "ContainerAppEnvironmentDataSource": "azurerm_container_app_environment"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "costmanagement",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/costmanagement",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "BillingAccountCostManagementExportResource",
        "ResourceGroupCostManagementExportResource",
        "SubscriptionCostManagementExportResource",
        "SubscriptionCostManagementViewResource",
        "ResourceGroupCostManagementViewResource",
        "CostManagementScheduledActionResource",
        "AnomalyAlertResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "AnomalyAlertResource": "azurerm_cost_anomaly_alert",
        "BillingAccountCostManagementExportResource": "azurerm_billing_account_cost_management_export",
        "CostManagementScheduledActionResource": "azurerm_cost_management_scheduled_action",
        "ResourceGroupCostManagementExportResource": "azurerm_resource_group_cost_management_export",
        "ResourceGroupCostManagementViewResource": "azurerm_resource_group_cost_management_view",
        "SubscriptionCostManagementExportResource": "azurerm_subscription_cost_management_export",
        "SubscriptionCostManagementViewResource": "azurerm_subscription_cost_management_view"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "cosmos",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/cosmos",
      "supported_resources": {
        "azurerm_cosmosdb_account": "resourceCosmosDbAccount",
        "azurerm_cosmosdb_cassandra_cluster": "resourceCassandraCluster",
        "azurerm_cosmosdb_cassandra_datacenter": "resourceCassandraDatacenter",
        "azurerm_cosmosdb_cassandra_keyspace": "resourceCosmosDbCassandraKeyspace",
        "azurerm_cosmosdb_cassandra_table": "resourceCosmosDbCassandraTable",
        "azurerm_cosmosdb_gremlin_database": "resourceCosmosGremlinDatabase",
        "azurerm_cosmosdb_gremlin_graph": "resourceCosmosDbGremlinGraph",
        "azurerm_cosmosdb_mongo_collection": "resourceCosmosDbMongoCollection",
        "azurerm_cosmosdb_mongo_database": "resourceCosmosDbMongoDatabase",
        "azurerm_cosmosdb_sql_container": "resourceCosmosDbSQLContainer",
        "azurerm_cosmosdb_sql_database": "resourceCosmosDbSQLDatabase",
        "azurerm_cosmosdb_sql_function": "resourceCosmosDbSQLFunction",
        "azurerm_cosmosdb_sql_role_assignment": "resourceCosmosDbSQLRoleAssignment",
        "azurerm_cosmosdb_sql_role_definition": "resourceCosmosDbSQLRoleDefinition",
        "azurerm_cosmosdb_sql_stored_procedure": "resourceCosmosDbSQLStoredProcedure",
        "azurerm_cosmosdb_sql_trigger": "resourceCosmosDbSQLTrigger",
        "azurerm_cosmosdb_table": "resourceCosmosDbTable"
      },
      "supported_data_sources": {
        "azurerm_cosmosdb_account": "dataSourceCosmosDbAccount",
        "azurerm_cosmosdb_mongo_database": "dataSourceCosmosDbMongoDatabase",
        "azurerm_cosmosdb_restorable_database_accounts": "dataSourceCosmosDbRestorableDatabaseAccounts",
        "azurerm_cosmosdb_sql_database": "dataSourceCosmosDbSQLDatabase",
        "azurerm_cosmosdb_sql_role_definition": "dataSourceCosmosDbSQLRoleDefinition"
      },
      "resources": [
        "CosmosDbMongoUserDefinitionResource",
        "CosmosDbPostgreSQLClusterResource",
        "CosmosDbPostgreSQLCoordinatorConfigurationResource",
        "CosmosDbPostgreSQLFirewallRuleResource",
        "CosmosDbPostgreSQLNodeConfigurationResource",
        "CosmosDbPostgreSQLRoleResource",
        "CosmosDbSqlDedicatedGatewayResource",
        "CosmosDbMongoRoleDefinitionResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_cosmosdb_account": {
          "create_method": "resourceCosmosDbAccountCreate",
          "read_method": "resourceCosmosDbAccountRead",
          "update_method": "resourceCosmosDbAccountUpdate",
          "delete_method": "resourceCosmosDbAccountDelete"
        },
        "azurerm_cosmosdb_cassandra_cluster": {
          "create_method": "resourceCassandraClusterCreate",
          "read_method": "resourceCassandraClusterRead",
          "update_method": "resourceCassandraClusterUpdate",
          "delete_method": "resourceCassandraClusterDelete"
        },
        "azurerm_cosmosdb_cassandra_datacenter": {
          "create_method": "resourceCassandraDatacenterCreate",
          "read_method": "resourceCassandraDatacenterRead",
          "update_method": "resourceCassandraDatacenterUpdate",
          "delete_method": "resourceCassandraDatacenterDelete"
        },
        "azurerm_cosmosdb_cassandra_keyspace": {
          "create_method": "resourceCosmosDbCassandraKeyspaceCreate",
          "read_method": "resourceCosmosDbCassandraKeyspaceRead",
          "update_method": "resourceCosmosDbCassandraKeyspaceUpdate",
          "delete_method": "resourceCosmosDbCassandraKeyspaceDelete"
        },
        "azurerm_cosmosdb_cassandra_table": {
          "create_method": "resourceCosmosDbCassandraTableCreate",
          "read_method": "resourceCosmosDbCassandraTableRead",
          "update_method": "resourceCosmosDbCassandraTableUpdate",
          "delete_method": "resourceCosmosDbCassandraTableDelete"
        },
        "azurerm_cosmosdb_gremlin_database": {
          "create_method": "resourceCosmosGremlinDatabaseCreate",
          "read_method": "resourceCosmosGremlinDatabaseRead",
          "update_method": "resourceCosmosGremlinDatabaseUpdate",
          "delete_method": "resourceCosmosGremlinDatabaseDelete"
        },
        "azurerm_cosmosdb_gremlin_graph": {
          "create_method": "resourceCosmosDbGremlinGraphCreate",
          "read_method": "resourceCosmosDbGremlinGraphRead",
          "update_method": "resourceCosmosDbGremlinGraphUpdate",
          "delete_method": "resourceCosmosDbGremlinGraphDelete"
        },
        "azurerm_cosmosdb_mongo_collection": {
          "create_method": "resourceCosmosDbMongoCollectionCreate",
          "read_method": "resourceCosmosDbMongoCollectionRead",
          "update_method": "resourceCosmosDbMongoCollectionUpdate",
          "delete_method": "resourceCosmosDbMongoCollectionDelete"
        },
        "azurerm_cosmosdb_mongo_database": {
          "create_method": "resourceCosmosDbMongoDatabaseCreate",
          "read_method": "resourceCosmosDbMongoDatabaseRead",
          "update_method": "resourceCosmosDbMongoDatabaseUpdate",
          "delete_method": "resourceCosmosDbMongoDatabaseDelete"
        },
        "azurerm_cosmosdb_sql_container": {
          "create_method": "resourceCosmosDbSQLContainerCreate",
          "read_method": "resourceCosmosDbSQLContainerRead",
          "update_method": "resourceCosmosDbSQLContainerUpdate",
          "delete_method": "resourceCosmosDbSQLContainerDelete"
        },
        "azurerm_cosmosdb_sql_database": {
          "create_method": "resourceCosmosDbSQLDatabaseCreate",
          "read_method": "resourceCosmosDbSQLDatabaseRead",
          "update_method": "resourceCosmosDbSQLDatabaseUpdate",
          "delete_method": "resourceCosmosDbSQLDatabaseDelete"
        },
        "azurerm_cosmosdb_sql_function": {
          "create_method": "resourceCosmosDbSQLFunctionCreateUpdate",
          "read_method": "resourceCosmosDbSQLFunctionRead",
          "update_method": "resourceCosmosDbSQLFunctionCreateUpdate",
          "delete_method": "resourceCosmosDbSQLFunctionDelete"
        },
        "azurerm_cosmosdb_sql_role_assignment": {
          "create_method": "resourceCosmosDbSQLRoleAssignmentCreate",
          "read_method": "resourceCosmosDbSQLRoleAssignmentRead",
          "update_method": "resourceCosmosDbSQLRoleAssignmentUpdate",
          "delete_method": "resourceCosmosDbSQLRoleAssignmentDelete"
        },
        "azurerm_cosmosdb_sql_role_definition": {
          "create_method": "resourceCosmosDbSQLRoleDefinitionCreate",
          "read_method": "resourceCosmosDbSQLRoleDefinitionRead",
          "update_method": "resourceCosmosDbSQLRoleDefinitionUpdate",
          "delete_method": "resourceCosmosDbSQLRoleDefinitionDelete"
        },
        "azurerm_cosmosdb_sql_stored_procedure": {
          "create_method": "resourceCosmosDbSQLStoredProcedureCreate",
          "read_method": "resourceCosmosDbSQLStoredProcedureRead",
          "update_method": "resourceCosmosDbSQLStoredProcedureUpdate",
          "delete_method": "resourceCosmosDbSQLStoredProcedureDelete"
        },
        "azurerm_cosmosdb_sql_trigger": {
          "create_method": "resourceCosmosDbSQLTriggerCreateUpdate",
          "read_method": "resourceCosmosDbSQLTriggerRead",
          "update_method": "resourceCosmosDbSQLTriggerCreateUpdate",
          "delete_method": "resourceCosmosDbSQLTriggerDelete"
        },
        "azurerm_cosmosdb_table": {
          "create_method": "resourceCosmosDbTableCreate",
          "read_method": "resourceCosmosDbTableRead",
          "update_method": "resourceCosmosDbTableUpdate",
          "delete_method": "resourceCosmosDbTableDelete"
        }
      },
      "data_source_methods": {
        "azurerm_cosmosdb_account": {
          "read_method": "dataSourceCosmosDbAccountRead"
        },
        "azurerm_cosmosdb_mongo_database": {
          "read_method": "dataSourceCosmosDbMongoDatabaseRead"
        },
        "azurerm_cosmosdb_restorable_database_accounts": {
          "read_method": "dataSourceCosmosDbRestorableDatabaseAccountsRead"
        },
        "azurerm_cosmosdb_sql_database": {
          "read_method": "dataSourceCosmosDbSQLDatabaseRead"
        },
        "azurerm_cosmosdb_sql_role_definition": {
          "read_method": "dataSourceCosmosDbSQLRoleDefinitionRead"
        }
      },
      "resource_terraform_types": {
        "CosmosDbMongoRoleDefinitionResource": "azurerm_cosmosdb_mongo_role_definition",
        "CosmosDbMongoUserDefinitionResource": "azurerm_cosmosdb_mongo_user_definition",
        "CosmosDbPostgreSQLCoordinatorConfigurationResource": "azurerm_cosmosdb_postgresql_coordinator_configuration",
        "CosmosDbPostgreSQLFirewallRuleResource": "azurerm_cosmosdb_postgresql_firewall_rule",
        "CosmosDbPostgreSQLNodeConfigurationResource": "azurerm_cosmosdb_postgresql_node_configuration",
        "CosmosDbPostgreSQLRoleResource": "azurerm_cosmosdb_postgresql_role",
        "CosmosDbSqlDedicatedGatewayResource": "azurerm_cosmosdb_sql_dedicated_gateway"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "containers",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/containers",
      "supported_resources": {
        "azurerm_container_group": "resourceContainerGroup",
        "azurerm_container_registry": "resourceContainerRegistry",
        "azurerm_container_registry_agent_pool": "resourceContainerRegistryAgentPool",
        "azurerm_container_registry_scope_map": "resourceContainerRegistryScopeMap",
        "azurerm_container_registry_token": "resourceContainerRegistryToken",
        "azurerm_container_registry_webhook": "resourceContainerRegistryWebhook",
        "azurerm_kubernetes_cluster": "resourceKubernetesCluster",
        "azurerm_kubernetes_cluster_node_pool": "resourceKubernetesClusterNodePool"
      },
      "supported_data_sources": {
        "azurerm_container_group": "dataSourceContainerGroup",
        "azurerm_container_registry": "dataSourceContainerRegistry",
        "azurerm_container_registry_scope_map": "dataSourceContainerRegistryScopeMap",
        "azurerm_container_registry_token": "dataSourceContainerRegistryToken",
        "azurerm_kubernetes_cluster": "dataSourceKubernetesCluster",
        "azurerm_kubernetes_cluster_node_pool": "dataSourceKubernetesClusterNodePool",
        "azurerm_kubernetes_service_versions": "dataSourceKubernetesServiceVersions"
      },
      "resources": [
        "ContainerConnectedRegistryResource",
        "ContainerRegistryCacheRule",
        "ContainerRegistryTaskResource",
        "ContainerRegistryCredentialSetResource",
        "ContainerRegistryTaskScheduleResource",
        "ContainerRegistryTokenPasswordResource",
        "KubernetesClusterExtensionResource",
        "KubernetesFleetManagerResource",
        "KubernetesFleetUpdateRunResource",
        "KubernetesFleetUpdateStrategyResource",
        "KubernetesFluxConfigurationResource",
        "KubernetesClusterTrustedAccessRoleBindingResource",
        "KubernetesFleetMemberResource"
      ],
      "data_sources": [
        "ContainerRegistryCacheRuleDataSource",
        "KubernetesFleetManagerDataSource",
        "KubernetesNodePoolSnapshotDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_container_group": {
          "create_method": "resourceContainerGroupCreate",
          "read_method": "resourceContainerGroupRead",
          "update_method": "resourceContainerGroupUpdate",
          "delete_method": "resourceContainerGroupDelete"
        },
        "azurerm_container_registry": {
          "create_method": "resourceContainerRegistryCreate",
          "read_method": "resourceContainerRegistryRead",
          "update_method": "resourceContainerRegistryUpdate",
          "delete_method": "resourceContainerRegistryDelete"
        },
        "azurerm_container_registry_agent_pool": {
          "create_method": "resourceContainerRegistryAgentPoolCreate",
          "read_method": "resourceContainerRegistryAgentPoolRead",
          "update_method": "resourceContainerRegistryAgentPoolUpdate",
          "delete_method": "resourceContainerRegistryAgentPoolDelete"
        },
        "azurerm_container_registry_scope_map": {
          "create_method": "resourceContainerRegistryScopeMapCreate",
          "read_method": "resourceContainerRegistryScopeMapRead",
          "update_method": "resourceContainerRegistryScopeMapUpdate",
          "delete_method": "resourceContainerRegistryScopeMapDelete"
        },
        "azurerm_container_registry_token": {
          "create_method": "resourceContainerRegistryTokenCreate",
          "read_method": "resourceContainerRegistryTokenRead",
          "update_method": "resourceContainerRegistryTokenUpdate",
          "delete_method": "resourceContainerRegistryTokenDelete"
        },
        "azurerm_container_registry_webhook": {
          "create_method": "resourceContainerRegistryWebhookCreate",
          "read_method": "resourceContainerRegistryWebhookRead",
          "update_method": "resourceContainerRegistryWebhookUpdate",
          "delete_method": "resourceContainerRegistryWebhookDelete"
        },
        "azurerm_kubernetes_cluster": {
          "create_method": "resourceKubernetesClusterCreate",
          "read_method": "resourceKubernetesClusterRead",
          "update_method": "resourceKubernetesClusterUpdate",
          "delete_method": "resourceKubernetesClusterDelete"
        },
        "azurerm_kubernetes_cluster_node_pool": {
          "create_method": "resourceKubernetesClusterNodePoolCreate",
          "read_method": "resourceKubernetesClusterNodePoolRead",
          "update_method": "resourceKubernetesClusterNodePoolUpdate",
          "delete_method": "resourceKubernetesClusterNodePoolDelete"
        }
      },
      "data_source_methods": {
        "azurerm_container_group": {
          "read_method": "dataSourceContainerGroupRead"
        },
        "azurerm_container_registry": {
          "read_method": "dataSourceContainerRegistryRead"
        },
        "azurerm_container_registry_scope_map": {
          "read_method": "dataSourceContainerRegistryScopeMapRead"
        },
        "azurerm_container_registry_token": {
          "read_method": "dataSourceContainerRegistryTokenRead"
        },
        "azurerm_kubernetes_cluster": {
          "read_method": "dataSourceKubernetesClusterRead"
        },
        "azurerm_kubernetes_cluster_node_pool": {
          "read_method": "dataSourceKubernetesClusterNodePoolRead"
        },
        "azurerm_kubernetes_service_versions": {
          "read_method": "dataSourceKubernetesServiceVersionsRead"
        }
      },
      "resource_terraform_types": {
        "ContainerConnectedRegistryResource": "azurerm_container_connected_registry",
        "ContainerRegistryCacheRule": "azurerm_container_registry_cache_rule",
        "ContainerRegistryCredentialSetResource": "azurerm_container_registry_credential_set",
        "ContainerRegistryTaskResource": "azurerm_container_registry_task",
        "ContainerRegistryTaskScheduleResource": "azurerm_container_registry_task_schedule_run_now",
        "ContainerRegistryTokenPasswordResource": "azurerm_container_registry_token_password",
        "KubernetesClusterExtensionResource": "azurerm_kubernetes_cluster_extension",
        "KubernetesClusterTrustedAccessRoleBindingResource": "azurerm_kubernetes_cluster_trusted_access_role_binding",
        "KubernetesFleetManagerResource": "azurerm_kubernetes_fleet_manager",
        "KubernetesFleetMemberResource": "azurerm_kubernetes_fleet_member",
        "KubernetesFleetUpdateRunResource": "azurerm_kubernetes_fleet_update_run",
        "KubernetesFleetUpdateStrategyResource": "azurerm_kubernetes_fleet_update_strategy",
        "KubernetesFluxConfigurationResource": "azurerm_kubernetes_flux_configuration"
      },
      "data_source_terraform_types": {
        "ContainerRegistryCacheRuleDataSource": "azurerm_container_registry_cache_rule",
        "KubernetesFleetManagerDataSource": "azurerm_kubernetes_fleet_manager",
        "KubernetesNodePoolSnapshotDataSource": "azurerm_kubernetes_node_pool_snapshot"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "customproviders",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/customproviders",
      "supported_resources": {
        "azurerm_custom_provider": "resourceCustomProvider"
      },
      "supported_data_sources": {},
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_custom_provider": {
          "create_method": "resourceCustomProviderCreateUpdate",
          "read_method": "resourceCustomProviderRead",
          "update_method": "resourceCustomProviderCreateUpdate",
          "delete_method": "resourceCustomProviderDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "dashboard",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/dashboard",
      "supported_resources": {},
      "supported_data_sources": {
        "azurerm_dashboard_grafana": "dataSourceDashboardGrafana"
      },
      "resources": [
        "DashboardGrafanaResource",
        "ManagedPrivateEndpointResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {
        "azurerm_dashboard_grafana": {
          "read_method": "dataSourceDashboardGrafanaRead"
        }
      },
      "resource_terraform_types": {
        "DashboardGrafanaResource": "azurerm_dashboard_grafana",
        "ManagedPrivateEndpointResource": "azurerm_dashboard_grafana_managed_private_endpoint"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "databoxedge",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/databoxedge",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "EdgeDeviceResource"
      ],
      "data_sources": [
        "EdgeDeviceDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "EdgeDeviceResource": "azurerm_databox_edge_device"
      },
      "data_source_terraform_types": {
        "EdgeDeviceDataSource": "azurerm_databox_edge_device"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "databasemigration",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/databasemigration",
      "supported_resources": {
        "azurerm_database_migration_project": "resourceDatabaseMigrationProject",
        "azurerm_database_migration_service": "resourceDatabaseMigrationService"
      },
      "supported_data_sources": {
        "azurerm_database_migration_project": "dataSourceDatabaseMigrationProject",
        "azurerm_database_migration_service": "dataSourceDatabaseMigrationService"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_database_migration_project": {
          "create_method": "resourceDatabaseMigrationProjectCreateUpdate",
          "read_method": "resourceDatabaseMigrationProjectRead",
          "update_method": "resourceDatabaseMigrationProjectCreateUpdate",
          "delete_method": "resourceDatabaseMigrationProjectDelete"
        },
        "azurerm_database_migration_service": {
          "create_method": "resourceDatabaseMigrationServiceCreate",
          "read_method": "resourceDatabaseMigrationServiceRead",
          "update_method": "resourceDatabaseMigrationServiceUpdate",
          "delete_method": "resourceDatabaseMigrationServiceDelete"
        }
      },
      "data_source_methods": {
        "azurerm_database_migration_project": {
          "read_method": "dataSourceDatabaseMigrationProjectRead"
        },
        "azurerm_database_migration_service": {
          "read_method": "dataSourceDatabaseMigrationServiceRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "databricks",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/databricks",
      "supported_resources": {
        "azurerm_databricks_virtual_network_peering": "resourceDatabricksVirtualNetworkPeering",
        "azurerm_databricks_workspace": "resourceDatabricksWorkspace",
        "azurerm_databricks_workspace_root_dbfs_customer_managed_key": "resourceDatabricksWorkspaceRootDbfsCustomerManagedKey"
      },
      "supported_data_sources": {
        "azurerm_databricks_workspace": "dataSourceDatabricksWorkspace",
        "azurerm_databricks_workspace_private_endpoint_connection": "dataSourceDatabricksWorkspacePrivateEndpointConnection"
      },
      "resources": [
        "AccessConnectorResource"
      ],
      "data_sources": [
        "DatabricksAccessConnectorDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_databricks_virtual_network_peering": {
          "create_method": "resourceDatabricksVirtualNetworkPeeringCreate",
          "read_method": "resourceDatabricksVirtualNetworkPeeringRead",
          "update_method": "resourceDatabricksVirtualNetworkPeeringUpdate",
          "delete_method": "resourceDatabricksVirtualNetworkPeeringDelete"
        },
        "azurerm_databricks_workspace": {
          "create_method": "resourceDatabricksWorkspaceCreate",
          "read_method": "resourceDatabricksWorkspaceRead",
          "update_method": "resourceDatabricksWorkspaceUpdate",
          "delete_method": "resourceDatabricksWorkspaceDelete"
        },
        "azurerm_databricks_workspace_root_dbfs_customer_managed_key": {
          "create_method": "databricksWorkspaceRootDbfsCustomerManagedKeyCreate",
          "read_method": "databricksWorkspaceRootDbfsCustomerManagedKeyRead",
          "update_method": "databricksWorkspaceRootDbfsCustomerManagedKeyUpdate",
          "delete_method": "databricksWorkspaceRootDbfsCustomerManagedKeyDelete"
        }
      },
      "data_source_methods": {
        "azurerm_databricks_workspace": {
          "read_method": "dataSourceDatabricksWorkspaceRead"
        },
        "azurerm_databricks_workspace_private_endpoint_connection": {
          "read_method": "dataSourceDatabricksWorkspacePrivateEndpointConnectionRead"
        }
      },
      "resource_terraform_types": {
        "AccessConnectorResource": "azurerm_databricks_access_connector"
      },
      "data_source_terraform_types": {
        "DatabricksAccessConnectorDataSource": "azurerm_databricks_access_connector"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "datadog",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/datadog",
      "supported_resources": {
        "azurerm_datadog_monitor": "resourceDatadogMonitor",
        "azurerm_datadog_monitor_sso_configuration": "resourceDatadogSingleSignOnConfigurations",
        "azurerm_datadog_monitor_tag_rule": "resourceDatadogTagRules"
      },
      "supported_data_sources": {},
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_datadog_monitor": {
          "create_method": "resourceDatadogMonitorCreate",
          "read_method": "resourceDatadogMonitorRead",
          "update_method": "resourceDatadogMonitorUpdate",
          "delete_method": "resourceDatadogMonitorDelete"
        },
        "azurerm_datadog_monitor_sso_configuration": {
          "create_method": "resourceDatadogSingleSignOnConfigurationsCreate",
          "read_method": "resourceDatadogSingleSignOnConfigurationsRead",
          "update_method": "resourceDatadogSingleSignOnConfigurationsUpdate",
          "delete_method": "resourceDatadogSingleSignOnConfigurationsDelete"
        },
        "azurerm_datadog_monitor_tag_rule": {
          "create_method": "resourceDatadogTagRulesCreate",
          "read_method": "resourceDatadogTagRulesRead",
          "update_method": "resourceDatadogTagRulesUpdate",
          "delete_method": "resourceDatadogTagRulesDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "dataprotection",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/dataprotection",
      "supported_resources": {
        "azurerm_data_protection_backup_instance_blob_storage": "resourceDataProtectionBackupInstanceBlobStorage",
        "azurerm_data_protection_backup_instance_disk": "resourceDataProtectionBackupInstanceDisk",
        "azurerm_data_protection_backup_instance_postgresql": "resourceDataProtectionBackupInstancePostgreSQL",
        "azurerm_data_protection_backup_policy_blob_storage": "resourceDataProtectionBackupPolicyBlobStorage",
        "azurerm_data_protection_backup_policy_disk": "resourceDataProtectionBackupPolicyDisk",
        "azurerm_data_protection_backup_policy_postgresql": "resourceDataProtectionBackupPolicyPostgreSQL",
        "azurerm_data_protection_backup_vault": "resourceDataProtectionBackupVault",
        "azurerm_data_protection_resource_guard": "resourceDataProtectionResourceGuard"
      },
      "supported_data_sources": {
        "azurerm_data_protection_backup_vault": "dataSourceDataProtectionBackupVault"
      },
      "resources": [
        "DataProtectionBackupPolicyKubernatesClusterResource",
        "DataProtectionBackupPolicyMySQLFlexibleServerResource",
        "DataProtectionBackupPolicyPostgreSQLFlexibleServerResource",
        "DataProtectionBackupInstanceKubernatesClusterResource",
        "DataProtectionBackupInstanceMySQLFlexibleServerResource",
        "DataProtectionBackupInstancePostgreSQLFlexibleServerResource",
        "DataProtectionBackupVaultCustomerManagedKeyResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_data_protection_backup_instance_blob_storage": {
          "create_method": "resourceDataProtectionBackupInstanceBlobStorageCreateUpdate",
          "read_method": "resourceDataProtectionBackupInstanceBlobStorageRead",
          "update_method": "resourceDataProtectionBackupInstanceBlobStorageCreateUpdate",
          "delete_method": "resourceDataProtectionBackupInstanceBlobStorageDelete"
        },
        "azurerm_data_protection_backup_instance_disk": {
          "create_method": "resourceDataProtectionBackupInstanceDiskCreateUpdate",
          "read_method": "resourceDataProtectionBackupInstanceDiskRead",
          "update_method": "resourceDataProtectionBackupInstanceDiskCreateUpdate",
          "delete_method": "resourceDataProtectionBackupInstanceDiskDelete"
        },
        "azurerm_data_protection_backup_instance_postgresql": {
          "create_method": "resourceDataProtectionBackupInstancePostgreSQLCreateUpdate",
          "read_method": "resourceDataProtectionBackupInstancePostgreSQLRead",
          "update_method": "resourceDataProtectionBackupInstancePostgreSQLCreateUpdate",
          "delete_method": "resourceDataProtectionBackupInstancePostgreSQLDelete"
        },
        "azurerm_data_protection_backup_policy_blob_storage": {
          "create_method": "resourceDataProtectionBackupPolicyBlobStorageCreate",
          "read_method": "resourceDataProtectionBackupPolicyBlobStorageRead",
          "delete_method": "resourceDataProtectionBackupPolicyBlobStorageDelete"
        },
        "azurerm_data_protection_backup_policy_disk": {
          "create_method": "resourceDataProtectionBackupPolicyDiskCreate",
          "read_method": "resourceDataProtectionBackupPolicyDiskRead",
          "delete_method": "resourceDataProtectionBackupPolicyDiskDelete"
        },
        "azurerm_data_protection_backup_policy_postgresql": {
          "create_method": "resourceDataProtectionBackupPolicyPostgreSQLCreate",
          "read_method": "resourceDataProtectionBackupPolicyPostgreSQLRead",
          "delete_method": "resourceDataProtectionBackupPolicyPostgreSQLDelete"
        },
        "azurerm_data_protection_backup_vault": {
          "create_method": "resourceDataProtectionBackupVaultCreateUpdate",
          "read_method": "resourceDataProtectionBackupVaultRead",
          "update_method": "resourceDataProtectionBackupVaultCreateUpdate",
          "delete_method": "resourceDataProtectionBackupVaultDelete"
        },
        "azurerm_data_protection_resource_guard": {
          "create_method": "resourceDataProtectionResourceGuardCreateUpdate",
          "read_method": "resourceDataProtectionResourceGuardRead",
          "update_method": "resourceDataProtectionResourceGuardCreateUpdate",
          "delete_method": "resourceDataProtectionResourceGuardDelete"
        }
      },
      "data_source_methods": {
        "azurerm_data_protection_backup_vault": {
          "read_method": "dataSourceDataProtectionBackupVaultRead"
        }
      },
      "resource_terraform_types": {
        "DataProtectionBackupInstanceKubernatesClusterResource": "azurerm_data_protection_backup_instance_kubernetes_cluster",
        "DataProtectionBackupInstanceMySQLFlexibleServerResource": "azurerm_data_protection_backup_instance_mysql_flexible_server",
        "DataProtectionBackupInstancePostgreSQLFlexibleServerResource": "azurerm_data_protection_backup_instance_postgresql_flexible_server",
        "DataProtectionBackupPolicyKubernatesClusterResource": "azurerm_data_protection_backup_policy_kubernetes_cluster",
        "DataProtectionBackupPolicyMySQLFlexibleServerResource": "azurerm_data_protection_backup_policy_mysql_flexible_server",
        "DataProtectionBackupPolicyPostgreSQLFlexibleServerResource": "azurerm_data_protection_backup_policy_postgresql_flexible_server",
        "DataProtectionBackupVaultCustomerManagedKeyResource": "azurerm_data_protection_backup_vault_customer_managed_key"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "datafactory",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory",
      "supported_resources": {
        "azurerm_data_factory": "resourceDataFactory",
        "azurerm_data_factory_custom_dataset": "resourceDataFactoryCustomDataset",
        "azurerm_data_factory_data_flow": "resourceDataFactoryDataFlow",
        "azurerm_data_factory_dataset_azure_blob": "resourceDataFactoryDatasetAzureBlob",
        "azurerm_data_factory_dataset_binary": "resourceDataFactoryDatasetBinary",
        "azurerm_data_factory_dataset_cosmosdb_sqlapi": "resourceDataFactoryDatasetCosmosDbSQLAPI",
        "azurerm_data_factory_dataset_delimited_text": "resourceDataFactoryDatasetDelimitedText",
        "azurerm_data_factory_dataset_http": "resourceDataFactoryDatasetHTTP",
        "azurerm_data_factory_dataset_json": "resourceDataFactoryDatasetJSON",
        "azurerm_data_factory_dataset_mysql": "resourceDataFactoryDatasetMySQL",
        "azurerm_data_factory_dataset_parquet": "resourceDataFactoryDatasetParquet",
        "azurerm_data_factory_dataset_postgresql": "resourceDataFactoryDatasetPostgreSQL",
        "azurerm_data_factory_dataset_snowflake": "resourceDataFactoryDatasetSnowflake",
        "azurerm_data_factory_dataset_sql_server_table": "resourceDataFactoryDatasetSQLServerTable",
        "azurerm_data_factory_flowlet_data_flow": "resourceDataFactoryFlowletDataFlow",
        "azurerm_data_factory_integration_runtime_azure": "resourceDataFactoryIntegrationRuntimeAzure",
        "azurerm_data_factory_integration_runtime_azure_ssis": "resourceDataFactoryIntegrationRuntimeAzureSsis",
        "azurerm_data_factory_integration_runtime_self_hosted": "resourceDataFactoryIntegrationRuntimeSelfHosted",
        "azurerm_data_factory_linked_custom_service": "resourceDataFactoryLinkedCustomService",
        "azurerm_data_factory_linked_service_azure_blob_storage": "resourceDataFactoryLinkedServiceAzureBlobStorage",
        "azurerm_data_factory_linked_service_azure_databricks": "resourceDataFactoryLinkedServiceAzureDatabricks",
        "azurerm_data_factory_linked_service_azure_file_storage": "resourceDataFactoryLinkedServiceAzureFileStorage",
        "azurerm_data_factory_linked_service_azure_function": "resourceDataFactoryLinkedServiceAzureFunction",
        "azurerm_data_factory_linked_service_azure_search": "resourceDataFactoryLinkedServiceAzureSearch",
        "azurerm_data_factory_linked_service_azure_sql_database": "resourceDataFactoryLinkedServiceAzureSQLDatabase",
        "azurerm_data_factory_linked_service_azure_table_storage": "resourceDataFactoryLinkedServiceAzureTableStorage",
        "azurerm_data_factory_linked_service_cosmosdb": "resourceDataFactoryLinkedServiceCosmosDb",
        "azurerm_data_factory_linked_service_cosmosdb_mongoapi": "resourceDataFactoryLinkedServiceCosmosDbMongoAPI",
        "azurerm_data_factory_linked_service_data_lake_storage_gen2": "resourceDataFactoryLinkedServiceDataLakeStorageGen2",
        "azurerm_data_factory_linked_service_key_vault": "resourceDataFactoryLinkedServiceKeyVault",
        "azurerm_data_factory_linked_service_kusto": "resourceDataFactoryLinkedServiceKusto",
        "azurerm_data_factory_linked_service_mysql": "resourceDataFactoryLinkedServiceMySQL",
        "azurerm_data_factory_linked_service_odata": "resourceArmDataFactoryLinkedServiceOData",
        "azurerm_data_factory_linked_service_odbc": "resourceDataFactoryLinkedServiceOdbc",
        "azurerm_data_factory_linked_service_postgresql": "resourceDataFactoryLinkedServicePostgreSQL",
        "azurerm_data_factory_linked_service_sftp": "resourceDataFactoryLinkedServiceSFTP",
        "azurerm_data_factory_linked_service_snowflake": "resourceDataFactoryLinkedServiceSnowflake",
        "azurerm_data_factory_linked_service_sql_server": "resourceDataFactoryLinkedServiceSQLServer",
        "azurerm_data_factory_linked_service_synapse": "resourceDataFactoryLinkedServiceSynapse",
        "azurerm_data_factory_linked_service_web": "resourceDataFactoryLinkedServiceWeb",
        "azurerm_data_factory_managed_private_endpoint": "resourceDataFactoryManagedPrivateEndpoint",
        "azurerm_data_factory_pipeline": "resourceDataFactoryPipeline",
        "azurerm_data_factory_trigger_blob_event": "resourceDataFactoryTriggerBlobEvent",
        "azurerm_data_factory_trigger_custom_event": "resourceDataFactoryTriggerCustomEvent",
        "azurerm_data_factory_trigger_schedule": "resourceDataFactoryTriggerSchedule",
        "azurerm_data_factory_trigger_tumbling_window": "resourceDataFactoryTriggerTumblingWindow"
      },
      "supported_data_sources": {
        "azurerm_data_factory": "dataSourceDataFactory"
      },
      "resources": [
        "DataFactoryDatasetAzureSQLTableResource",
        "DataFactoryCredentialServicePrincipalResource",
        "DataFactoryCredentialUserAssignedManagedIdentityResource"
      ],
      "data_sources": [
        "TriggerScheduleDataSource",
        "TriggerSchedulesDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_data_factory": {
          "create_method": "resourceDataFactoryCreateUpdate",
          "read_method": "resourceDataFactoryRead",
          "update_method": "resourceDataFactoryCreateUpdate",
          "delete_method": "resourceDataFactoryDelete"
        },
        "azurerm_data_factory_custom_dataset": {
          "create_method": "resourceDataFactoryCustomDatasetCreateUpdate",
          "read_method": "resourceDataFactoryCustomDatasetRead",
          "update_method": "resourceDataFactoryCustomDatasetCreateUpdate",
          "delete_method": "resourceDataFactoryCustomDatasetDelete"
        },
        "azurerm_data_factory_data_flow": {
          "create_method": "resourceDataFactoryDataFlowCreateUpdate",
          "read_method": "resourceDataFactoryDataFlowRead",
          "update_method": "resourceDataFactoryDataFlowCreateUpdate",
          "delete_method": "resourceDataFactoryDataFlowDelete"
        },
        "azurerm_data_factory_dataset_azure_blob": {
          "create_method": "resourceDataFactoryDatasetAzureBlobCreateUpdate",
          "read_method": "resourceDataFactoryDatasetAzureBlobRead",
          "update_method": "resourceDataFactoryDatasetAzureBlobCreateUpdate",
          "delete_method": "resourceDataFactoryDatasetAzureBlobDelete"
        },
        "azurerm_data_factory_dataset_binary": {
          "create_method": "resourceDataFactoryDatasetBinaryCreateUpdate",
          "read_method": "resourceDataFactoryDatasetBinaryRead",
          "update_method": "resourceDataFactoryDatasetBinaryCreateUpdate",
          "delete_method": "resourceDataFactoryDatasetBinaryDelete"
        },
        "azurerm_data_factory_dataset_cosmosdb_sqlapi": {
          "create_method": "resourceDataFactoryDatasetCosmosDbSQLAPICreateUpdate",
          "read_method": "resourceDataFactoryDatasetCosmosDbSQLAPIRead",
          "update_method": "resourceDataFactoryDatasetCosmosDbSQLAPICreateUpdate",
          "delete_method": "resourceDataFactoryDatasetCosmosDbSQLAPIDelete"
        },
        "azurerm_data_factory_dataset_delimited_text": {
          "create_method": "resourceDataFactoryDatasetDelimitedTextCreateUpdate",
          "read_method": "resourceDataFactoryDatasetDelimitedTextRead",
          "update_method": "resourceDataFactoryDatasetDelimitedTextCreateUpdate",
          "delete_method": "resourceDataFactoryDatasetDelimitedTextDelete"
        },
        "azurerm_data_factory_dataset_http": {
          "create_method": "resourceDataFactoryDatasetHTTPCreateUpdate",
          "read_method": "resourceDataFactoryDatasetHTTPRead",
          "update_method": "resourceDataFactoryDatasetHTTPCreateUpdate",
          "delete_method": "resourceDataFactoryDatasetHTTPDelete"
        },
        "azurerm_data_factory_dataset_json": {
          "create_method": "resourceDataFactoryDatasetJSONCreateUpdate",
          "read_method": "resourceDataFactoryDatasetJSONRead",
          "update_method": "resourceDataFactoryDatasetJSONCreateUpdate",
          "delete_method": "resourceDataFactoryDatasetJSONDelete"
        },
        "azurerm_data_factory_dataset_mysql": {
          "create_method": "resourceDataFactoryDatasetMySQLCreateUpdate",
          "read_method": "resourceDataFactoryDatasetMySQLRead",
          "update_method": "resourceDataFactoryDatasetMySQLCreateUpdate",
          "delete_method": "resourceDataFactoryDatasetMySQLDelete"
        },
        "azurerm_data_factory_dataset_parquet": {
          "create_method": "resourceDataFactoryDatasetParquetCreateUpdate",
          "read_method": "resourceDataFactoryDatasetParquetRead",
          "update_method": "resourceDataFactoryDatasetParquetCreateUpdate",
          "delete_method": "resourceDataFactoryDatasetParquetDelete"
        },
        "azurerm_data_factory_dataset_postgresql": {
          "create_method": "resourceDataFactoryDatasetPostgreSQLCreateUpdate",
          "read_method": "resourceDataFactoryDatasetPostgreSQLRead",
          "update_method": "resourceDataFactoryDatasetPostgreSQLCreateUpdate",
          "delete_method": "resourceDataFactoryDatasetPostgreSQLDelete"
        },
        "azurerm_data_factory_dataset_snowflake": {
          "create_method": "resourceDataFactoryDatasetSnowflakeCreateUpdate",
          "read_method": "resourceDataFactoryDatasetSnowflakeRead",
          "update_method": "resourceDataFactoryDatasetSnowflakeCreateUpdate",
          "delete_method": "resourceDataFactoryDatasetSnowflakeDelete"
        },
        "azurerm_data_factory_dataset_sql_server_table": {
          "create_method": "resourceDataFactoryDatasetSQLServerTableCreateUpdate",
          "read_method": "resourceDataFactoryDatasetSQLServerTableRead",
          "update_method": "resourceDataFactoryDatasetSQLServerTableCreateUpdate",
          "delete_method": "resourceDataFactoryDatasetSQLServerTableDelete"
        },
        "azurerm_data_factory_flowlet_data_flow": {
          "create_method": "resourceDataFactoryFlowletDataFlowCreateUpdate",
          "read_method": "resourceDataFactoryFlowletDataFlowRead",
          "update_method": "resourceDataFactoryFlowletDataFlowCreateUpdate",
          "delete_method": "resourceDataFactoryFlowletDataFlowDelete"
        },
        "azurerm_data_factory_integration_runtime_azure": {
          "create_method": "resourceDataFactoryIntegrationRuntimeAzureCreateUpdate",
          "read_method": "resourceDataFactoryIntegrationRuntimeAzureRead",
          "update_method": "resourceDataFactoryIntegrationRuntimeAzureCreateUpdate",
          "delete_method": "resourceDataFactoryIntegrationRuntimeAzureDelete"
        },
        "azurerm_data_factory_integration_runtime_azure_ssis": {
          "create_method": "resourceDataFactoryIntegrationRuntimeAzureSsisCreateUpdate",
          "read_method": "resourceDataFactoryIntegrationRuntimeAzureSsisRead",
          "update_method": "resourceDataFactoryIntegrationRuntimeAzureSsisCreateUpdate",
          "delete_method": "resourceDataFactoryIntegrationRuntimeAzureSsisDelete"
        },
        "azurerm_data_factory_integration_runtime_self_hosted": {
          "create_method": "resourceDataFactoryIntegrationRuntimeSelfHostedCreateUpdate",
          "read_method": "resourceDataFactoryIntegrationRuntimeSelfHostedRead",
          "update_method": "resourceDataFactoryIntegrationRuntimeSelfHostedCreateUpdate",
          "delete_method": "resourceDataFactoryIntegrationRuntimeSelfHostedDelete"
        },
        "azurerm_data_factory_linked_custom_service": {
          "create_method": "resourceDataFactoryLinkedCustomServiceCreateUpdate",
          "read_method": "resourceDataFactoryLinkedCustomServiceRead",
          "update_method": "resourceDataFactoryLinkedCustomServiceCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedCustomServiceDelete"
        },
        "azurerm_data_factory_linked_service_azure_blob_storage": {
          "create_method": "resourceDataFactoryLinkedServiceBlobStorageCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceBlobStorageRead",
          "update_method": "resourceDataFactoryLinkedServiceBlobStorageCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceBlobStorageDelete"
        },
        "azurerm_data_factory_linked_service_azure_databricks": {
          "create_method": "resourceDataFactoryLinkedServiceDatabricksCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceDatabricksRead",
          "update_method": "resourceDataFactoryLinkedServiceDatabricksCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceDatabricksDelete"
        },
        "azurerm_data_factory_linked_service_azure_file_storage": {
          "create_method": "resourceDataFactoryLinkedServiceAzureFileStorageCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceAzureFileStorageRead",
          "update_method": "resourceDataFactoryLinkedServiceAzureFileStorageCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceAzureFileStorageDelete"
        },
        "azurerm_data_factory_linked_service_azure_function": {
          "create_method": "resourceDataFactoryLinkedServiceAzureFunctionCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceAzureFunctionRead",
          "update_method": "resourceDataFactoryLinkedServiceAzureFunctionCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceAzureFunctionDelete"
        },
        "azurerm_data_factory_linked_service_azure_search": {
          "create_method": "resourceDataFactoryLinkedServiceAzureSearchCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceAzureSearchRead",
          "update_method": "resourceDataFactoryLinkedServiceAzureSearchCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceAzureSearchDelete"
        },
        "azurerm_data_factory_linked_service_azure_sql_database": {
          "create_method": "resourceDataFactoryLinkedServiceAzureSQLDatabaseCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceAzureSQLDatabaseRead",
          "update_method": "resourceDataFactoryLinkedServiceAzureSQLDatabaseCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceAzureSQLDatabaseDelete"
        },
        "azurerm_data_factory_linked_service_azure_table_storage": {
          "create_method": "resourceDataFactoryLinkedServiceTableStorageCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceTableStorageRead",
          "update_method": "resourceDataFactoryLinkedServiceTableStorageCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceTableStorageDelete"
        },
        "azurerm_data_factory_linked_service_cosmosdb": {
          "create_method": "resourceDataFactoryLinkedServiceCosmosDbCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceCosmosDbRead",
          "update_method": "resourceDataFactoryLinkedServiceCosmosDbCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceCosmosDbDelete"
        },
        "azurerm_data_factory_linked_service_cosmosdb_mongoapi": {
          "create_method": "resourceDataFactoryLinkedServiceCosmosDbMongoAPICreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceCosmosDbMongoAPIRead",
          "update_method": "resourceDataFactoryLinkedServiceCosmosDbMongoAPICreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceCosmosDbMongoAPIDelete"
        },
        "azurerm_data_factory_linked_service_data_lake_storage_gen2": {
          "create_method": "resourceDataFactoryLinkedServiceDataLakeStorageGen2CreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceDataLakeStorageGen2Read",
          "update_method": "resourceDataFactoryLinkedServiceDataLakeStorageGen2CreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceDataLakeStorageGen2Delete"
        },
        "azurerm_data_factory_linked_service_key_vault": {
          "create_method": "resourceDataFactoryLinkedServiceKeyVaultCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceKeyVaultRead",
          "update_method": "resourceDataFactoryLinkedServiceKeyVaultCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceKeyVaultDelete"
        },
        "azurerm_data_factory_linked_service_kusto": {
          "create_method": "resourceDataFactoryLinkedServiceKustoCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceKustoRead",
          "update_method": "resourceDataFactoryLinkedServiceKustoCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceKustoDelete"
        },
        "azurerm_data_factory_linked_service_mysql": {
          "create_method": "resourceDataFactoryLinkedServiceMySQLCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceMySQLRead",
          "update_method": "resourceDataFactoryLinkedServiceMySQLCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceMySQLDelete"
        },
        "azurerm_data_factory_linked_service_odata": {
          "create_method": "resourceArmDataFactoryLinkedServiceODataCreateUpdate",
          "read_method": "resourceArmDataFactoryLinkedServiceODataRead",
          "update_method": "resourceArmDataFactoryLinkedServiceODataCreateUpdate",
          "delete_method": "resourceArmDataFactoryLinkedServiceODataDelete"
        },
        "azurerm_data_factory_linked_service_odbc": {
          "create_method": "resourceDataFactoryLinkedServiceOdbcCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceOdbcRead",
          "update_method": "resourceDataFactoryLinkedServiceOdbcCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceOdbcDelete"
        },
        "azurerm_data_factory_linked_service_postgresql": {
          "create_method": "resourceDataFactoryLinkedServicePostgreSQLCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServicePostgreSQLRead",
          "update_method": "resourceDataFactoryLinkedServicePostgreSQLCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServicePostgreSQLDelete"
        },
        "azurerm_data_factory_linked_service_sftp": {
          "create_method": "resourceDataFactoryLinkedServiceSFTPCreate",
          "read_method": "resourceDataFactoryLinkedServiceSFTPRead",
          "update_method": "resourceDataFactoryLinkedServiceSFTPUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceSFTPDelete"
        },
        "azurerm_data_factory_linked_service_snowflake": {
          "create_method": "resourceDataFactoryLinkedServiceSnowflakeCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceSnowflakeRead",
          "update_method": "resourceDataFactoryLinkedServiceSnowflakeCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceSnowflakeDelete"
        },
        "azurerm_data_factory_linked_service_sql_server": {
          "create_method": "resourceDataFactoryLinkedServiceSQLServerCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceSQLServerRead",
          "update_method": "resourceDataFactoryLinkedServiceSQLServerCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceSQLServerDelete"
        },
        "azurerm_data_factory_linked_service_synapse": {
          "create_method": "resourceDataFactoryLinkedServiceSynapseCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceSynapseRead",
          "update_method": "resourceDataFactoryLinkedServiceSynapseCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceSynapseDelete"
        },
        "azurerm_data_factory_linked_service_web": {
          "create_method": "resourceDataFactoryLinkedServiceWebCreateUpdate",
          "read_method": "resourceDataFactoryLinkedServiceWebRead",
          "update_method": "resourceDataFactoryLinkedServiceWebCreateUpdate",
          "delete_method": "resourceDataFactoryLinkedServiceWebDelete"
        },
        "azurerm_data_factory_managed_private_endpoint": {
          "create_method": "resourceDataFactoryManagedPrivateEndpointCreate",
          "read_method": "resourceDataFactoryManagedPrivateEndpointRead",
          "delete_method": "resourceDataFactoryManagedPrivateEndpointDelete"
        },
        "azurerm_data_factory_pipeline": {
          "create_method": "resourceDataFactoryPipelineCreateUpdate",
          "read_method": "resourceDataFactoryPipelineRead",
          "update_method": "resourceDataFactoryPipelineCreateUpdate",
          "delete_method": "resourceDataFactoryPipelineDelete"
        },
        "azurerm_data_factory_trigger_blob_event": {
          "create_method": "resourceDataFactoryTriggerBlobEventCreateUpdate",
          "read_method": "resourceDataFactoryTriggerBlobEventRead",
          "update_method": "resourceDataFactoryTriggerBlobEventCreateUpdate",
          "delete_method": "resourceDataFactoryTriggerBlobEventDelete"
        },
        "azurerm_data_factory_trigger_custom_event": {
          "create_method": "resourceDataFactoryTriggerCustomEventCreateUpdate",
          "read_method": "resourceDataFactoryTriggerCustomEventRead",
          "update_method": "resourceDataFactoryTriggerCustomEventCreateUpdate",
          "delete_method": "resourceDataFactoryTriggerCustomEventDelete"
        },
        "azurerm_data_factory_trigger_schedule": {
          "create_method": "resourceDataFactoryTriggerScheduleCreate",
          "read_method": "resourceDataFactoryTriggerScheduleRead",
          "update_method": "resourceDataFactoryTriggerScheduleUpdate",
          "delete_method": "resourceDataFactoryTriggerScheduleDelete"
        },
        "azurerm_data_factory_trigger_tumbling_window": {
          "create_method": "resourceDataFactoryTriggerTumblingWindowCreateUpdate",
          "read_method": "resourceDataFactoryTriggerTumblingWindowRead",
          "update_method": "resourceDataFactoryTriggerTumblingWindowCreateUpdate",
          "delete_method": "resourceDataFactoryTriggerTumblingWindowDelete"
        }
      },
      "data_source_methods": {
        "azurerm_data_factory": {
          "read_method": "dataSourceDataFactoryRead"
        }
      },
      "resource_terraform_types": {
        "DataFactoryCredentialServicePrincipalResource": "azurerm_data_factory_credential_service_principal",
        "DataFactoryCredentialUserAssignedManagedIdentityResource": "azurerm_data_factory_credential_user_managed_identity",
        "DataFactoryDatasetAzureSQLTableResource": "azurerm_data_factory_dataset_azure_sql_table"
      },
      "data_source_terraform_types": {
        "TriggerScheduleDataSource": "azurerm_data_factory_trigger_schedule",
        "TriggerSchedulesDataSource": "azurerm_data_factory_trigger_schedules"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "datashare",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/datashare",
      "supported_resources": {
        "azurerm_data_share": "resourceDataShare",
        "azurerm_data_share_account": "resourceDataShareAccount",
        "azurerm_data_share_dataset_blob_storage": "resourceDataShareDataSetBlobStorage",
        "azurerm_data_share_dataset_data_lake_gen2": "resourceDataShareDataSetDataLakeGen2",
        "azurerm_data_share_dataset_kusto_cluster": "resourceDataShareDataSetKustoCluster",
        "azurerm_data_share_dataset_kusto_database": "resourceDataShareDataSetKustoDatabase"
      },
      "supported_data_sources": {
        "azurerm_data_share": "dataSourceDataShare",
        "azurerm_data_share_account": "dataSourceDataShareAccount",
        "azurerm_data_share_dataset_blob_storage": "dataSourceDataShareDatasetBlobStorage",
        "azurerm_data_share_dataset_data_lake_gen2": "dataSourceDataShareDatasetDataLakeGen2",
        "azurerm_data_share_dataset_kusto_cluster": "dataSourceDataShareDatasetKustoCluster",
        "azurerm_data_share_dataset_kusto_database": "dataSourceDataShareDatasetKustoDatabase"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_data_share": {
          "create_method": "resourceDataShareCreateUpdate",
          "read_method": "resourceDataShareRead",
          "update_method": "resourceDataShareCreateUpdate",
          "delete_method": "resourceDataShareDelete"
        },
        "azurerm_data_share_account": {
          "create_method": "resourceDataShareAccountCreate",
          "read_method": "resourceDataShareAccountRead",
          "update_method": "resourceDataShareAccountUpdate",
          "delete_method": "resourceDataShareAccountDelete"
        },
        "azurerm_data_share_dataset_blob_storage": {
          "create_method": "resourceDataShareDataSetBlobStorageCreate",
          "read_method": "resourceDataShareDataSetBlobStorageRead",
          "delete_method": "resourceDataShareDataSetBlobStorageDelete"
        },
        "azurerm_data_share_dataset_data_lake_gen2": {
          "create_method": "resourceDataShareDataSetDataLakeGen2Create",
          "read_method": "resourceDataShareDataSetDataLakeGen2Read",
          "delete_method": "resourceDataShareDataSetDataLakeGen2Delete"
        },
        "azurerm_data_share_dataset_kusto_cluster": {
          "create_method": "resourceDataShareDataSetKustoClusterCreate",
          "read_method": "resourceDataShareDataSetKustoClusterRead",
          "delete_method": "resourceDataShareDataSetKustoClusterDelete"
        },
        "azurerm_data_share_dataset_kusto_database": {
          "create_method": "resourceDataShareDataSetKustoDatabaseCreate",
          "read_method": "resourceDataShareDataSetKustoDatabaseRead",
          "delete_method": "resourceDataShareDataSetKustoDatabaseDelete"
        }
      },
      "data_source_methods": {
        "azurerm_data_share": {
          "read_method": "dataSourceDataShareRead"
        },
        "azurerm_data_share_account": {
          "read_method": "dataSourceDataShareAccountRead"
        },
        "azurerm_data_share_dataset_blob_storage": {
          "read_method": "dataSourceDataShareDatasetBlobStorageRead"
        },
        "azurerm_data_share_dataset_data_lake_gen2": {
          "read_method": "dataSourceDataShareDatasetDataLakeGen2Read"
        },
        "azurerm_data_share_dataset_kusto_cluster": {
          "read_method": "dataSourceDataShareDatasetKustoClusterRead"
        },
        "azurerm_data_share_dataset_kusto_database": {
          "read_method": "dataSourceDataShareDatasetKustoDatabaseRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "desktopvirtualization",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/desktopvirtualization",
      "supported_resources": {
        "azurerm_virtual_desktop_application": "resourceVirtualDesktopApplication",
        "azurerm_virtual_desktop_application_group": "resourceVirtualDesktopApplicationGroup",
        "azurerm_virtual_desktop_host_pool": "resourceVirtualDesktopHostPool",
        "azurerm_virtual_desktop_host_pool_registration_info": "resourceVirtualDesktopHostPoolRegistrationInfo",
        "azurerm_virtual_desktop_scaling_plan": "resourceVirtualDesktopScalingPlan",
        "azurerm_virtual_desktop_scaling_plan_host_pool_association": "resourceVirtualDesktopScalingPlanHostPoolAssociation",
        "azurerm_virtual_desktop_workspace": "resourceArmDesktopVirtualizationWorkspace",
        "azurerm_virtual_desktop_workspace_application_group_association": "resourceVirtualDesktopWorkspaceApplicationGroupAssociation"
      },
      "supported_data_sources": {
        "azurerm_virtual_desktop_host_pool": "dataSourceVirtualDesktopHostPool"
      },
      "resources": [],
      "data_sources": [
        "DesktopVirtualizationWorkspaceDataSource",
        "DesktopVirtualizationApplicationGroupDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_virtual_desktop_application": {
          "create_method": "resourceVirtualDesktopApplicationCreateUpdate",
          "read_method": "resourceVirtualDesktopApplicationRead",
          "update_method": "resourceVirtualDesktopApplicationCreateUpdate",
          "delete_method": "resourceVirtualDesktopApplicationDelete"
        },
        "azurerm_virtual_desktop_application_group": {
          "create_method": "resourceVirtualDesktopApplicationGroupCreateUpdate",
          "read_method": "resourceVirtualDesktopApplicationGroupRead",
          "update_method": "resourceVirtualDesktopApplicationGroupCreateUpdate",
          "delete_method": "resourceVirtualDesktopApplicationGroupDelete"
        },
        "azurerm_virtual_desktop_host_pool": {
          "create_method": "resourceVirtualDesktopHostPoolCreate",
          "read_method": "resourceVirtualDesktopHostPoolRead",
          "update_method": "resourceVirtualDesktopHostPoolUpdate",
          "delete_method": "resourceVirtualDesktopHostPoolDelete"
        },
        "azurerm_virtual_desktop_host_pool_registration_info": {
          "create_method": "resourceVirtualDesktopHostPoolRegistrationInfoCreateUpdate",
          "read_method": "resourceVirtualDesktopHostPoolRegistrationInfoRead",
          "update_method": "resourceVirtualDesktopHostPoolRegistrationInfoCreateUpdate",
          "delete_method": "resourceVirtualDesktopHostPoolRegistrationInfoDelete"
        },
        "azurerm_virtual_desktop_scaling_plan": {
          "create_method": "resourceVirtualDesktopScalingPlanCreate",
          "read_method": "resourceVirtualDesktopScalingPlanRead",
          "update_method": "resourceVirtualDesktopScalingPlanUpdate",
          "delete_method": "resourceVirtualDesktopScalingPlanDelete"
        },
        "azurerm_virtual_desktop_scaling_plan_host_pool_association": {
          "create_method": "resourceVirtualDesktopScalingPlanHostPoolAssociationCreate",
          "read_method": "resourceVirtualDesktopScalingPlanHostPoolAssociationRead",
          "update_method": "resourceVirtualDesktopScalingPlanHostPoolAssociationUpdate",
          "delete_method": "resourceVirtualDesktopScalingPlanHostPoolAssociationDelete"
        },
        "azurerm_virtual_desktop_workspace": {
          "create_method": "resourceArmDesktopVirtualizationWorkspaceCreateUpdate",
          "read_method": "resourceArmDesktopVirtualizationWorkspaceRead",
          "update_method": "resourceArmDesktopVirtualizationWorkspaceCreateUpdate",
          "delete_method": "resourceArmDesktopVirtualizationWorkspaceDelete"
        },
        "azurerm_virtual_desktop_workspace_application_group_association": {
          "create_method": "resourceVirtualDesktopWorkspaceApplicationGroupAssociationCreate",
          "read_method": "resourceVirtualDesktopWorkspaceApplicationGroupAssociationRead",
          "delete_method": "resourceVirtualDesktopWorkspaceApplicationGroupAssociationDelete"
        }
      },
      "data_source_methods": {
        "azurerm_virtual_desktop_host_pool": {
          "read_method": "dataSourceVirtualDesktopHostPoolRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {
        "DesktopVirtualizationApplicationGroupDataSource": "azurerm_virtual_desktop_application_group",
        "DesktopVirtualizationWorkspaceDataSource": "azurerm_virtual_desktop_workspace"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "devcenter",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/devcenter",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "DevCenterAttachedNetworkResource",
        "DevCenterGalleryResource",
        "DevCenterCatalogsResource",
        "DevCenterDevBoxDefinitionResource",
        "DevCenterEnvironmentTypeResource",
        "DevCenterNetworkConnectionResource",
        "DevCenterProjectPoolResource",
        "DevCenterProjectResource",
        "DevCenterProjectEnvironmentTypeResource",
        "DevCenterResource"
      ],
      "data_sources": [
        "DevCenterAttachedNetworkDataSource",
        "DevCenterCatalogDataSource",
        "DevCenterDataSource",
        "DevCenterDevBoxDefinitionDataSource",
        "DevCenterEnvironmentTypeDataSource",
        "DevCenterGalleryDataSource",
        "DevCenterNetworkConnectionDataSource",
        "DevCenterProjectDataSource",
        "DevCenterProjectEnvironmentTypeDataSource",
        "DevCenterProjectPoolDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "DevCenterAttachedNetworkResource": "azurerm_dev_center_attached_network",
        "DevCenterCatalogsResource": "azurerm_dev_center_catalog",
        "DevCenterDevBoxDefinitionResource": "azurerm_dev_center_dev_box_definition",
        "DevCenterEnvironmentTypeResource": "azurerm_dev_center_environment_type",
        "DevCenterGalleryResource": "azurerm_dev_center_gallery",
        "DevCenterNetworkConnectionResource": "azurerm_dev_center_network_connection",
        "DevCenterProjectEnvironmentTypeResource": "azurerm_dev_center_project_environment_type",
        "DevCenterProjectPoolResource": "azurerm_dev_center_project_pool",
        "DevCenterProjectResource": "azurerm_dev_center_project",
        "DevCenterResource": "azurerm_dev_center"
      },
      "data_source_terraform_types": {
        "DevCenterAttachedNetworkDataSource": "azurerm_dev_center_attached_network",
        "DevCenterCatalogDataSource": "azurerm_dev_center_catalog",
        "DevCenterDataSource": "azurerm_dev_center",
        "DevCenterDevBoxDefinitionDataSource": "azurerm_dev_center_dev_box_definition",
        "DevCenterEnvironmentTypeDataSource": "azurerm_dev_center_environment_type",
        "DevCenterGalleryDataSource": "azurerm_dev_center_gallery",
        "DevCenterNetworkConnectionDataSource": "azurerm_dev_center_network_connection",
        "DevCenterProjectDataSource": "azurerm_dev_center_project",
        "DevCenterProjectEnvironmentTypeDataSource": "azurerm_dev_center_project_environment_type",
        "DevCenterProjectPoolDataSource": "azurerm_dev_center_project_pool"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "devtestlabs",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/devtestlabs",
      "supported_resources": {
        "azurerm_dev_test_global_vm_shutdown_schedule": "resourceDevTestGlobalVMShutdownSchedule",
        "azurerm_dev_test_lab": "resourceDevTestLab",
        "azurerm_dev_test_linux_virtual_machine": "resourceArmDevTestLinuxVirtualMachine",
        "azurerm_dev_test_policy": "resourceArmDevTestPolicy",
        "azurerm_dev_test_schedule": "resourceDevTestLabSchedules",
        "azurerm_dev_test_virtual_network": "resourceArmDevTestVirtualNetwork",
        "azurerm_dev_test_windows_virtual_machine": "resourceArmDevTestWindowsVirtualMachine"
      },
      "supported_data_sources": {
        "azurerm_dev_test_lab": "dataSourceDevTestLab",
        "azurerm_dev_test_virtual_network": "dataSourceArmDevTestVirtualNetwork"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_dev_test_global_vm_shutdown_schedule": {
          "create_method": "resourceDevTestGlobalVMShutdownScheduleCreateUpdate",
          "read_method": "resourceDevTestGlobalVMShutdownScheduleRead",
          "update_method": "resourceDevTestGlobalVMShutdownScheduleCreateUpdate",
          "delete_method": "resourceDevTestGlobalVMShutdownScheduleDelete"
        },
        "azurerm_dev_test_lab": {
          "create_method": "resourceDevTestLabCreateUpdate",
          "read_method": "resourceDevTestLabRead",
          "update_method": "resourceDevTestLabCreateUpdate",
          "delete_method": "resourceDevTestLabDelete"
        },
        "azurerm_dev_test_linux_virtual_machine": {
          "create_method": "resourceArmDevTestLinuxVirtualMachineCreateUpdate",
          "read_method": "resourceArmDevTestLinuxVirtualMachineRead",
          "update_method": "resourceArmDevTestLinuxVirtualMachineCreateUpdate",
          "delete_method": "resourceArmDevTestLinuxVirtualMachineDelete"
        },
        "azurerm_dev_test_policy": {
          "create_method": "resourceArmDevTestPolicyCreateUpdate",
          "read_method": "resourceArmDevTestPolicyRead",
          "update_method": "resourceArmDevTestPolicyCreateUpdate",
          "delete_method": "resourceArmDevTestPolicyDelete"
        },
        "azurerm_dev_test_schedule": {
          "create_method": "resourceDevTestLabSchedulesCreateUpdate",
          "read_method": "resourceDevTestLabSchedulesRead",
          "update_method": "resourceDevTestLabSchedulesCreateUpdate",
          "delete_method": "resourceDevTestLabSchedulesDelete"
        },
        "azurerm_dev_test_virtual_network": {
          "create_method": "resourceArmDevTestVirtualNetworkCreate",
          "read_method": "resourceArmDevTestVirtualNetworkRead",
          "update_method": "resourceArmDevTestVirtualNetworkUpdate",
          "delete_method": "resourceArmDevTestVirtualNetworkDelete"
        },
        "azurerm_dev_test_windows_virtual_machine": {
          "create_method": "resourceArmDevTestWindowsVirtualMachineCreateUpdate",
          "read_method": "resourceArmDevTestWindowsVirtualMachineRead",
          "update_method": "resourceArmDevTestWindowsVirtualMachineCreateUpdate",
          "delete_method": "resourceArmDevTestWindowsVirtualMachineDelete"
        }
      },
      "data_source_methods": {
        "azurerm_dev_test_lab": {
          "read_method": "dataSourceDevTestLabRead"
        },
        "azurerm_dev_test_virtual_network": {
          "read_method": "dataSourceArmDevTestVnetRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "digitaltwins",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/digitaltwins",
      "supported_resources": {
        "azurerm_digital_twins_endpoint_eventgrid": "resourceDigitalTwinsEndpointEventGrid",
        "azurerm_digital_twins_endpoint_eventhub": "resourceDigitalTwinsEndpointEventHub",
        "azurerm_digital_twins_endpoint_servicebus": "resourceDigitalTwinsEndpointServiceBus",
        "azurerm_digital_twins_instance": "resourceDigitalTwinsInstance"
      },
      "supported_data_sources": {
        "azurerm_digital_twins_instance": "dataSourceDigitalTwinsInstance"
      },
      "resources": [
        "TimeSeriesDatabaseConnectionResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_digital_twins_endpoint_eventgrid": {
          "create_method": "resourceDigitalTwinsEndpointEventGridCreateUpdate",
          "read_method": "resourceDigitalTwinsEndpointEventGridRead",
          "update_method": "resourceDigitalTwinsEndpointEventGridCreateUpdate",
          "delete_method": "resourceDigitalTwinsEndpointEventGridDelete"
        },
        "azurerm_digital_twins_endpoint_eventhub": {
          "create_method": "resourceDigitalTwinsEndpointEventHubCreateUpdate",
          "read_method": "resourceDigitalTwinsEndpointEventHubRead",
          "update_method": "resourceDigitalTwinsEndpointEventHubCreateUpdate",
          "delete_method": "resourceDigitalTwinsEndpointEventHubDelete"
        },
        "azurerm_digital_twins_endpoint_servicebus": {
          "create_method": "resourceDigitalTwinsEndpointServiceBusCreateUpdate",
          "read_method": "resourceDigitalTwinsEndpointServiceBusRead",
          "update_method": "resourceDigitalTwinsEndpointServiceBusCreateUpdate",
          "delete_method": "resourceDigitalTwinsEndpointServiceBusDelete"
        },
        "azurerm_digital_twins_instance": {
          "create_method": "resourceDigitalTwinsInstanceCreate",
          "read_method": "resourceDigitalTwinsInstanceRead",
          "update_method": "resourceDigitalTwinsInstanceUpdate",
          "delete_method": "resourceDigitalTwinsInstanceDelete"
        }
      },
      "data_source_methods": {
        "azurerm_digital_twins_instance": {
          "read_method": "dataSourceDigitalTwinsInstanceRead"
        }
      },
      "resource_terraform_types": {
        "TimeSeriesDatabaseConnectionResource": "azurerm_digital_twins_time_series_database_connection"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "dns",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/dns",
      "supported_resources": {
        "azurerm_dns_a_record": "resourceDnsARecord",
        "azurerm_dns_aaaa_record": "resourceDnsAAAARecord",
        "azurerm_dns_caa_record": "resourceDnsCaaRecord",
        "azurerm_dns_cname_record": "resourceDnsCNameRecord",
        "azurerm_dns_mx_record": "resourceDnsMxRecord",
        "azurerm_dns_ns_record": "resourceDnsNsRecord",
        "azurerm_dns_ptr_record": "resourceDnsPtrRecord",
        "azurerm_dns_srv_record": "resourceDnsSrvRecord",
        "azurerm_dns_txt_record": "resourceDnsTxtRecord"
      },
      "supported_data_sources": {
        "azurerm_dns_a_record": "dataSourceDnsARecord",
        "azurerm_dns_aaaa_record": "dataSourceDnsAAAARecord",
        "azurerm_dns_caa_record": "dataSourceDnsCaaRecord",
        "azurerm_dns_cname_record": "dataSourceDnsCNameRecord",
        "azurerm_dns_mx_record": "dataSourceDnsMxRecord",
        "azurerm_dns_ns_record": "dataSourceDnsNsRecord",
        "azurerm_dns_ptr_record": "dataSourceDnsPtrRecord",
        "azurerm_dns_soa_record": "dataSourceDnsSoaRecord",
        "azurerm_dns_srv_record": "dataSourceDnsSrvRecord",
        "azurerm_dns_txt_record": "dataSourceDnsTxtRecord"
      },
      "resources": [
        "DnsZoneResource"
      ],
      "data_sources": [
        "DnsZoneDataResource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_dns_a_record": {
          "create_method": "resourceDnsARecordCreateUpdate",
          "read_method": "resourceDnsARecordRead",
          "update_method": "resourceDnsARecordCreateUpdate",
          "delete_method": "resourceDnsARecordDelete"
        },
        "azurerm_dns_aaaa_record": {
          "create_method": "resourceDnsAaaaRecordCreateUpdate",
          "read_method": "resourceDnsAaaaRecordRead",
          "update_method": "resourceDnsAaaaRecordCreateUpdate",
          "delete_method": "resourceDnsAaaaRecordDelete"
        },
        "azurerm_dns_caa_record": {
          "create_method": "resourceDnsCaaRecordCreateUpdate",
          "read_method": "resourceDnsCaaRecordRead",
          "update_method": "resourceDnsCaaRecordCreateUpdate",
          "delete_method": "resourceDnsCaaRecordDelete"
        },
        "azurerm_dns_cname_record": {
          "create_method": "resourceDnsCNameRecordCreate",
          "read_method": "resourceDnsCNameRecordRead",
          "update_method": "resourceDnsCNameRecordUpdate",
          "delete_method": "resourceDnsCNameRecordDelete"
        },
        "azurerm_dns_mx_record": {
          "create_method": "resourceDnsMxRecordCreateUpdate",
          "read_method": "resourceDnsMxRecordRead",
          "update_method": "resourceDnsMxRecordCreateUpdate",
          "delete_method": "resourceDnsMxRecordDelete"
        },
        "azurerm_dns_ns_record": {
          "create_method": "resourceDnsNsRecordCreate",
          "read_method": "resourceDnsNsRecordRead",
          "update_method": "resourceDnsNsRecordUpdate",
          "delete_method": "resourceDnsNsRecordDelete"
        },
        "azurerm_dns_ptr_record": {
          "create_method": "resourceDnsPtrRecordCreateUpdate",
          "read_method": "resourceDnsPtrRecordRead",
          "update_method": "resourceDnsPtrRecordCreateUpdate",
          "delete_method": "resourceDnsPtrRecordDelete"
        },
        "azurerm_dns_srv_record": {
          "create_method": "resourceDnsSrvRecordCreate",
          "read_method": "resourceDnsSrvRecordRead",
          "update_method": "resourceDnsSrvRecordUpdate",
          "delete_method": "resourceDnsSrvRecordDelete"
        },
        "azurerm_dns_txt_record": {
          "create_method": "resourceDnsTxtRecordCreateUpdate",
          "read_method": "resourceDnsTxtRecordRead",
          "update_method": "resourceDnsTxtRecordCreateUpdate",
          "delete_method": "resourceDnsTxtRecordDelete"
        }
      },
      "data_source_methods": {
        "azurerm_dns_a_record": {
          "read_method": "dataSourceDnsARecordRead"
        },
        "azurerm_dns_aaaa_record": {
          "read_method": "dataSourceDnsAAAARecordRead"
        },
        "azurerm_dns_caa_record": {
          "read_method": "dataSourceDnsCaaRecordRead"
        },
        "azurerm_dns_cname_record": {
          "read_method": "dataSourceDnsCNameRecordRead"
        },
        "azurerm_dns_mx_record": {
          "read_method": "dataSourceDnsMxRecordRead"
        },
        "azurerm_dns_ns_record": {
          "read_method": "dataSourceDnsNsRecordRead"
        },
        "azurerm_dns_ptr_record": {
          "read_method": "dataSourceDnsPtrRecordRead"
        },
        "azurerm_dns_soa_record": {
          "read_method": "dataSourceDnsSoaRecordRead"
        },
        "azurerm_dns_srv_record": {
          "read_method": "dataSourceDnsSrvRecordRead"
        },
        "azurerm_dns_txt_record": {
          "read_method": "dataSourceDnsTxtRecordRead"
        }
      },
      "resource_terraform_types": {
        "DnsZoneResource": "azurerm_dns_zone"
      },
      "data_source_terraform_types": {
        "DnsZoneDataResource": "azurerm_dns_zone"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "domainservices",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/domainservices",
      "supported_resources": {
        "azurerm_active_directory_domain_service": "resourceActiveDirectoryDomainService",
        "azurerm_active_directory_domain_service_replica_set": "resourceActiveDirectoryDomainServiceReplicaSet"
      },
      "supported_data_sources": {
        "azurerm_active_directory_domain_service": "dataSourceActiveDirectoryDomainService"
      },
      "resources": [
        "DomainServiceTrustResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_active_directory_domain_service": {
          "create_method": "resourceActiveDirectoryDomainServiceCreateUpdate",
          "read_method": "resourceActiveDirectoryDomainServiceRead",
          "update_method": "resourceActiveDirectoryDomainServiceCreateUpdate",
          "delete_method": "resourceActiveDirectoryDomainServiceDelete"
        },
        "azurerm_active_directory_domain_service_replica_set": {
          "create_method": "resourceActiveDirectoryDomainServiceReplicaSetCreate",
          "read_method": "resourceActiveDirectoryDomainServiceReplicaSetRead",
          "delete_method": "resourceActiveDirectoryDomainServiceReplicaSetDelete"
        }
      },
      "data_source_methods": {
        "azurerm_active_directory_domain_service": {
          "read_method": "dataSourceActiveDirectoryDomainServiceRead"
        }
      },
      "resource_terraform_types": {
        "DomainServiceTrustResource": "azurerm_active_directory_domain_service_trust"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "dynatrace",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/dynatrace",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "MonitorsResource",
        "TagRulesResource"
      ],
      "data_sources": [
        "MonitorsDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "MonitorsResource": "azurerm_dynatrace_monitor",
        "TagRulesResource": "azurerm_dynatrace_tag_rules"
      },
      "data_source_terraform_types": {
        "MonitorsDataSource": "azurerm_dynatrace_monitor"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "elastic",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/elastic",
      "supported_resources": {
        "azurerm_elastic_cloud_elasticsearch": "resourceElasticsearch"
      },
      "supported_data_sources": {
        "azurerm_elastic_cloud_elasticsearch": "dataSourceElasticsearch"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_elastic_cloud_elasticsearch": {
          "create_method": "resourceElasticsearchCreate",
          "read_method": "resourceElasticsearchRead",
          "update_method": "resourceElasticsearchUpdate",
          "delete_method": "resourceElasticsearchDelete"
        }
      },
      "data_source_methods": {
        "azurerm_elastic_cloud_elasticsearch": {
          "read_method": "dataSourceElasticsearchRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "elasticsan",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/elasticsan",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "ElasticSANResource",
        "ElasticSANVolumeGroupResource",
        "ElasticSANVolumeResource"
      ],
      "data_sources": [
        "ElasticSANDataSource",
        "ElasticSANVolumeGroupDataSource",
        "ElasticSANVolumeSnapshotDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "ElasticSANResource": "azurerm_elastic_san",
        "ElasticSANVolumeGroupResource": "azurerm_elastic_san_volume_group",
        "ElasticSANVolumeResource": "azurerm_elastic_san_volume"
      },
      "data_source_terraform_types": {
        "ElasticSANDataSource": "azurerm_elastic_san",
        "ElasticSANVolumeGroupDataSource": "azurerm_elastic_san_volume_group",
        "ElasticSANVolumeSnapshotDataSource": "azurerm_elastic_san_volume_snapshot"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "eventgrid",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/eventgrid",
      "supported_resources": {
        "azurerm_eventgrid_domain": "resourceEventGridDomain",
        "azurerm_eventgrid_domain_topic": "resourceEventGridDomainTopic",
        "azurerm_eventgrid_event_subscription": "resourceEventGridEventSubscription",
        "azurerm_eventgrid_system_topic": "resourceEventGridSystemTopic",
        "azurerm_eventgrid_system_topic_event_subscription": "resourceEventGridSystemTopicEventSubscription",
        "azurerm_eventgrid_topic": "resourceEventGridTopic"
      },
      "supported_data_sources": {
        "azurerm_eventgrid_domain": "dataSourceEventGridDomain",
        "azurerm_eventgrid_domain_topic": "dataSourceEventGridDomainTopic",
        "azurerm_eventgrid_system_topic": "dataSourceEventGridSystemTopic",
        "azurerm_eventgrid_topic": "dataSourceEventGridTopic"
      },
      "resources": [
        "EventGridNamespaceResource",
        "EventGridPartnerConfigurationResource",
        "EventGridPartnerNamespaceResource",
        "EventGridPartnerRegistrationResource"
      ],
      "data_sources": [
        "EventGridPartnerNamespaceDataSource",
        "EventGridPartnerRegistrationDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_eventgrid_domain": {
          "create_method": "resourceEventGridDomainCreate",
          "read_method": "resourceEventGridDomainRead",
          "update_method": "resourceEventGridDomainUpdate",
          "delete_method": "resourceEventGridDomainDelete"
        },
        "azurerm_eventgrid_domain_topic": {
          "create_method": "resourceEventGridDomainTopicCreate",
          "read_method": "resourceEventGridDomainTopicRead",
          "delete_method": "resourceEventGridDomainTopicDelete"
        },
        "azurerm_eventgrid_event_subscription": {
          "create_method": "resourceEventGridEventSubscriptionCreateUpdate",
          "read_method": "resourceEventGridEventSubscriptionRead",
          "update_method": "resourceEventGridEventSubscriptionCreateUpdate",
          "delete_method": "resourceEventGridEventSubscriptionDelete"
        },
        "azurerm_eventgrid_system_topic": {
          "create_method": "resourceEventGridSystemTopicCreateUpdate",
          "read_method": "resourceEventGridSystemTopicRead",
          "update_method": "resourceEventGridSystemTopicCreateUpdate",
          "delete_method": "resourceEventGridSystemTopicDelete"
        },
        "azurerm_eventgrid_system_topic_event_subscription": {
          "create_method": "resourceEventGridSystemTopicEventSubscriptionCreateUpdate",
          "read_method": "resourceEventGridSystemTopicEventSubscriptionRead",
          "update_method": "resourceEventGridSystemTopicEventSubscriptionCreateUpdate",
          "delete_method": "resourceEventGridSystemTopicEventSubscriptionDelete"
        },
        "azurerm_eventgrid_topic": {
          "create_method": "resourceEventGridTopicCreate",
          "read_method": "resourceEventGridTopicRead",
          "update_method": "resourceEventGridTopicUpdate",
          "delete_method": "resourceEventGridTopicDelete"
        }
      },
      "data_source_methods": {
        "azurerm_eventgrid_domain": {
          "read_method": "dataSourceEventGridDomainRead"
        },
        "azurerm_eventgrid_domain_topic": {
          "read_method": "dataSourceEventGridDomainTopicRead"
        },
        "azurerm_eventgrid_system_topic": {
          "read_method": "dataSourceEventGridSystemTopicRead"
        },
        "azurerm_eventgrid_topic": {
          "read_method": "dataSourceEventGridTopicRead"
        }
      },
      "resource_terraform_types": {
        "EventGridNamespaceResource": "azurerm_eventgrid_namespace",
        "EventGridPartnerConfigurationResource": "azurerm_eventgrid_partner_configuration",
        "EventGridPartnerNamespaceResource": "azurerm_eventgrid_partner_namespace",
        "EventGridPartnerRegistrationResource": "azurerm_eventgrid_partner_registration"
      },
      "data_source_terraform_types": {
        "EventGridPartnerNamespaceDataSource": "azurerm_eventgrid_partner_namespace",
        "EventGridPartnerRegistrationDataSource": "azurerm_eventgrid_partner_registration"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "eventhub",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/eventhub",
      "supported_resources": {
        "azurerm_eventhub": "resourceEventHub",
        "azurerm_eventhub_authorization_rule": "resourceEventHubAuthorizationRule",
        "azurerm_eventhub_cluster": "resourceEventHubCluster",
        "azurerm_eventhub_namespace": "resourceEventHubNamespace",
        "azurerm_eventhub_namespace_authorization_rule": "resourceEventHubNamespaceAuthorizationRule",
        "azurerm_eventhub_namespace_customer_managed_key": "resourceEventHubNamespaceCustomerManagedKey",
        "azurerm_eventhub_namespace_disaster_recovery_config": "resourceEventHubNamespaceDisasterRecoveryConfig",
        "azurerm_eventhub_namespace_schema_group": "resourceEventHubNamespaceSchemaRegistry"
      },
      "supported_data_sources": {
        "azurerm_eventhub": "dataSourceEventHub",
        "azurerm_eventhub_authorization_rule": "EventHubAuthorizationRuleDataSource",
        "azurerm_eventhub_cluster": "dataSourceEventHubCluster",
        "azurerm_eventhub_consumer_group": "EventHubConsumerGroupDataSource",
        "azurerm_eventhub_namespace": "EventHubNamespaceDataSource",
        "azurerm_eventhub_namespace_authorization_rule": "EventHubNamespaceDataSourceAuthorizationRule"
      },
      "resources": [
        "ConsumerGroupResource"
      ],
      "data_sources": [
        "EventHubSharedAccessSignatureDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_eventhub": {
          "create_method": "resourceEventHubCreate",
          "read_method": "resourceEventHubRead",
          "update_method": "resourceEventHubUpdate",
          "delete_method": "resourceEventHubDelete"
        },
        "azurerm_eventhub_authorization_rule": {
          "create_method": "resourceEventHubAuthorizationRuleCreateUpdate",
          "read_method": "resourceEventHubAuthorizationRuleRead",
          "update_method": "resourceEventHubAuthorizationRuleCreateUpdate",
          "delete_method": "resourceEventHubAuthorizationRuleDelete"
        },
        "azurerm_eventhub_cluster": {
          "create_method": "resourceEventHubClusterCreateUpdate",
          "read_method": "resourceEventHubClusterRead",
          "update_method": "resourceEventHubClusterCreateUpdate",
          "delete_method": "resourceEventHubClusterDelete"
        },
        "azurerm_eventhub_namespace": {
          "create_method": "resourceEventHubNamespaceCreate",
          "read_method": "resourceEventHubNamespaceRead",
          "update_method": "resourceEventHubNamespaceUpdate",
          "delete_method": "resourceEventHubNamespaceDelete"
        },
        "azurerm_eventhub_namespace_authorization_rule": {
          "create_method": "resourceEventHubNamespaceAuthorizationRuleCreateUpdate",
          "read_method": "resourceEventHubNamespaceAuthorizationRuleRead",
          "update_method": "resourceEventHubNamespaceAuthorizationRuleCreateUpdate",
          "delete_method": "resourceEventHubNamespaceAuthorizationRuleDelete"
        },
        "azurerm_eventhub_namespace_customer_managed_key": {
          "create_method": "resourceEventHubNamespaceCustomerManagedKeyCreateUpdate",
          "read_method": "resourceEventHubNamespaceCustomerManagedKeyRead",
          "update_method": "resourceEventHubNamespaceCustomerManagedKeyCreateUpdate",
          "delete_method": "resourceEventHubNamespaceCustomerManagedKeyDelete"
        },
        "azurerm_eventhub_namespace_disaster_recovery_config": {
          "create_method": "resourceEventHubNamespaceDisasterRecoveryConfigCreate",
          "read_method": "resourceEventHubNamespaceDisasterRecoveryConfigRead",
          "update_method": "resourceEventHubNamespaceDisasterRecoveryConfigUpdate",
          "delete_method": "resourceEventHubNamespaceDisasterRecoveryConfigDelete"
        },
        "azurerm_eventhub_namespace_schema_group": {
          "create_method": "resourceEventHubNamespaceSchemaRegistryCreate",
          "read_method": "resourceEventHubNamespaceSchemaRegistryRead",
          "delete_method": "resourceEventHubNamespaceSchemaRegistryDelete"
        }
      },
      "data_source_methods": {
        "azurerm_eventhub": {
          "read_method": "dataSourceEventHubRead"
        },
        "azurerm_eventhub_authorization_rule": {
          "read_method": "EventHubAuthorizationRuleDataSourceRead"
        },
        "azurerm_eventhub_cluster": {
          "read_method": "dataSourceEventHubClusterRead"
        },
        "azurerm_eventhub_consumer_group": {
          "read_method": "EventHubConsumerGroupDataSourceRead"
        },
        "azurerm_eventhub_namespace": {
          "read_method": "EventHubNamespaceDataSourceRead"
        },
        "azurerm_eventhub_namespace_authorization_rule": {
          "read_method": "EventHubNamespaceDataSourceAuthorizationRuleRead"
        }
      },
      "resource_terraform_types": {
        "ConsumerGroupResource": "azurerm_eventhub_consumer_group"
      },
      "data_source_terraform_types": {
        "EventHubSharedAccessSignatureDataSource": "azurerm_eventhub_sas"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "extendedlocation",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/extendedlocation",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "CustomLocationResource",
        "ExtendedLocationCustomLocationResource",
        "ExtendedLocationCustomLocationResource"
      ],
      "data_sources": [
        "ExtendedLocationCustomLocationDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "CustomLocationResource": "azurerm_extended_custom_location",
        "ExtendedLocationCustomLocationResource": "azurerm_extended_location_custom_location"
      },
      "data_source_terraform_types": {
        "ExtendedLocationCustomLocationDataSource": "azurerm_extended_location_custom_location"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "fabric",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/fabric",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "FabricCapacityResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "FabricCapacityResource": "azurerm_fabric_capacity"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "fluidrelay",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/fluidrelay",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "Server"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "Server": "azurerm_fluid_relay_server"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "firewall",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/firewall",
      "supported_resources": {
        "azurerm_firewall": "resourceFirewall",
        "azurerm_firewall_application_rule_collection": "resourceFirewallApplicationRuleCollection",
        "azurerm_firewall_nat_rule_collection": "resourceFirewallNatRuleCollection",
        "azurerm_firewall_network_rule_collection": "resourceFirewallNetworkRuleCollection",
        "azurerm_firewall_policy": "resourceFirewallPolicy",
        "azurerm_firewall_policy_rule_collection_group": "resourceFirewallPolicyRuleCollectionGroup"
      },
      "supported_data_sources": {
        "azurerm_firewall": "firewallDataSource",
        "azurerm_firewall_policy": "FirewallDataSourcePolicy"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_firewall": {},
        "azurerm_firewall_application_rule_collection": {
          "create_method": "resourceFirewallApplicationRuleCollectionCreateUpdate",
          "read_method": "resourceFirewallApplicationRuleCollectionRead",
          "update_method": "resourceFirewallApplicationRuleCollectionCreateUpdate",
          "delete_method": "resourceFirewallApplicationRuleCollectionDelete"
        },
        "azurerm_firewall_nat_rule_collection": {
          "create_method": "resourceFirewallNatRuleCollectionCreateUpdate",
          "read_method": "resourceFirewallNatRuleCollectionRead",
          "update_method": "resourceFirewallNatRuleCollectionCreateUpdate",
          "delete_method": "resourceFirewallNatRuleCollectionDelete"
        },
        "azurerm_firewall_network_rule_collection": {
          "create_method": "resourceFirewallNetworkRuleCollectionCreateUpdate",
          "read_method": "resourceFirewallNetworkRuleCollectionRead",
          "update_method": "resourceFirewallNetworkRuleCollectionCreateUpdate",
          "delete_method": "resourceFirewallNetworkRuleCollectionDelete"
        },
        "azurerm_firewall_policy": {
          "create_method": "resourceFirewallPolicyCreateUpdate",
          "read_method": "resourceFirewallPolicyRead",
          "update_method": "resourceFirewallPolicyCreateUpdate",
          "delete_method": "resourceFirewallPolicyDelete"
        },
        "azurerm_firewall_policy_rule_collection_group": {
          "create_method": "resourceFirewallPolicyRuleCollectionGroupCreateUpdate",
          "read_method": "resourceFirewallPolicyRuleCollectionGroupRead",
          "update_method": "resourceFirewallPolicyRuleCollectionGroupCreateUpdate",
          "delete_method": "resourceFirewallPolicyRuleCollectionGroupDelete"
        }
      },
      "data_source_methods": {
        "azurerm_firewall": {
          "read_method": "firewallDataSourceRead"
        },
        "azurerm_firewall_policy": {
          "read_method": "FirewallDataSourcePolicyRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "frontdoor",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor",
      "supported_resources": {
        "azurerm_frontdoor": "resourceFrontDoor",
        "azurerm_frontdoor_custom_https_configuration": "resourceFrontDoorCustomHTTPSConfiguration",
        "azurerm_frontdoor_firewall_policy": "resourceFrontDoorFirewallPolicy",
        "azurerm_frontdoor_rules_engine": "resourceFrontDoorRulesEngine"
      },
      "supported_data_sources": {},
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_frontdoor": {
          "create_method": "resourceFrontDoorCreate",
          "read_method": "resourceFrontDoorRead",
          "update_method": "resourceFrontDoorUpdate",
          "delete_method": "resourceFrontDoorDelete"
        },
        "azurerm_frontdoor_custom_https_configuration": {
          "create_method": "resourceFrontDoorCustomHTTPSConfigurationCreateUpdate",
          "read_method": "resourceFrontDoorCustomHTTPSConfigurationRead",
          "update_method": "resourceFrontDoorCustomHTTPSConfigurationCreateUpdate",
          "delete_method": "resourceFrontDoorCustomHTTPSConfigurationDelete"
        },
        "azurerm_frontdoor_firewall_policy": {
          "create_method": "resourceFrontDoorFirewallPolicyCreateUpdate",
          "read_method": "resourceFrontDoorFirewallPolicyRead",
          "update_method": "resourceFrontDoorFirewallPolicyCreateUpdate",
          "delete_method": "resourceFrontDoorFirewallPolicyDelete"
        },
        "azurerm_frontdoor_rules_engine": {
          "create_method": "resourceFrontDoorRulesEngineCreateUpdate",
          "read_method": "resourceFrontDoorRulesEngineRead",
          "update_method": "resourceFrontDoorRulesEngineCreateUpdate",
          "delete_method": "resourceFrontDoorRulesEngineDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "graphservices",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/graphservices",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "AccountResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "AccountResource": "azurerm_graph_services_account"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "hdinsight",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/hdinsight",
      "supported_resources": {
        "azurerm_hdinsight_hadoop_cluster": "resourceHDInsightHadoopCluster",
        "azurerm_hdinsight_hbase_cluster": "resourceHDInsightHBaseCluster",
        "azurerm_hdinsight_interactive_query_cluster": "resourceHDInsightInteractiveQueryCluster",
        "azurerm_hdinsight_kafka_cluster": "resourceHDInsightKafkaCluster",
        "azurerm_hdinsight_spark_cluster": "resourceHDInsightSparkCluster"
      },
      "supported_data_sources": {
        "azurerm_hdinsight_cluster": "dataSourceHDInsightSparkCluster"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_hdinsight_hadoop_cluster": {
          "create_method": "resourceHDInsightHadoopClusterCreate",
          "read_method": "resourceHDInsightHadoopClusterRead"
        },
        "azurerm_hdinsight_hbase_cluster": {
          "create_method": "resourceHDInsightHBaseClusterCreate",
          "read_method": "resourceHDInsightHBaseClusterRead"
        },
        "azurerm_hdinsight_interactive_query_cluster": {
          "create_method": "resourceHDInsightInteractiveQueryClusterCreate",
          "read_method": "resourceHDInsightInteractiveQueryClusterRead"
        },
        "azurerm_hdinsight_kafka_cluster": {
          "create_method": "resourceHDInsightKafkaClusterCreate",
          "read_method": "resourceHDInsightKafkaClusterRead"
        },
        "azurerm_hdinsight_spark_cluster": {
          "create_method": "resourceHDInsightSparkClusterCreate",
          "read_method": "resourceHDInsightSparkClusterRead"
        }
      },
      "data_source_methods": {
        "azurerm_hdinsight_cluster": {
          "read_method": "dataSourceHDInsightClusterRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "healthcare",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/healthcare",
      "supported_resources": {
        "azurerm_healthcare_dicom_service": "resourceHealthcareApisDicomService",
        "azurerm_healthcare_fhir_service": "resourceHealthcareApisFhirService",
        "azurerm_healthcare_medtech_service": "resourceHealthcareApisMedTechService",
        "azurerm_healthcare_medtech_service_fhir_destination": "resourceHealthcareApisMedTechServiceFhirDestination",
        "azurerm_healthcare_service": "resourceHealthcareService",
        "azurerm_healthcare_workspace": "resourceHealthcareApisWorkspace"
      },
      "supported_data_sources": {
        "azurerm_healthcare_dicom_service": "dataSourceHealthcareDicomService",
        "azurerm_healthcare_fhir_service": "dataSourceHealthcareApisFhirService",
        "azurerm_healthcare_medtech_service": "dataSourceHealthcareIotConnector",
        "azurerm_healthcare_service": "dataSourceHealthcareService",
        "azurerm_healthcare_workspace": "dataSourceHealthcareWorkspace"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_healthcare_dicom_service": {
          "create_method": "resourceHealthcareApisDicomServiceCreate",
          "read_method": "resourceHealthcareApisDicomServiceRead",
          "update_method": "resourceHealthcareApisDicomServiceUpdate",
          "delete_method": "resourceHealthcareApisDicomServiceDelete"
        },
        "azurerm_healthcare_fhir_service": {
          "create_method": "resourceHealthcareApisFhirServiceCreate",
          "read_method": "resourceHealthcareApisFhirServiceRead",
          "update_method": "resourceHealthcareApisFhirServiceUpdate",
          "delete_method": "resourceHealthcareApisFhirServiceDelete"
        },
        "azurerm_healthcare_medtech_service": {
          "create_method": "resourceHealthcareApisMedTechServiceCreate",
          "read_method": "resourceHealthcareApisMedTechServiceRead",
          "update_method": "resourceHealthcareApisMedTechServiceUpdate",
          "delete_method": "resourceHealthcareApisMedTechServiceDelete"
        },
        "azurerm_healthcare_medtech_service_fhir_destination": {
          "create_method": "resourceHealthcareApisMedTechServiceFhirDestinationCreate",
          "read_method": "resourceHealthcareApisMedTechServiceFhirDestinationRead",
          "update_method": "resourceHealthcareApisMedTechServiceFhirDestinationUpdate",
          "delete_method": "resourceHealthcareApisMedTechServiceFhirDestinationDelete"
        },
        "azurerm_healthcare_service": {
          "create_method": "resourceHealthcareServiceCreateUpdate",
          "read_method": "resourceHealthcareServiceRead",
          "update_method": "resourceHealthcareServiceCreateUpdate",
          "delete_method": "resourceHealthcareServiceDelete"
        },
        "azurerm_healthcare_workspace": {
          "create_method": "resourceHealthcareApisWorkspaceCreate",
          "read_method": "resourceHealthcareApisWorkspaceRead",
          "update_method": "resourceHealthcareApisWorkspaceUpdate",
          "delete_method": "resourceHealthcareApisWorkspaceDelete"
        }
      },
      "data_source_methods": {
        "azurerm_healthcare_dicom_service": {
          "read_method": "dataSourceHealthcareApisDicomServiceRead"
        },
        "azurerm_healthcare_fhir_service": {
          "read_method": "dataSourceHealthcareApisFhirServiceRead"
        },
        "azurerm_healthcare_medtech_service": {
          "read_method": "dataSourceHealthcareIotConnectorRead"
        },
        "azurerm_healthcare_service": {
          "read_method": "dataSourceHealthcareServiceRead"
        },
        "azurerm_healthcare_workspace": {
          "read_method": "dataSourceHealthcareWorkspaceRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "hsm",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/hsm",
      "supported_resources": {
        "azurerm_dedicated_hardware_security_module": "resourceDedicatedHardwareSecurityModule"
      },
      "supported_data_sources": {},
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_dedicated_hardware_security_module": {
          "create_method": "resourceDedicatedHardwareSecurityModuleCreate",
          "read_method": "resourceDedicatedHardwareSecurityModuleRead",
          "update_method": "resourceDedicatedHardwareSecurityModuleUpdate",
          "delete_method": "resourceDedicatedHardwareSecurityModuleDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "hybridcompute",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/hybridcompute",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "ArcMachineResource",
        "ArcMachineExtensionResource",
        "ArcPrivateLinkScopeResource"
      ],
      "data_sources": [
        "ArcMachineDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "ArcMachineExtensionResource": "azurerm_arc_machine_extension",
        "ArcMachineResource": "azurerm_arc_machine",
        "ArcPrivateLinkScopeResource": "azurerm_arc_private_link_scope"
      },
      "data_source_terraform_types": {
        "ArcMachineDataSource": "azurerm_arc_machine"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "iotcentral",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/iotcentral",
      "supported_resources": {
        "azurerm_iotcentral_application": "resourceIotCentralApplication"
      },
      "supported_data_sources": {},
      "resources": [
        "IotCentralApplicationNetworkRuleSetResource",
        "IotCentralOrganizationResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_iotcentral_application": {
          "create_method": "resourceIotCentralAppCreate",
          "read_method": "resourceIotCentralAppRead",
          "update_method": "resourceIotCentralAppUpdate",
          "delete_method": "resourceIotCentralAppDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {
        "IotCentralApplicationNetworkRuleSetResource": "azurerm_iotcentral_application_network_rule_set",
        "IotCentralOrganizationResource": "azurerm_iotcentral_organization"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "iothub",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/iothub",
      "supported_resources": {
        "azurerm_iothub": "resourceIotHub",
        "azurerm_iothub_certificate": "resourceIotHubCertificate",
        "azurerm_iothub_consumer_group": "resourceIotHubConsumerGroup",
        "azurerm_iothub_dps": "resourceIotHubDPS",
        "azurerm_iothub_dps_certificate": "resourceIotHubDPSCertificate",
        "azurerm_iothub_dps_shared_access_policy": "resourceIotHubDPSSharedAccessPolicy",
        "azurerm_iothub_endpoint_eventhub": "resourceIotHubEndpointEventHub",
        "azurerm_iothub_endpoint_servicebus_queue": "resourceIotHubEndpointServiceBusQueue",
        "azurerm_iothub_endpoint_servicebus_topic": "resourceIotHubEndpointServiceBusTopic",
        "azurerm_iothub_endpoint_storage_container": "resourceIotHubEndpointStorageContainer",
        "azurerm_iothub_enrichment": "resourceIotHubEnrichment",
        "azurerm_iothub_fallback_route": "resourceIotHubFallbackRoute",
        "azurerm_iothub_route": "resourceIotHubRoute",
        "azurerm_iothub_shared_access_policy": "resourceIotHubSharedAccessPolicy"
      },
      "supported_data_sources": {
        "azurerm_iothub": "dataSourceIotHub",
        "azurerm_iothub_dps": "dataSourceIotHubDPS",
        "azurerm_iothub_dps_shared_access_policy": "dataSourceIotHubDPSSharedAccessPolicy",
        "azurerm_iothub_shared_access_policy": "dataSourceIotHubSharedAccessPolicy"
      },
      "resources": [
        "IotHubDeviceUpdateAccountResource",
        "IotHubDeviceUpdateInstanceResource",
        "IotHubFileUploadResource",
        "IotHubEndpointCosmosDBAccountResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_iothub": {
          "create_method": "resourceIotHubCreate",
          "read_method": "resourceIotHubRead",
          "update_method": "resourceIotHubUpdate",
          "delete_method": "resourceIotHubDelete"
        },
        "azurerm_iothub_certificate": {
          "create_method": "resourceIotHubCertificateCreate",
          "read_method": "resourceIotHubCertificateRead",
          "update_method": "resourceIotHubCertificateUpdate",
          "delete_method": "resourceIotHubCertificateDelete"
        },
        "azurerm_iothub_consumer_group": {
          "create_method": "resourceIotHubConsumerGroupCreate",
          "read_method": "resourceIotHubConsumerGroupRead",
          "delete_method": "resourceIotHubConsumerGroupDelete"
        },
        "azurerm_iothub_dps": {
          "create_method": "resourceIotHubDPSCreate",
          "read_method": "resourceIotHubDPSRead",
          "update_method": "resourceIotHubDPSUpdate",
          "delete_method": "resourceIotHubDPSDelete"
        },
        "azurerm_iothub_dps_certificate": {
          "create_method": "resourceIotHubDPSCertificateCreate",
          "read_method": "resourceIotHubDPSCertificateRead",
          "update_method": "resourceIotHubDPSCertificateUpdate",
          "delete_method": "resourceIotHubDPSCertificateDelete"
        },
        "azurerm_iothub_dps_shared_access_policy": {
          "create_method": "resourceIotHubDPSSharedAccessPolicyCreateUpdate",
          "read_method": "resourceIotHubDPSSharedAccessPolicyRead",
          "update_method": "resourceIotHubDPSSharedAccessPolicyCreateUpdate",
          "delete_method": "resourceIotHubDPSSharedAccessPolicyDelete"
        },
        "azurerm_iothub_endpoint_eventhub": {
          "create_method": "resourceIotHubEndpointEventHubCreateUpdate",
          "read_method": "resourceIotHubEndpointEventHubRead",
          "update_method": "resourceIotHubEndpointEventHubCreateUpdate",
          "delete_method": "resourceIotHubEndpointEventHubDelete"
        },
        "azurerm_iothub_endpoint_servicebus_queue": {
          "create_method": "resourceIotHubEndpointServiceBusQueueCreateUpdate",
          "read_method": "resourceIotHubEndpointServiceBusQueueRead",
          "update_method": "resourceIotHubEndpointServiceBusQueueCreateUpdate",
          "delete_method": "resourceIotHubEndpointServiceBusQueueDelete"
        },
        "azurerm_iothub_endpoint_servicebus_topic": {
          "create_method": "resourceIotHubEndpointServiceBusTopicCreateUpdate",
          "read_method": "resourceIotHubEndpointServiceBusTopicRead",
          "update_method": "resourceIotHubEndpointServiceBusTopicCreateUpdate",
          "delete_method": "resourceIotHubEndpointServiceBusTopicDelete"
        },
        "azurerm_iothub_endpoint_storage_container": {
          "create_method": "resourceIotHubEndpointStorageContainerCreateUpdate",
          "read_method": "resourceIotHubEndpointStorageContainerRead",
          "update_method": "resourceIotHubEndpointStorageContainerCreateUpdate",
          "delete_method": "resourceIotHubEndpointStorageContainerDelete"
        },
        "azurerm_iothub_enrichment": {
          "create_method": "resourceArmIotHubEnrichmentCreateUpdate",
          "read_method": "resourceArmIotHubEnrichmentRead",
          "update_method": "resourceArmIotHubEnrichmentCreateUpdate",
          "delete_method": "resourceArmIotHubEnrichmentDelete"
        },
        "azurerm_iothub_fallback_route": {
          "create_method": "resourceIotHubFallbackRouteCreateUpdate",
          "read_method": "resourceIotHubFallbackRouteRead",
          "update_method": "resourceIotHubFallbackRouteCreateUpdate",
          "delete_method": "resourceIotHubFallbackRouteDelete"
        },
        "azurerm_iothub_route": {
          "create_method": "resourceIotHubRouteCreateUpdate",
          "read_method": "resourceIotHubRouteRead",
          "update_method": "resourceIotHubRouteCreateUpdate",
          "delete_method": "resourceIotHubRouteDelete"
        },
        "azurerm_iothub_shared_access_policy": {
          "create_method": "resourceIotHubSharedAccessPolicyCreateUpdate",
          "read_method": "resourceIotHubSharedAccessPolicyRead",
          "update_method": "resourceIotHubSharedAccessPolicyCreateUpdate",
          "delete_method": "resourceIotHubSharedAccessPolicyDelete"
        }
      },
      "data_source_methods": {
        "azurerm_iothub": {
          "read_method": "dataSourceIotHubRead"
        },
        "azurerm_iothub_dps": {
          "read_method": "dataSourceIotHubDPSRead"
        },
        "azurerm_iothub_dps_shared_access_policy": {
          "read_method": "dataSourceIotHubDPSSharedAccessPolicyRead"
        },
        "azurerm_iothub_shared_access_policy": {
          "read_method": "dataSourceIotHubSharedAccessPolicyRead"
        }
      },
      "resource_terraform_types": {
        "IotHubDeviceUpdateAccountResource": "azurerm_iothub_device_update_account",
        "IotHubDeviceUpdateInstanceResource": "azurerm_iothub_device_update_instance",
        "IotHubEndpointCosmosDBAccountResource": "azurerm_iothub_endpoint_cosmosdb_account",
        "IotHubFileUploadResource": "azurerm_iothub_file_upload"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "keyvault",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault",
      "supported_resources": {
        "azurerm_key_vault": "resourceKeyVault",
        "azurerm_key_vault_access_policy": "resourceKeyVaultAccessPolicy",
        "azurerm_key_vault_certificate": "resourceKeyVaultCertificate",
        "azurerm_key_vault_certificate_issuer": "resourceKeyVaultCertificateIssuer",
        "azurerm_key_vault_key": "resourceKeyVaultKey",
        "azurerm_key_vault_managed_storage_account": "resourceKeyVaultManagedStorageAccount",
        "azurerm_key_vault_managed_storage_account_sas_token_definition": "resourceKeyVaultManagedStorageAccountSasTokenDefinition",
        "azurerm_key_vault_secret": "resourceKeyVaultSecret"
      },
      "supported_data_sources": {
        "azurerm_key_vault": "dataSourceKeyVault",
        "azurerm_key_vault_access_policy": "dataSourceKeyVaultAccessPolicy",
        "azurerm_key_vault_certificate": "dataSourceKeyVaultCertificate",
        "azurerm_key_vault_certificate_data": "dataSourceKeyVaultCertificateData",
        "azurerm_key_vault_certificate_issuer": "dataSourceKeyVaultCertificateIssuer",
        "azurerm_key_vault_certificates": "dataSourceKeyVaultCertificates",
        "azurerm_key_vault_key": "dataSourceKeyVaultKey",
        "azurerm_key_vault_secret": "dataSourceKeyVaultSecret",
        "azurerm_key_vault_secrets": "dataSourceKeyVaultSecrets"
      },
      "resources": [
        "KeyVaultCertificateContactsResource"
      ],
      "data_sources": [
        "EncryptedValueDataSource"
      ],
      "ephemeral_functions": [
        "NewKeyVaultCertificateEphemeralResource",
        "NewKeyVaultSecretEphemeralResource"
      ],
      "resource_crud_methods": {
        "azurerm_key_vault": {
          "create_method": "resourceKeyVaultCreate",
          "read_method": "resourceKeyVaultRead",
          "update_method": "resourceKeyVaultUpdate",
          "delete_method": "resourceKeyVaultDelete"
        },
        "azurerm_key_vault_access_policy": {
          "create_method": "resourceKeyVaultAccessPolicyCreate",
          "read_method": "resourceKeyVaultAccessPolicyRead",
          "update_method": "resourceKeyVaultAccessPolicyUpdate",
          "delete_method": "resourceKeyVaultAccessPolicyDelete"
        },
        "azurerm_key_vault_certificate": {
          "create_method": "resourceKeyVaultCertificateCreate",
          "read_method": "resourceKeyVaultCertificateRead",
          "update_method": "resourceKeyVaultCertificateUpdate",
          "delete_method": "resourceKeyVaultCertificateDelete"
        },
        "azurerm_key_vault_certificate_issuer": {
          "create_method": "resourceKeyVaultCertificateIssuerCreateOrUpdate",
          "read_method": "resourceKeyVaultCertificateIssuerRead",
          "update_method": "resourceKeyVaultCertificateIssuerCreateOrUpdate",
          "delete_method": "resourceKeyVaultCertificateIssuerDelete"
        },
        "azurerm_key_vault_key": {
          "create_method": "resourceKeyVaultKeyCreate",
          "read_method": "resourceKeyVaultKeyRead",
          "update_method": "resourceKeyVaultKeyUpdate",
          "delete_method": "resourceKeyVaultKeyDelete"
        },
        "azurerm_key_vault_managed_storage_account": {
          "create_method": "resourceKeyVaultManagedStorageAccountCreateUpdate",
          "read_method": "resourceKeyVaultManagedStorageAccountRead",
          "update_method": "resourceKeyVaultManagedStorageAccountCreateUpdate",
          "delete_method": "resourceKeyVaultManagedStorageAccountDelete"
        },
        "azurerm_key_vault_managed_storage_account_sas_token_definition": {
          "create_method": "resourceKeyVaultManagedStorageAccountSasTokenDefinitionCreateUpdate",
          "read_method": "resourceKeyVaultManagedStorageAccountSasTokenDefinitionRead",
          "update_method": "resourceKeyVaultManagedStorageAccountSasTokenDefinitionCreateUpdate",
          "delete_method": "resourceKeyVaultManagedStorageAccountSasTokenDefinitionDelete"
        },
        "azurerm_key_vault_secret": {
          "create_method": "resourceKeyVaultSecretCreate",
          "read_method": "resourceKeyVaultSecretRead",
          "update_method": "resourceKeyVaultSecretUpdate",
          "delete_method": "resourceKeyVaultSecretDelete"
        }
      },
      "data_source_methods": {
        "azurerm_key_vault": {
          "read_method": "dataSourceKeyVaultRead"
        },
        "azurerm_key_vault_access_policy": {
          "read_method": "dataSourceKeyVaultAccessPolicyRead"
        },
        "azurerm_key_vault_certificate": {
          "read_method": "dataSourceKeyVaultCertificateRead"
        },
        "azurerm_key_vault_certificate_data": {
          "read_method": "dataSourceArmKeyVaultCertificateDataRead"
        },
        "azurerm_key_vault_certificate_issuer": {
          "read_method": "dataSourceKeyVaultCertificateIssuerRead"
        },
        "azurerm_key_vault_certificates": {
          "read_method": "dataSourceKeyVaultCertificatesRead"
        },
        "azurerm_key_vault_key": {
          "read_method": "dataSourceKeyVaultKeyRead"
        },
        "azurerm_key_vault_secret": {
          "read_method": "dataSourceKeyVaultSecretRead"
        },
        "azurerm_key_vault_secrets": {
          "read_method": "dataSourceKeyVaultSecretsRead"
        }
      },
      "resource_terraform_types": {
        "KeyVaultCertificateContactsResource": "azurerm_key_vault_certificate_contacts"
      },
      "data_source_terraform_types": {
        "EncryptedValueDataSource": "azurerm_key_vault_encrypted_value"
      },
      "ephemeral_terraform_types": {
        "KeyVaultCertificateEphemeralResource": "azurerm_key_vault_certificate",
        "KeyVaultSecretEphemeralResource": "azurerm_key_vault_secret"
      }
    },
    {
      "service_name": "kusto",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/kusto",
      "supported_resources": {
        "azurerm_kusto_attached_database_configuration": "resourceKustoAttachedDatabaseConfiguration",
        "azurerm_kusto_cluster": "resourceKustoCluster",
        "azurerm_kusto_cluster_customer_managed_key": "resourceKustoClusterCustomerManagedKey",
        "azurerm_kusto_cluster_managed_private_endpoint": "resourceKustoClusterManagedPrivateEndpoint",
        "azurerm_kusto_cluster_principal_assignment": "resourceKustoClusterPrincipalAssignment",
        "azurerm_kusto_database": "resourceKustoDatabase",
        "azurerm_kusto_database_principal_assignment": "resourceKustoDatabasePrincipalAssignment",
        "azurerm_kusto_eventgrid_data_connection": "resourceKustoEventGridDataConnection",
        "azurerm_kusto_eventhub_data_connection": "resourceKustoEventHubDataConnection",
        "azurerm_kusto_iothub_data_connection": "resourceKustoIotHubDataConnection",
        "azurerm_kusto_script": "resourceKustoDatabaseScript"
      },
      "supported_data_sources": {
        "azurerm_kusto_cluster": "dataSourceKustoCluster",
        "azurerm_kusto_database": "dataSourceKustoDatabase"
      },
      "resources": [
        "CosmosDBDataConnectionResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_kusto_attached_database_configuration": {
          "create_method": "resourceKustoAttachedDatabaseConfigurationCreateUpdate",
          "read_method": "resourceKustoAttachedDatabaseConfigurationRead",
          "update_method": "resourceKustoAttachedDatabaseConfigurationCreateUpdate",
          "delete_method": "resourceKustoAttachedDatabaseConfigurationDelete"
        },
        "azurerm_kusto_cluster": {
          "create_method": "resourceKustoClusterCreate",
          "read_method": "resourceKustoClusterRead",
          "update_method": "resourceKustoClusterUpdate",
          "delete_method": "resourceKustoClusterDelete"
        },
        "azurerm_kusto_cluster_customer_managed_key": {
          "create_method": "resourceKustoClusterCustomerManagedKeyCreateUpdate",
          "read_method": "resourceKustoClusterCustomerManagedKeyRead",
          "update_method": "resourceKustoClusterCustomerManagedKeyCreateUpdate",
          "delete_method": "resourceKustoClusterCustomerManagedKeyDelete"
        },
        "azurerm_kusto_cluster_managed_private_endpoint": {
          "create_method": "resourceKustoClusterManagedPrivateEndpointCreateUpdate",
          "read_method": "resourceKustoClusterManagedPrivateEndpointRead",
          "update_method": "resourceKustoClusterManagedPrivateEndpointCreateUpdate",
          "delete_method": "resourceKustoClusterManagedPrivateEndpointDelete"
        },
        "azurerm_kusto_cluster_principal_assignment": {
          "create_method": "resourceKustoClusterPrincipalAssignmentCreate",
          "read_method": "resourceKustoClusterPrincipalAssignmentRead",
          "delete_method": "resourceKustoClusterPrincipalAssignmentDelete"
        },
        "azurerm_kusto_database": {
          "create_method": "resourceKustoDatabaseCreateUpdate",
          "read_method": "resourceKustoDatabaseRead",
          "update_method": "resourceKustoDatabaseCreateUpdate",
          "delete_method": "resourceKustoDatabaseDelete"
        },
        "azurerm_kusto_database_principal_assignment": {
          "create_method": "resourceKustoDatabasePrincipalAssignmentCreate",
          "read_method": "resourceKustoDatabasePrincipalAssignmentRead",
          "delete_method": "resourceKustoDatabasePrincipalAssignmentDelete"
        },
        "azurerm_kusto_eventgrid_data_connection": {
          "create_method": "resourceKustoEventGridDataConnectionCreateUpdate",
          "read_method": "resourceKustoEventGridDataConnectionRead",
          "update_method": "resourceKustoEventGridDataConnectionCreateUpdate",
          "delete_method": "resourceKustoEventGridDataConnectionDelete"
        },
        "azurerm_kusto_eventhub_data_connection": {
          "create_method": "resourceKustoEventHubDataConnectionCreateUpdate",
          "read_method": "resourceKustoEventHubDataConnectionRead",
          "update_method": "resourceKustoEventHubDataConnectionCreateUpdate",
          "delete_method": "resourceKustoEventHubDataConnectionDelete"
        },
        "azurerm_kusto_iothub_data_connection": {
          "create_method": "resourceKustoIotHubDataConnectionCreate",
          "read_method": "resourceKustoIotHubDataConnectionRead",
          "delete_method": "resourceKustoIotHubDataConnectionDelete"
        },
        "azurerm_kusto_script": {
          "create_method": "resourceKustoDatabaseScriptCreateUpdate",
          "read_method": "resourceKustoDatabaseScriptRead",
          "update_method": "resourceKustoDatabaseScriptCreateUpdate",
          "delete_method": "resourceKustoDatabaseScriptDelete"
        }
      },
      "data_source_methods": {
        "azurerm_kusto_cluster": {
          "read_method": "dataSourceKustoClusterRead"
        },
        "azurerm_kusto_database": {
          "read_method": "dataSourceKustoDatabaseRead"
        }
      },
      "resource_terraform_types": {
        "CosmosDBDataConnectionResource": "azurerm_kusto_cosmosdb_data_connection"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "legacy",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/legacy",
      "supported_resources": {
        "azurerm_virtual_machine": "resourceVirtualMachine",
        "azurerm_virtual_machine_scale_set": "resourceVirtualMachineScaleSet"
      },
      "supported_data_sources": {},
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_virtual_machine": {
          "create_method": "resourceVirtualMachineCreateUpdate",
          "read_method": "resourceVirtualMachineRead",
          "update_method": "resourceVirtualMachineCreateUpdate",
          "delete_method": "resourceVirtualMachineDelete"
        },
        "azurerm_virtual_machine_scale_set": {
          "create_method": "resourceVirtualMachineScaleSetCreateUpdate",
          "read_method": "resourceVirtualMachineScaleSetRead",
          "update_method": "resourceVirtualMachineScaleSetCreateUpdate",
          "delete_method": "resourceVirtualMachineScaleSetDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "lighthouse",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/lighthouse",
      "supported_resources": {
        "azurerm_lighthouse_assignment": "resourceLighthouseAssignment",
        "azurerm_lighthouse_definition": "resourceLighthouseDefinition"
      },
      "supported_data_sources": {},
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_lighthouse_assignment": {
          "create_method": "resourceLighthouseAssignmentCreate",
          "read_method": "resourceLighthouseAssignmentRead",
          "delete_method": "resourceLighthouseAssignmentDelete"
        },
        "azurerm_lighthouse_definition": {
          "create_method": "resourceLighthouseDefinitionCreateUpdate",
          "read_method": "resourceLighthouseDefinitionRead",
          "update_method": "resourceLighthouseDefinitionCreateUpdate",
          "delete_method": "resourceLighthouseDefinitionDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "loadbalancer",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/loadbalancer",
      "supported_resources": {
        "azurerm_lb": "resourceArmLoadBalancer",
        "azurerm_lb_backend_address_pool": "resourceArmLoadBalancerBackendAddressPool",
        "azurerm_lb_nat_pool": "resourceArmLoadBalancerNatPool",
        "azurerm_lb_nat_rule": "resourceArmLoadBalancerNatRule",
        "azurerm_lb_outbound_rule": "resourceArmLoadBalancerOutboundRule",
        "azurerm_lb_probe": "resourceArmLoadBalancerProbe",
        "azurerm_lb_rule": "resourceArmLoadBalancerRule"
      },
      "supported_data_sources": {
        "azurerm_lb": "dataSourceArmLoadBalancer",
        "azurerm_lb_backend_address_pool": "dataSourceArmLoadBalancerBackendAddressPool",
        "azurerm_lb_outbound_rule": "dataSourceArmLoadBalancerOutboundRule",
        "azurerm_lb_rule": "dataSourceArmLoadBalancerRule"
      },
      "resources": [
        "BackendAddressPoolAddressResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_lb": {
          "create_method": "resourceArmLoadBalancerCreateUpdate",
          "read_method": "resourceArmLoadBalancerRead",
          "update_method": "resourceArmLoadBalancerCreateUpdate",
          "delete_method": "resourceArmLoadBalancerDelete"
        },
        "azurerm_lb_backend_address_pool": {
          "create_method": "resourceArmLoadBalancerBackendAddressPoolCreateUpdate",
          "read_method": "resourceArmLoadBalancerBackendAddressPoolRead",
          "update_method": "resourceArmLoadBalancerBackendAddressPoolCreateUpdate",
          "delete_method": "resourceArmLoadBalancerBackendAddressPoolDelete"
        },
        "azurerm_lb_nat_pool": {
          "create_method": "resourceArmLoadBalancerNatPoolCreateUpdate",
          "read_method": "resourceArmLoadBalancerNatPoolRead",
          "update_method": "resourceArmLoadBalancerNatPoolCreateUpdate",
          "delete_method": "resourceArmLoadBalancerNatPoolDelete"
        },
        "azurerm_lb_nat_rule": {
          "create_method": "resourceArmLoadBalancerNatRuleCreateUpdate",
          "read_method": "resourceArmLoadBalancerNatRuleRead",
          "update_method": "resourceArmLoadBalancerNatRuleCreateUpdate",
          "delete_method": "resourceArmLoadBalancerNatRuleDelete"
        },
        "azurerm_lb_outbound_rule": {
          "create_method": "resourceArmLoadBalancerOutboundRuleCreateUpdate",
          "read_method": "resourceArmLoadBalancerOutboundRuleRead",
          "update_method": "resourceArmLoadBalancerOutboundRuleCreateUpdate",
          "delete_method": "resourceArmLoadBalancerOutboundRuleDelete"
        },
        "azurerm_lb_probe": {
          "create_method": "resourceArmLoadBalancerProbeCreateUpdate",
          "read_method": "resourceArmLoadBalancerProbeRead",
          "update_method": "resourceArmLoadBalancerProbeCreateUpdate",
          "delete_method": "resourceArmLoadBalancerProbeDelete"
        },
        "azurerm_lb_rule": {
          "create_method": "resourceArmLoadBalancerRuleCreateUpdate",
          "read_method": "resourceArmLoadBalancerRuleRead",
          "update_method": "resourceArmLoadBalancerRuleCreateUpdate",
          "delete_method": "resourceArmLoadBalancerRuleDelete"
        }
      },
      "data_source_methods": {
        "azurerm_lb": {
          "read_method": "dataSourceArmLoadBalancerRead"
        },
        "azurerm_lb_backend_address_pool": {
          "read_method": "dataSourceArmLoadBalancerBackendAddressPoolRead"
        },
        "azurerm_lb_outbound_rule": {
          "read_method": "dataSourceArmLoadBalancerOutboundRuleRead"
        },
        "azurerm_lb_rule": {
          "read_method": "dataSourceArmLoadBalancerRuleRead"
        }
      },
      "resource_terraform_types": {
        "BackendAddressPoolAddressResource": "azurerm_lb_backend_address_pool_address"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "loadtestservice",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/loadtestservice",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "LoadTestResource"
      ],
      "data_sources": [
        "LoadTestDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "LoadTestResource": "azurerm_load_test"
      },
      "data_source_terraform_types": {
        "LoadTestDataSource": "azurerm_load_test"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "loganalytics",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/loganalytics",
      "supported_resources": {
        "azurerm_log_analytics_cluster_customer_managed_key": "resourceLogAnalyticsClusterCustomerManagedKey",
        "azurerm_log_analytics_data_export_rule": "resourceLogAnalyticsDataExport",
        "azurerm_log_analytics_datasource_windows_event": "resourceLogAnalyticsDataSourceWindowsEvent",
        "azurerm_log_analytics_datasource_windows_performance_counter": "resourceLogAnalyticsDataSourceWindowsPerformanceCounter",
        "azurerm_log_analytics_linked_service": "resourceLogAnalyticsLinkedService",
        "azurerm_log_analytics_linked_storage_account": "resourceLogAnalyticsLinkedStorageAccount",
        "azurerm_log_analytics_saved_search": "resourceLogAnalyticsSavedSearch",
        "azurerm_log_analytics_storage_insights": "resourceLogAnalyticsStorageInsights",
        "azurerm_log_analytics_workspace": "resourceLogAnalyticsWorkspace"
      },
      "supported_data_sources": {
        "azurerm_log_analytics_workspace": "dataSourceLogAnalyticsWorkspace"
      },
      "resources": [
        "LogAnalyticsClusterResource",
        "LogAnalyticsQueryPackResource",
        "LogAnalyticsQueryPackQueryResource",
        "LogAnalyticsSolutionResource",
        "LogAnalyticsWorkspaceTableResource"
      ],
      "data_sources": [
        "LogAnalyticsWorkspaceTableDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_log_analytics_cluster_customer_managed_key": {
          "create_method": "resourceLogAnalyticsClusterCustomerManagedKeyCreate",
          "read_method": "resourceLogAnalyticsClusterCustomerManagedKeyRead",
          "update_method": "resourceLogAnalyticsClusterCustomerManagedKeyUpdate",
          "delete_method": "resourceLogAnalyticsClusterCustomerManagedKeyDelete"
        },
        "azurerm_log_analytics_data_export_rule": {
          "create_method": "resourceOperationalinsightsDataExportCreateUpdate",
          "read_method": "resourceOperationalinsightsDataExportRead",
          "update_method": "resourceOperationalinsightsDataExportCreateUpdate",
          "delete_method": "resourceOperationalinsightsDataExportDelete"
        },
        "azurerm_log_analytics_datasource_windows_event": {
          "create_method": "resourceLogAnalyticsDataSourceWindowsEventCreateUpdate",
          "read_method": "resourceLogAnalyticsDataSourceWindowsEventRead",
          "update_method": "resourceLogAnalyticsDataSourceWindowsEventCreateUpdate",
          "delete_method": "resourceLogAnalyticsDataSourceWindowsEventDelete"
        },
        "azurerm_log_analytics_datasource_windows_performance_counter": {
          "create_method": "resourceLogAnalyticsDataSourceWindowsPerformanceCounterCreateUpdate",
          "read_method": "resourceLogAnalyticsDataSourceWindowsPerformanceCounterRead",
          "update_method": "resourceLogAnalyticsDataSourceWindowsPerformanceCounterCreateUpdate",
          "delete_method": "resourceLogAnalyticsDataSourceWindowsPerformanceCounterDelete"
        },
        "azurerm_log_analytics_linked_service": {
          "create_method": "resourceLogAnalyticsLinkedServiceCreateUpdate",
          "read_method": "resourceLogAnalyticsLinkedServiceRead",
          "update_method": "resourceLogAnalyticsLinkedServiceCreateUpdate",
          "delete_method": "resourceLogAnalyticsLinkedServiceDelete"
        },
        "azurerm_log_analytics_linked_storage_account": {
          "create_method": "resourceLogAnalyticsLinkedStorageAccountCreateUpdate",
          "read_method": "resourceLogAnalyticsLinkedStorageAccountRead",
          "update_method": "resourceLogAnalyticsLinkedStorageAccountCreateUpdate",
          "delete_method": "resourceLogAnalyticsLinkedStorageAccountDelete"
        },
        "azurerm_log_analytics_saved_search": {
          "create_method": "resourceLogAnalyticsSavedSearchCreate",
          "read_method": "resourceLogAnalyticsSavedSearchRead",
          "delete_method": "resourceLogAnalyticsSavedSearchDelete"
        },
        "azurerm_log_analytics_storage_insights": {
          "create_method": "resourceLogAnalyticsStorageInsightsCreateUpdate",
          "read_method": "resourceLogAnalyticsStorageInsightsRead",
          "update_method": "resourceLogAnalyticsStorageInsightsCreateUpdate",
          "delete_method": "resourceLogAnalyticsStorageInsightsDelete"
        },
        "azurerm_log_analytics_workspace": {
          "create_method": "resourceLogAnalyticsWorkspaceCreate",
          "read_method": "resourceLogAnalyticsWorkspaceRead",
          "update_method": "resourceLogAnalyticsWorkspaceUpdate",
          "delete_method": "resourceLogAnalyticsWorkspaceDelete"
        }
      },
      "data_source_methods": {
        "azurerm_log_analytics_workspace": {
          "read_method": "dataSourceLogAnalyticsWorkspaceRead"
        }
      },
      "resource_terraform_types": {
        "LogAnalyticsClusterResource": "azurerm_log_analytics_cluster",
        "LogAnalyticsQueryPackQueryResource": "azurerm_log_analytics_query_pack_query",
        "LogAnalyticsQueryPackResource": "azurerm_log_analytics_query_pack",
        "LogAnalyticsSolutionResource": "azurerm_log_analytics_solution",
        "LogAnalyticsWorkspaceTableResource": "azurerm_log_analytics_workspace_table"
      },
      "data_source_terraform_types": {
        "LogAnalyticsWorkspaceTableDataSource": "azurerm_log_analytics_workspace_table"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "logic",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/logic",
      "supported_resources": {
        "azurerm_logic_app_action_custom": "resourceLogicAppActionCustom",
        "azurerm_logic_app_action_http": "resourceLogicAppActionHTTP",
        "azurerm_logic_app_integration_account": "resourceLogicAppIntegrationAccount",
        "azurerm_logic_app_integration_account_agreement": "resourceLogicAppIntegrationAccountAgreement",
        "azurerm_logic_app_integration_account_assembly": "resourceLogicAppIntegrationAccountAssembly",
        "azurerm_logic_app_integration_account_batch_configuration": "resourceLogicAppIntegrationAccountBatchConfiguration",
        "azurerm_logic_app_integration_account_certificate": "resourceLogicAppIntegrationAccountCertificate",
        "azurerm_logic_app_integration_account_map": "resourceLogicAppIntegrationAccountMap",
        "azurerm_logic_app_integration_account_partner": "resourceLogicAppIntegrationAccountPartner",
        "azurerm_logic_app_integration_account_schema": "resourceLogicAppIntegrationAccountSchema",
        "azurerm_logic_app_integration_account_session": "resourceLogicAppIntegrationAccountSession",
        "azurerm_logic_app_standard": "resourceLogicAppStandard",
        "azurerm_logic_app_trigger_custom": "resourceLogicAppTriggerCustom",
        "azurerm_logic_app_trigger_http_request": "resourceLogicAppTriggerHttpRequest",
        "azurerm_logic_app_trigger_recurrence": "resourceLogicAppTriggerRecurrence",
        "azurerm_logic_app_workflow": "resourceLogicAppWorkflow"
      },
      "supported_data_sources": {
        "azurerm_logic_app_integration_account": "dataSourceLogicAppIntegrationAccount",
        "azurerm_logic_app_standard": "dataSourceLogicAppStandard",
        "azurerm_logic_app_workflow": "dataSourceLogicAppWorkflow"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_logic_app_action_custom": {
          "create_method": "resourceLogicAppActionCustomCreateUpdate",
          "read_method": "resourceLogicAppActionCustomRead",
          "update_method": "resourceLogicAppActionCustomCreateUpdate",
          "delete_method": "resourceLogicAppActionCustomDelete"
        },
        "azurerm_logic_app_action_http": {
          "create_method": "resourceLogicAppActionHTTPCreateUpdate",
          "read_method": "resourceLogicAppActionHTTPRead",
          "update_method": "resourceLogicAppActionHTTPCreateUpdate",
          "delete_method": "resourceLogicAppActionHTTPDelete"
        },
        "azurerm_logic_app_integration_account": {
          "create_method": "resourceLogicAppIntegrationAccountCreateUpdate",
          "read_method": "resourceLogicAppIntegrationAccountRead",
          "update_method": "resourceLogicAppIntegrationAccountCreateUpdate",
          "delete_method": "resourceLogicAppIntegrationAccountDelete"
        },
        "azurerm_logic_app_integration_account_agreement": {
          "create_method": "resourceLogicAppIntegrationAccountAgreementCreateUpdate",
          "read_method": "resourceLogicAppIntegrationAccountAgreementRead",
          "update_method": "resourceLogicAppIntegrationAccountAgreementCreateUpdate",
          "delete_method": "resourceLogicAppIntegrationAccountAgreementDelete"
        },
        "azurerm_logic_app_integration_account_assembly": {
          "create_method": "resourceLogicAppIntegrationAccountAssemblyCreateUpdate",
          "read_method": "resourceLogicAppIntegrationAccountAssemblyRead",
          "update_method": "resourceLogicAppIntegrationAccountAssemblyCreateUpdate",
          "delete_method": "resourceLogicAppIntegrationAccountAssemblyDelete"
        },
        "azurerm_logic_app_integration_account_batch_configuration": {
          "create_method": "resourceLogicAppIntegrationAccountBatchConfigurationCreateUpdate",
          "read_method": "resourceLogicAppIntegrationAccountBatchConfigurationRead",
          "update_method": "resourceLogicAppIntegrationAccountBatchConfigurationCreateUpdate",
          "delete_method": "resourceLogicAppIntegrationAccountBatchConfigurationDelete"
        },
        "azurerm_logic_app_integration_account_certificate": {
          "create_method": "resourceLogicAppIntegrationAccountCertificateCreateUpdate",
          "read_method": "resourceLogicAppIntegrationAccountCertificateRead",
          "update_method": "resourceLogicAppIntegrationAccountCertificateCreateUpdate",
          "delete_method": "resourceLogicAppIntegrationAccountCertificateDelete"
        },
        "azurerm_logic_app_integration_account_map": {
          "create_method": "resourceLogicAppIntegrationAccountMapCreateUpdate",
          "read_method": "resourceLogicAppIntegrationAccountMapRead",
          "update_method": "resourceLogicAppIntegrationAccountMapCreateUpdate",
          "delete_method": "resourceLogicAppIntegrationAccountMapDelete"
        },
        "azurerm_logic_app_integration_account_partner": {
          "create_method": "resourceLogicAppIntegrationAccountPartnerCreateUpdate",
          "read_method": "resourceLogicAppIntegrationAccountPartnerRead",
          "update_method": "resourceLogicAppIntegrationAccountPartnerCreateUpdate",
          "delete_method": "resourceLogicAppIntegrationAccountPartnerDelete"
        },
        "azurerm_logic_app_integration_account_schema": {
          "create_method": "resourceLogicAppIntegrationAccountSchemaCreateUpdate",
          "read_method": "resourceLogicAppIntegrationAccountSchemaRead",
          "update_method": "resourceLogicAppIntegrationAccountSchemaCreateUpdate",
          "delete_method": "resourceLogicAppIntegrationAccountSchemaDelete"
        },
        "azurerm_logic_app_integration_account_session": {
          "create_method": "resourceLogicAppIntegrationAccountSessionCreateUpdate",
          "read_method": "resourceLogicAppIntegrationAccountSessionRead",
          "update_method": "resourceLogicAppIntegrationAccountSessionCreateUpdate",
          "delete_method": "resourceLogicAppIntegrationAccountSessionDelete"
        },
        "azurerm_logic_app_standard": {
          "create_method": "resourceLogicAppStandardCreate",
          "read_method": "resourceLogicAppStandardRead",
          "update_method": "resourceLogicAppStandardUpdate",
          "delete_method": "resourceLogicAppStandardDelete"
        },
        "azurerm_logic_app_trigger_custom": {
          "create_method": "resourceLogicAppTriggerCustomCreateUpdate",
          "read_method": "resourceLogicAppTriggerCustomRead",
          "update_method": "resourceLogicAppTriggerCustomCreateUpdate",
          "delete_method": "resourceLogicAppTriggerCustomDelete"
        },
        "azurerm_logic_app_trigger_http_request": {
          "create_method": "resourceLogicAppTriggerHttpRequestCreateUpdate",
          "read_method": "resourceLogicAppTriggerHttpRequestRead",
          "update_method": "resourceLogicAppTriggerHttpRequestCreateUpdate",
          "delete_method": "resourceLogicAppTriggerHttpRequestDelete"
        },
        "azurerm_logic_app_trigger_recurrence": {
          "create_method": "resourceLogicAppTriggerRecurrenceCreateUpdate",
          "read_method": "resourceLogicAppTriggerRecurrenceRead",
          "update_method": "resourceLogicAppTriggerRecurrenceCreateUpdate",
          "delete_method": "resourceLogicAppTriggerRecurrenceDelete"
        },
        "azurerm_logic_app_workflow": {
          "create_method": "resourceLogicAppWorkflowCreate",
          "read_method": "resourceLogicAppWorkflowRead",
          "update_method": "resourceLogicAppWorkflowUpdate",
          "delete_method": "resourceLogicAppWorkflowDelete"
        }
      },
      "data_source_methods": {
        "azurerm_logic_app_integration_account": {
          "read_method": "dataSourceLogicAppIntegrationAccountRead"
        },
        "azurerm_logic_app_standard": {
          "read_method": "dataSourceLogicAppStandardRead"
        },
        "azurerm_logic_app_workflow": {
          "read_method": "dataSourceLogicAppWorkflowRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "machinelearning",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/machinelearning",
      "supported_resources": {
        "azurerm_machine_learning_compute_cluster": "resourceComputeCluster",
        "azurerm_machine_learning_compute_instance": "resourceComputeInstance",
        "azurerm_machine_learning_inference_cluster": "resourceAksInferenceCluster",
        "azurerm_machine_learning_synapse_spark": "resourceSynapseSpark",
        "azurerm_machine_learning_workspace": "resourceMachineLearningWorkspace"
      },
      "supported_data_sources": {
        "azurerm_machine_learning_workspace": "dataSourceMachineLearningWorkspace"
      },
      "resources": [
        "AIFoundry",
        "AIFoundryProject",
        "MachineLearningDataStoreBlobStorage",
        "MachineLearningDataStoreDataLakeGen2",
        "MachineLearningDataStoreFileShare",
        "WorkspaceNetworkOutboundRuleFqdn",
        "WorkspaceNetworkOutboundRulePrivateEndpoint",
        "WorkspaceNetworkOutboundRuleServiceTag"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_machine_learning_compute_cluster": {
          "create_method": "resourceComputeClusterCreate",
          "read_method": "resourceComputeClusterRead",
          "update_method": "resourceComputeClusterUpdate",
          "delete_method": "resourceComputeClusterDelete"
        },
        "azurerm_machine_learning_compute_instance": {},
        "azurerm_machine_learning_inference_cluster": {
          "create_method": "resourceAksInferenceClusterCreate",
          "read_method": "resourceAksInferenceClusterRead",
          "delete_method": "resourceAksInferenceClusterDelete"
        },
        "azurerm_machine_learning_synapse_spark": {
          "create_method": "resourceSynapseSparkCreate",
          "read_method": "resourceSynapseSparkRead",
          "delete_method": "resourceSynapseSparkDelete"
        },
        "azurerm_machine_learning_workspace": {
          "create_method": "resourceMachineLearningWorkspaceCreate",
          "read_method": "resourceMachineLearningWorkspaceRead",
          "update_method": "resourceMachineLearningWorkspaceUpdate",
          "delete_method": "resourceMachineLearningWorkspaceDelete"
        }
      },
      "data_source_methods": {
        "azurerm_machine_learning_workspace": {
          "read_method": "dataSourceMachineLearningWorkspaceRead"
        }
      },
      "resource_terraform_types": {
        "AIFoundry": "azurerm_ai_foundry",
        "AIFoundryProject": "azurerm_ai_foundry_project",
        "MachineLearningDataStoreBlobStorage": "azurerm_machine_learning_datastore_blobstorage",
        "MachineLearningDataStoreDataLakeGen2": "azurerm_machine_learning_datastore_datalake_gen2",
        "MachineLearningDataStoreFileShare": "azurerm_machine_learning_datastore_fileshare",
        "WorkspaceNetworkOutboundRuleFqdn": "azurerm_machine_learning_workspace_network_outbound_rule_fqdn",
        "WorkspaceNetworkOutboundRulePrivateEndpoint": "azurerm_machine_learning_workspace_network_outbound_rule_private_endpoint",
        "WorkspaceNetworkOutboundRuleServiceTag": "azurerm_machine_learning_workspace_network_outbound_rule_service_tag"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "maintenance",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/maintenance",
      "supported_resources": {
        "azurerm_maintenance_assignment_dedicated_host": "resourceArmMaintenanceAssignmentDedicatedHost",
        "azurerm_maintenance_assignment_virtual_machine": "resourceArmMaintenanceAssignmentVirtualMachine",
        "azurerm_maintenance_assignment_virtual_machine_scale_set": "resourceArmMaintenanceAssignmentVirtualMachineScaleSet",
        "azurerm_maintenance_configuration": "resourceMaintenanceConfiguration"
      },
      "supported_data_sources": {
        "azurerm_maintenance_configuration": "dataSourceMaintenanceConfiguration",
        "azurerm_public_maintenance_configurations": "dataSourcePublicMaintenanceConfigurations"
      },
      "resources": [
        "MaintenanceDynamicScopeResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_maintenance_assignment_dedicated_host": {
          "create_method": "resourceArmMaintenanceAssignmentDedicatedHostCreate",
          "read_method": "resourceArmMaintenanceAssignmentDedicatedHostRead",
          "delete_method": "resourceArmMaintenanceAssignmentDedicatedHostDelete"
        },
        "azurerm_maintenance_assignment_virtual_machine": {
          "create_method": "resourceArmMaintenanceAssignmentVirtualMachineCreate",
          "read_method": "resourceArmMaintenanceAssignmentVirtualMachineRead",
          "delete_method": "resourceArmMaintenanceAssignmentVirtualMachineDelete"
        },
        "azurerm_maintenance_assignment_virtual_machine_scale_set": {
          "create_method": "resourceArmMaintenanceAssignmentVirtualMachineScaleSetCreate",
          "read_method": "resourceArmMaintenanceAssignmentVirtualMachineScaleSetRead",
          "delete_method": "resourceArmMaintenanceAssignmentVirtualMachineScaleSetDelete"
        },
        "azurerm_maintenance_configuration": {
          "create_method": "resourceMaintenanceConfigurationCreate",
          "read_method": "resourceMaintenanceConfigurationRead",
          "update_method": "resourceMaintenanceConfigurationUpdate",
          "delete_method": "resourceMaintenanceConfigurationDelete"
        }
      },
      "data_source_methods": {
        "azurerm_maintenance_configuration": {
          "read_method": "dataSourceArmMaintenanceConfigurationRead"
        },
        "azurerm_public_maintenance_configurations": {
          "read_method": "dataSourcePublicMaintenanceConfigurationsRead"
        }
      },
      "resource_terraform_types": {
        "MaintenanceDynamicScopeResource": "azurerm_maintenance_assignment_dynamic_scope"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "managedapplications",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/managedapplications",
      "supported_resources": {
        "azurerm_managed_application": "resourceManagedApplication",
        "azurerm_managed_application_definition": "resourceManagedApplicationDefinition"
      },
      "supported_data_sources": {
        "azurerm_managed_application_definition": "dataSourceManagedApplicationDefinition"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_managed_application": {
          "create_method": "resourceManagedApplicationCreate",
          "read_method": "resourceManagedApplicationRead",
          "update_method": "resourceManagedApplicationUpdate",
          "delete_method": "resourceManagedApplicationDelete"
        },
        "azurerm_managed_application_definition": {
          "create_method": "resourceManagedApplicationDefinitionCreate",
          "read_method": "resourceManagedApplicationDefinitionRead",
          "update_method": "resourceManagedApplicationDefinitionUpdate",
          "delete_method": "resourceManagedApplicationDefinitionDelete"
        }
      },
      "data_source_methods": {
        "azurerm_managed_application_definition": {
          "read_method": "dataSourceManagedApplicationDefinitionRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "managedhsm",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/managedhsm",
      "supported_resources": {
        "azurerm_key_vault_managed_hardware_security_module": "resourceKeyVaultManagedHardwareSecurityModule"
      },
      "supported_data_sources": {
        "azurerm_key_vault_managed_hardware_security_module": "dataSourceKeyVaultManagedHardwareSecurityModule"
      },
      "resources": [
        "KeyVaultMHSMKeyResource",
        "KeyVaultMHSMRoleDefinitionResource",
        "KeyVaultManagedHSMRoleAssignmentResource",
        "KeyVaultMHSMKeyRotationPolicyResource"
      ],
      "data_sources": [
        "KeyvaultMHSMRoleDefinitionDataSource",
        "KeyvaultMHSMKeyDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_key_vault_managed_hardware_security_module": {
          "create_method": "resourceArmKeyVaultManagedHardwareSecurityModuleCreate",
          "read_method": "resourceArmKeyVaultManagedHardwareSecurityModuleRead",
          "update_method": "resourceArmKeyVaultManagedHardwareSecurityModuleUpdate",
          "delete_method": "resourceArmKeyVaultManagedHardwareSecurityModuleDelete"
        }
      },
      "data_source_methods": {
        "azurerm_key_vault_managed_hardware_security_module": {
          "read_method": "dataSourceKeyVaultManagedHardwareSecurityModuleRead"
        }
      },
      "resource_terraform_types": {
        "KeyVaultMHSMKeyResource": "azurerm_key_vault_managed_hardware_security_module_key",
        "KeyVaultMHSMKeyRotationPolicyResource": "azurerm_key_vault_managed_hardware_security_module_key_rotation_policy",
        "KeyVaultMHSMRoleDefinitionResource": "azurerm_key_vault_managed_hardware_security_module_role_definition",
        "KeyVaultManagedHSMRoleAssignmentResource": "azurerm_key_vault_managed_hardware_security_module_role_assignment"
      },
      "data_source_terraform_types": {
        "KeyvaultMHSMKeyDataSource": "azurerm_key_vault_managed_hardware_security_module_key",
        "KeyvaultMHSMRoleDefinitionDataSource": "azurerm_key_vault_managed_hardware_security_module_role_definition"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "managedidentity",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/managedidentity",
      "supported_resources": {},
      "supported_data_sources": {
        "azurerm_user_assigned_identity": "dataSourceArmUserAssignedIdentity"
      },
      "resources": [
        "FederatedIdentityCredentialResource",
        "UserAssignedIdentityResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {
        "azurerm_user_assigned_identity": {
          "read_method": "dataSourceArmUserAssignedIdentityRead"
        }
      },
      "resource_terraform_types": {
        "FederatedIdentityCredentialResource": "azurerm_federated_identity_credential",
        "UserAssignedIdentityResource": "azurerm_user_assigned_identity"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "managementgroup",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/managementgroup",
      "supported_resources": {
        "azurerm_management_group": "resourceManagementGroup",
        "azurerm_management_group_subscription_association": "resourceManagementGroupSubscriptionAssociation"
      },
      "supported_data_sources": {
        "azurerm_management_group": "dataSourceManagementGroup"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_management_group": {
          "create_method": "resourceManagementGroupCreateUpdate",
          "read_method": "resourceManagementGroupRead",
          "update_method": "resourceManagementGroupCreateUpdate",
          "delete_method": "resourceManagementGroupDelete"
        },
        "azurerm_management_group_subscription_association": {
          "create_method": "resourceManagementGroupSubscriptionAssociationCreate",
          "read_method": "resourceManagementGroupSubscriptionAssociationRead",
          "delete_method": "resourceManagementGroupSubscriptionAssociationDelete"
        }
      },
      "data_source_methods": {
        "azurerm_management_group": {
          "read_method": "dataSourceManagementGroupRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "maps",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/maps",
      "supported_resources": {
        "azurerm_maps_account": "resourceMapsAccount"
      },
      "supported_data_sources": {
        "azurerm_maps_account": "dataSourceMapsAccount"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_maps_account": {
          "create_method": "resourceMapsAccountCreate",
          "read_method": "resourceMapsAccountRead",
          "update_method": "resourceMapsAccountUpdate",
          "delete_method": "resourceMapsAccountDelete"
        }
      },
      "data_source_methods": {
        "azurerm_maps_account": {
          "read_method": "dataSourceMapsAccountRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "mobilenetwork",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/mobilenetwork",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "AttachedDataNetworkResource",
        "DataNetworkResource",
        "MobileNetworkResource",
        "PacketCoreControlPlaneResource",
        "PacketCoreDataPlaneResource",
        "SiteResource",
        "SliceResource",
        "ServiceResource",
        "SimGroupResource",
        "SimPolicyResource",
        "SimResource"
      ],
      "data_sources": [
        "DataNetworkDataSource",
        "MobileNetworkDataSource",
        "ServiceDataSource",
        "SiteDataSource",
        "SimGroupDataSource",
        "SliceDataSource",
        "SimPolicyDataSource",
        "PacketCoreControlPlaneDataSource",
        "PacketCoreDataPlaneDataSource",
        "AttachedDataNetworkDataSource",
        "SimDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "AttachedDataNetworkResource": "azurerm_mobile_network_attached_data_network",
        "DataNetworkResource": "azurerm_mobile_network_data_network",
        "MobileNetworkResource": "azurerm_mobile_network",
        "PacketCoreControlPlaneResource": "azurerm_mobile_network_packet_core_control_plane",
        "PacketCoreDataPlaneResource": "azurerm_mobile_network_packet_core_data_plane",
        "ServiceResource": "azurerm_mobile_network_service",
        "SimGroupResource": "azurerm_mobile_network_sim_group",
        "SimPolicyResource": "azurerm_mobile_network_sim_policy",
        "SimResource": "azurerm_mobile_network_sim",
        "SiteResource": "azurerm_mobile_network_site",
        "SliceResource": "azurerm_mobile_network_slice"
      },
      "data_source_terraform_types": {
        "AttachedDataNetworkDataSource": "azurerm_mobile_network_attached_data_network",
        "DataNetworkDataSource": "azurerm_mobile_network_data_network",
        "MobileNetworkDataSource": "azurerm_mobile_network",
        "PacketCoreControlPlaneDataSource": "azurerm_mobile_network_packet_core_control_plane",
        "PacketCoreDataPlaneDataSource": "azurerm_mobile_network_packet_core_data_plane",
        "ServiceDataSource": "azurerm_mobile_network_service",
        "SimDataSource": "azurerm_mobile_network_sim",
        "SimGroupDataSource": "azurerm_mobile_network_sim_group",
        "SimPolicyDataSource": "azurerm_mobile_network_sim_policy",
        "SiteDataSource": "azurerm_mobile_network_site",
        "SliceDataSource": "azurerm_mobile_network_slice"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "mongocluster",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/mongocluster",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "MongoClusterResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "MongoClusterResource": "azurerm_mongo_cluster"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "monitor",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor",
      "supported_resources": {
        "azurerm_monitor_aad_diagnostic_setting": "resourceMonitorAADDiagnosticSetting",
        "azurerm_monitor_action_group": "resourceMonitorActionGroup",
        "azurerm_monitor_activity_log_alert": "resourceMonitorActivityLogAlert",
        "azurerm_monitor_autoscale_setting": "resourceMonitorAutoScaleSetting",
        "azurerm_monitor_diagnostic_setting": "resourceMonitorDiagnosticSetting",
        "azurerm_monitor_metric_alert": "resourceMonitorMetricAlert",
        "azurerm_monitor_private_link_scope": "resourceMonitorPrivateLinkScope",
        "azurerm_monitor_private_link_scoped_service": "resourceMonitorPrivateLinkScopedService",
        "azurerm_monitor_scheduled_query_rules_alert": "resourceMonitorScheduledQueryRulesAlert",
        "azurerm_monitor_scheduled_query_rules_log": "resourceMonitorScheduledQueryRulesLog",
        "azurerm_monitor_smart_detector_alert_rule": "resourceMonitorSmartDetectorAlertRule"
      },
      "supported_data_sources": {
        "azurerm_monitor_action_group": "dataSourceMonitorActionGroup",
        "azurerm_monitor_diagnostic_categories": "dataSourceMonitorDiagnosticCategories",
        "azurerm_monitor_scheduled_query_rules_alert": "dataSourceMonitorScheduledQueryRulesAlert",
        "azurerm_monitor_scheduled_query_rules_log": "dataSourceMonitorScheduledQueryRulesLog"
      },
      "resources": [
        "AlertProcessingRuleActionGroupResource",
        "AlertProcessingRuleSuppressionResource",
        "DataCollectionEndpointResource",
        "DataCollectionRuleAssociationResource",
        "DataCollectionRuleResource",
        "ScheduledQueryRulesAlertV2Resource",
        "AlertPrometheusRuleGroupResource",
        "WorkspaceResource"
      ],
      "data_sources": [
        "DataCollectionEndpointDataSource",
        "DataCollectionRuleDataSource",
        "WorkspaceDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_monitor_aad_diagnostic_setting": {
          "create_method": "resourceMonitorAADDiagnosticSettingCreate",
          "read_method": "resourceMonitorAADDiagnosticSettingRead",
          "update_method": "resourceMonitorAADDiagnosticSettingUpdate",
          "delete_method": "resourceMonitorAADDiagnosticSettingDelete"
        },
        "azurerm_monitor_action_group": {
          "create_method": "resourceMonitorActionGroupCreateUpdate",
          "read_method": "resourceMonitorActionGroupRead",
          "update_method": "resourceMonitorActionGroupCreateUpdate",
          "delete_method": "resourceMonitorActionGroupDelete"
        },
        "azurerm_monitor_activity_log_alert": {
          "create_method": "resourceMonitorActivityLogAlertCreateUpdate",
          "read_method": "resourceMonitorActivityLogAlertRead",
          "update_method": "resourceMonitorActivityLogAlertCreateUpdate",
          "delete_method": "resourceMonitorActivityLogAlertDelete"
        },
        "azurerm_monitor_autoscale_setting": {
          "create_method": "resourceMonitorAutoScaleSettingCreateUpdate",
          "read_method": "resourceMonitorAutoScaleSettingRead",
          "update_method": "resourceMonitorAutoScaleSettingCreateUpdate",
          "delete_method": "resourceMonitorAutoScaleSettingDelete"
        },
        "azurerm_monitor_diagnostic_setting": {
          "create_method": "resourceMonitorDiagnosticSettingCreate",
          "read_method": "resourceMonitorDiagnosticSettingRead",
          "update_method": "resourceMonitorDiagnosticSettingUpdate",
          "delete_method": "resourceMonitorDiagnosticSettingDelete"
        },
        "azurerm_monitor_metric_alert": {
          "create_method": "resourceMonitorMetricAlertCreateUpdate",
          "read_method": "resourceMonitorMetricAlertRead",
          "update_method": "resourceMonitorMetricAlertCreateUpdate",
          "delete_method": "resourceMonitorMetricAlertDelete"
        },
        "azurerm_monitor_private_link_scope": {
          "create_method": "resourceMonitorPrivateLinkScopeCreateUpdate",
          "read_method": "resourceMonitorPrivateLinkScopeRead",
          "update_method": "resourceMonitorPrivateLinkScopeCreateUpdate",
          "delete_method": "resourceMonitorPrivateLinkScopeDelete"
        },
        "azurerm_monitor_private_link_scoped_service": {
          "create_method": "resourceMonitorPrivateLinkScopedServiceCreate",
          "read_method": "resourceMonitorPrivateLinkScopedServiceRead",
          "delete_method": "resourceMonitorPrivateLinkScopedServiceDelete"
        },
        "azurerm_monitor_scheduled_query_rules_alert": {
          "create_method": "resourceMonitorScheduledQueryRulesAlertCreateUpdate",
          "read_method": "resourceMonitorScheduledQueryRulesAlertRead",
          "update_method": "resourceMonitorScheduledQueryRulesAlertCreateUpdate",
          "delete_method": "resourceMonitorScheduledQueryRulesAlertDelete"
        },
        "azurerm_monitor_scheduled_query_rules_log": {
          "create_method": "resourceMonitorScheduledQueryRulesLogCreateUpdate",
          "read_method": "resourceMonitorScheduledQueryRulesLogRead",
          "update_method": "resourceMonitorScheduledQueryRulesLogCreateUpdate",
          "delete_method": "resourceMonitorScheduledQueryRulesLogDelete"
        },
        "azurerm_monitor_smart_detector_alert_rule": {
          "create_method": "resourceMonitorSmartDetectorAlertRuleCreateUpdate",
          "read_method": "resourceMonitorSmartDetectorAlertRuleRead",
          "update_method": "resourceMonitorSmartDetectorAlertRuleCreateUpdate",
          "delete_method": "resourceMonitorSmartDetectorAlertRuleDelete"
        }
      },
      "data_source_methods": {
        "azurerm_monitor_action_group": {
          "read_method": "dataSourceMonitorActionGroupRead"
        },
        "azurerm_monitor_diagnostic_categories": {
          "read_method": "dataSourceMonitorDiagnosticCategoriesRead"
        },
        "azurerm_monitor_scheduled_query_rules_alert": {
          "read_method": "dataSourceMonitorScheduledQueryRulesAlertRead"
        },
        "azurerm_monitor_scheduled_query_rules_log": {
          "read_method": "dataSourceMonitorScheduledQueryRulesLogRead"
        }
      },
      "resource_terraform_types": {
        "AlertProcessingRuleActionGroupResource": "azurerm_monitor_alert_processing_rule_action_group",
        "AlertProcessingRuleSuppressionResource": "azurerm_monitor_alert_processing_rule_suppression",
        "AlertPrometheusRuleGroupResource": "azurerm_monitor_alert_prometheus_rule_group",
        "DataCollectionEndpointResource": "azurerm_monitor_data_collection_endpoint",
        "DataCollectionRuleAssociationResource": "azurerm_monitor_data_collection_rule_association",
        "DataCollectionRuleResource": "azurerm_monitor_data_collection_rule",
        "ScheduledQueryRulesAlertV2Resource": "azurerm_monitor_scheduled_query_rules_alert_v2",
        "WorkspaceResource": "azurerm_monitor_workspace"
      },
      "data_source_terraform_types": {
        "DataCollectionEndpointDataSource": "azurerm_monitor_data_collection_endpoint",
        "DataCollectionRuleDataSource": "azurerm_monitor_data_collection_rule",
        "WorkspaceDataSource": "azurerm_monitor_workspace"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "mssql",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql",
      "supported_resources": {
        "azurerm_mssql_database": "resourceMsSqlDatabase",
        "azurerm_mssql_database_extended_auditing_policy": "resourceMsSqlDatabaseExtendedAuditingPolicy",
        "azurerm_mssql_database_vulnerability_assessment_rule_baseline": "resourceMsSqlDatabaseVulnerabilityAssessmentRuleBaseline",
        "azurerm_mssql_elasticpool": "resourceMsSqlElasticPool",
        "azurerm_mssql_firewall_rule": "resourceMsSqlFirewallRule",
        "azurerm_mssql_job_agent": "resourceMsSqlJobAgent",
        "azurerm_mssql_job_credential": "resourceMsSqlJobCredential",
        "azurerm_mssql_outbound_firewall_rule": "resourceMsSqlOutboundFirewallRule",
        "azurerm_mssql_server": "resourceMsSqlServer",
        "azurerm_mssql_server_extended_auditing_policy": "resourceMsSqlServerExtendedAuditingPolicy",
        "azurerm_mssql_server_microsoft_support_auditing_policy": "resourceMsSqlServerMicrosoftSupportAuditingPolicy",
        "azurerm_mssql_server_security_alert_policy": "resourceMsSqlServerSecurityAlertPolicy",
        "azurerm_mssql_server_transparent_data_encryption": "resourceMsSqlTransparentDataEncryption",
        "azurerm_mssql_server_vulnerability_assessment": "resourceMsSqlServerVulnerabilityAssessment",
        "azurerm_mssql_virtual_machine": "resourceMsSqlVirtualMachine",
        "azurerm_mssql_virtual_network_rule": "resourceMsSqlVirtualNetworkRule"
      },
      "supported_data_sources": {
        "azurerm_mssql_database": "dataSourceMsSqlDatabase",
        "azurerm_mssql_elasticpool": "dataSourceMsSqlElasticpool",
        "azurerm_mssql_server": "dataSourceMsSqlServer"
      },
      "resources": [
        "MsSqlFailoverGroupResource",
        "MsSqlJobResource",
        "MsSqlJobScheduleResource",
        "MsSqlJobStepResource",
        "MsSqlJobTargetGroupResource",
        "MsSqlVirtualMachineAvailabilityGroupListenerResource",
        "MsSqlVirtualMachineGroupResource",
        "ServerDNSAliasResource"
      ],
      "data_sources": [
        "MsSqlFailoverGroupDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_mssql_database": {
          "create_method": "resourceMsSqlDatabaseCreate",
          "read_method": "resourceMsSqlDatabaseRead",
          "update_method": "resourceMsSqlDatabaseUpdate",
          "delete_method": "resourceMsSqlDatabaseDelete"
        },
        "azurerm_mssql_database_extended_auditing_policy": {
          "create_method": "resourceMsSqlDatabaseExtendedAuditingPolicyCreateUpdate",
          "read_method": "resourceMsSqlDatabaseExtendedAuditingPolicyRead",
          "update_method": "resourceMsSqlDatabaseExtendedAuditingPolicyCreateUpdate",
          "delete_method": "resourceMsSqlDatabaseExtendedAuditingPolicyDelete"
        },
        "azurerm_mssql_database_vulnerability_assessment_rule_baseline": {
          "create_method": "resourceMsSqlDatabaseVulnerabilityAssessmentRuleBaselineCreateUpdate",
          "read_method": "resourceMsSqlDatabaseVulnerabilityAssessmentRuleBaselineRead",
          "update_method": "resourceMsSqlDatabaseVulnerabilityAssessmentRuleBaselineCreateUpdate",
          "delete_method": "resourceMsSqlDatabaseVulnerabilityAssessmentRuleBaselineDelete"
        },
        "azurerm_mssql_elasticpool": {
          "create_method": "resourceMsSqlElasticPoolCreateUpdate",
          "read_method": "resourceMsSqlElasticPoolRead",
          "update_method": "resourceMsSqlElasticPoolCreateUpdate",
          "delete_method": "resourceMsSqlElasticPoolDelete"
        },
        "azurerm_mssql_firewall_rule": {
          "create_method": "resourceMsSqlFirewallRuleCreateUpdate",
          "read_method": "resourceMsSqlFirewallRuleRead",
          "update_method": "resourceMsSqlFirewallRuleCreateUpdate",
          "delete_method": "resourceMsSqlFirewallRuleDelete"
        },
        "azurerm_mssql_job_agent": {
          "create_method": "resourceMsSqlJobAgentCreate",
          "read_method": "resourceMsSqlJobAgentRead",
          "update_method": "resourceMsSqlJobAgentUpdate",
          "delete_method": "resourceMsSqlJobAgentDelete"
        },
        "azurerm_mssql_job_credential": {
          "create_method": "resourceMsSqlJobCredentialCreate",
          "read_method": "resourceMsSqlJobCredentialRead",
          "update_method": "resourceMsSqlJobCredentialUpdate",
          "delete_method": "resourceMsSqlJobCredentialDelete"
        },
        "azurerm_mssql_outbound_firewall_rule": {
          "create_method": "resourceMsSqlOutboundFirewallRuleCreate",
          "read_method": "resourceMsSqlOutboundFirewallRuleRead",
          "delete_method": "resourceMsSqlOutboundFirewallRuleDelete"
        },
        "azurerm_mssql_server": {
          "create_method": "resourceMsSqlServerCreate",
          "read_method": "resourceMsSqlServerRead",
          "update_method": "resourceMsSqlServerUpdate",
          "delete_method": "resourceMsSqlServerDelete"
        },
        "azurerm_mssql_server_extended_auditing_policy": {
          "create_method": "resourceMsSqlServerExtendedAuditingPolicyCreateUpdate",
          "read_method": "resourceMsSqlServerExtendedAuditingPolicyRead",
          "update_method": "resourceMsSqlServerExtendedAuditingPolicyCreateUpdate",
          "delete_method": "resourceMsSqlServerExtendedAuditingPolicyDelete"
        },
        "azurerm_mssql_server_microsoft_support_auditing_policy": {
          "create_method": "resourceMsSqlServerMicrosoftSupportAuditingPolicyCreateUpdate",
          "read_method": "resourceMsSqlServerMicrosoftSupportAuditingPolicyRead",
          "update_method": "resourceMsSqlServerMicrosoftSupportAuditingPolicyCreateUpdate",
          "delete_method": "resourceMsSqlServerMicrosoftSupportAuditingPolicyDelete"
        },
        "azurerm_mssql_server_security_alert_policy": {
          "create_method": "resourceMsSqlServerSecurityAlertPolicyCreate",
          "read_method": "resourceMsSqlServerSecurityAlertPolicyRead",
          "update_method": "resourceMsSqlServerSecurityAlertPolicyUpdate",
          "delete_method": "resourceMsSqlServerSecurityAlertPolicyDelete"
        },
        "azurerm_mssql_server_transparent_data_encryption": {
          "create_method": "resourceMsSqlTransparentDataEncryptionCreateUpdate",
          "read_method": "resourceMsSqlTransparentDataEncryptionRead",
          "update_method": "resourceMsSqlTransparentDataEncryptionCreateUpdate",
          "delete_method": "resourceMsSqlTransparentDataEncryptionDelete"
        },
        "azurerm_mssql_server_vulnerability_assessment": {
          "create_method": "resourceMsSqlServerVulnerabilityAssessmentCreate",
          "read_method": "resourceMsSqlServerVulnerabilityAssessmentRead",
          "update_method": "resourceMsSqlServerVulnerabilityAssessmentUpdate",
          "delete_method": "resourceMsSqlServerVulnerabilityAssessmentDelete"
        },
        "azurerm_mssql_virtual_machine": {
          "create_method": "resourceMsSqlVirtualMachineCreateUpdate",
          "read_method": "resourceMsSqlVirtualMachineRead",
          "update_method": "resourceMsSqlVirtualMachineCreateUpdate",
          "delete_method": "resourceMsSqlVirtualMachineDelete"
        },
        "azurerm_mssql_virtual_network_rule": {
          "create_method": "resourceMsSqlVirtualNetworkRuleCreateUpdate",
          "read_method": "resourceMsSqlVirtualNetworkRuleRead",
          "update_method": "resourceMsSqlVirtualNetworkRuleCreateUpdate",
          "delete_method": "resourceMsSqlVirtualNetworkRuleDelete"
        }
      },
      "data_source_methods": {
        "azurerm_mssql_database": {
          "read_method": "dataSourceMsSqlDatabaseRead"
        },
        "azurerm_mssql_elasticpool": {
          "read_method": "dataSourceMsSqlElasticpoolRead"
        },
        "azurerm_mssql_server": {
          "read_method": "dataSourceMsSqlServerRead"
        }
      },
      "resource_terraform_types": {
        "MsSqlFailoverGroupResource": "azurerm_mssql_failover_group",
        "MsSqlJobResource": "azurerm_mssql_job",
        "MsSqlJobScheduleResource": "azurerm_mssql_job_schedule",
        "MsSqlJobStepResource": "azurerm_mssql_job_step",
        "MsSqlJobTargetGroupResource": "azurerm_mssql_job_target_group",
        "MsSqlVirtualMachineAvailabilityGroupListenerResource": "azurerm_mssql_virtual_machine_availability_group_listener",
        "MsSqlVirtualMachineGroupResource": "azurerm_mssql_virtual_machine_group",
        "ServerDNSAliasResource": "azurerm_mssql_server_dns_alias"
      },
      "data_source_terraform_types": {
        "MsSqlFailoverGroupDataSource": "azurerm_mssql_failover_group"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "mysql",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/mysql",
      "supported_resources": {
        "azurerm_mysql_flexible_database": "resourceMySqlFlexibleDatabase",
        "azurerm_mysql_flexible_server": "resourceMysqlFlexibleServer",
        "azurerm_mysql_flexible_server_configuration": "resourceMySQLFlexibleServerConfiguration",
        "azurerm_mysql_flexible_server_firewall_rule": "resourceMySqlFlexibleServerFirewallRule"
      },
      "supported_data_sources": {
        "azurerm_mysql_flexible_server": "dataSourceMysqlFlexibleServer"
      },
      "resources": [
        "MySQLFlexibleServerAdministratorResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_mysql_flexible_database": {
          "create_method": "resourceMySqlFlexibleDatabaseCreate",
          "read_method": "resourceMySqlFlexibleDatabaseRead",
          "delete_method": "resourceMySqlFlexibleDatabaseDelete"
        },
        "azurerm_mysql_flexible_server": {
          "create_method": "resourceMysqlFlexibleServerCreate",
          "read_method": "resourceMysqlFlexibleServerRead",
          "update_method": "resourceMysqlFlexibleServerUpdate",
          "delete_method": "resourceMysqlFlexibleServerDelete"
        },
        "azurerm_mysql_flexible_server_configuration": {
          "create_method": "resourceMySQLFlexibleServerConfigurationCreate",
          "read_method": "resourceMySQLFlexibleServerConfigurationRead",
          "update_method": "resourceMySQLFlexibleServerConfigurationUpdate",
          "delete_method": "resourceMySQLFlexibleServerConfigurationDelete"
        },
        "azurerm_mysql_flexible_server_firewall_rule": {
          "create_method": "resourceMySqlFlexibleServerFirewallRuleCreateUpdate",
          "read_method": "resourceMySqlFlexibleServerFirewallRuleRead",
          "update_method": "resourceMySqlFlexibleServerFirewallRuleCreateUpdate",
          "delete_method": "resourceMySqlFlexibleServerFirewallRuleDelete"
        }
      },
      "data_source_methods": {
        "azurerm_mysql_flexible_server": {
          "read_method": "dataSourceMysqlFlexibleServerRead"
        }
      },
      "resource_terraform_types": {
        "MySQLFlexibleServerAdministratorResource": "azurerm_mysql_flexible_server_active_directory_administrator"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "mssqlmanagedinstance",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/mssqlmanagedinstance",
      "supported_resources": {
        "azurerm_mssql_managed_instance_security_alert_policy": "resourceMsSqlManagedInstanceSecurityAlertPolicy",
        "azurerm_mssql_managed_instance_transparent_data_encryption": "resourceMsSqlManagedInstanceTransparentDataEncryption",
        "azurerm_mssql_managed_instance_vulnerability_assessment": "resourceMsSqlManagedInstanceVulnerabilityAssessment"
      },
      "supported_data_sources": {},
      "resources": [
        "MsSqlManagedDatabaseResource",
        "MsSqlManagedInstanceActiveDirectoryAdministratorResource",
        "MsSqlManagedInstanceFailoverGroupResource",
        "MsSqlManagedInstanceResource",
        "MsSqlManagedInstanceStartStopScheduleResource"
      ],
      "data_sources": [
        "MsSqlManagedDatabaseDataSource",
        "MsSqlManagedInstanceDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_mssql_managed_instance_security_alert_policy": {
          "create_method": "resourceMsSqlManagedInstanceSecurityAlertPolicyCreate",
          "read_method": "resourceMsSqlManagedInstanceSecurityAlertPolicyRead",
          "update_method": "resourceMsSqlManagedInstanceSecurityAlertPolicyUpdate",
          "delete_method": "resourceMsSqlManagedInstanceSecurityAlertPolicyDelete"
        },
        "azurerm_mssql_managed_instance_transparent_data_encryption": {
          "create_method": "resourceMsSqlManagedInstanceTransparentDataEncryptionCreateUpdate",
          "read_method": "resourceMsSqlManagedInstanceTransparentDataEncryptionRead",
          "update_method": "resourceMsSqlManagedInstanceTransparentDataEncryptionCreateUpdate",
          "delete_method": "resourceMsSqlManagedInstanceTransparentDataEncryptionDelete"
        },
        "azurerm_mssql_managed_instance_vulnerability_assessment": {
          "create_method": "resourceMsSqlManagedInstanceVulnerabilityAssessmentCreate",
          "read_method": "resourceMsSqlManagedInstanceVulnerabilityAssessmentRead",
          "update_method": "resourceMsSqlManagedInstanceVulnerabilityAssessmentUpdate",
          "delete_method": "resourceMsSqlManagedInstanceVulnerabilityAssessmentDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {
        "MsSqlManagedDatabaseResource": "azurerm_mssql_managed_database",
        "MsSqlManagedInstanceActiveDirectoryAdministratorResource": "azurerm_mssql_managed_instance_active_directory_administrator",
        "MsSqlManagedInstanceFailoverGroupResource": "azurerm_mssql_managed_instance_failover_group",
        "MsSqlManagedInstanceResource": "azurerm_mssql_managed_instance",
        "MsSqlManagedInstanceStartStopScheduleResource": "azurerm_mssql_managed_instance_start_stop_schedule"
      },
      "data_source_terraform_types": {
        "MsSqlManagedDatabaseDataSource": "azurerm_mssql_managed_database",
        "MsSqlManagedInstanceDataSource": "azurerm_mssql_managed_instance"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "netapp",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/netapp",
      "supported_resources": {
        "azurerm_netapp_account": "resourceNetAppAccount",
        "azurerm_netapp_pool": "resourceNetAppPool",
        "azurerm_netapp_snapshot": "resourceNetAppSnapshot",
        "azurerm_netapp_snapshot_policy": "resourceNetAppSnapshotPolicy",
        "azurerm_netapp_volume": "resourceNetAppVolume"
      },
      "supported_data_sources": {
        "azurerm_netapp_account": "dataSourceNetAppAccount",
        "azurerm_netapp_pool": "dataSourceNetAppPool",
        "azurerm_netapp_snapshot": "dataSourceNetAppSnapshot",
        "azurerm_netapp_snapshot_policy": "dataSourceNetAppSnapshotPolicy",
        "azurerm_netapp_volume": "dataSourceNetAppVolume"
      },
      "resources": [
        "NetAppVolumeGroupSAPHanaResource",
        "NetAppVolumeQuotaRuleResource",
        "NetAppAccountEncryptionResource",
        "NetAppBackupVaultResource",
        "NetAppBackupPolicyResource",
        "NetAppVolumeGroupOracleResource"
      ],
      "data_sources": [
        "NetAppVolumeGroupSAPHanaDataSource",
        "NetAppVolumeQuotaRuleDataSource",
        "NetAppAccountEncryptionDataSource",
        "NetAppBackupVaultDataSource",
        "NetAppBackupPolicyDataSource",
        "NetAppVolumeGroupOracleDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_netapp_account": {
          "create_method": "resourceNetAppAccountCreate",
          "read_method": "resourceNetAppAccountRead",
          "update_method": "resourceNetAppAccountUpdate",
          "delete_method": "resourceNetAppAccountDelete"
        },
        "azurerm_netapp_pool": {
          "create_method": "resourceNetAppPoolCreate",
          "read_method": "resourceNetAppPoolRead",
          "update_method": "resourceNetAppPoolUpdate",
          "delete_method": "resourceNetAppPoolDelete"
        },
        "azurerm_netapp_snapshot": {
          "create_method": "resourceNetAppSnapshotCreate",
          "read_method": "resourceNetAppSnapshotRead",
          "delete_method": "resourceNetAppSnapshotDelete"
        },
        "azurerm_netapp_snapshot_policy": {
          "create_method": "resourceNetAppSnapshotPolicyCreate",
          "read_method": "resourceNetAppSnapshotPolicyRead",
          "update_method": "resourceNetAppSnapshotPolicyUpdate",
          "delete_method": "resourceNetAppSnapshotPolicyDelete"
        },
        "azurerm_netapp_volume": {
          "create_method": "resourceNetAppVolumeCreate",
          "read_method": "resourceNetAppVolumeRead",
          "update_method": "resourceNetAppVolumeUpdate",
          "delete_method": "resourceNetAppVolumeDelete"
        }
      },
      "data_source_methods": {
        "azurerm_netapp_account": {
          "read_method": "dataSourceNetAppAccountRead"
        },
        "azurerm_netapp_pool": {
          "read_method": "dataSourceNetAppPoolRead"
        },
        "azurerm_netapp_snapshot": {
          "read_method": "dataSourceNetAppSnapshotRead"
        },
        "azurerm_netapp_snapshot_policy": {
          "read_method": "dataSourceNetAppSnapshotPolicyRead"
        },
        "azurerm_netapp_volume": {
          "read_method": "dataSourceNetAppVolumeRead"
        }
      },
      "resource_terraform_types": {
        "NetAppAccountEncryptionResource": "azurerm_netapp_account_encryption",
        "NetAppBackupPolicyResource": "azurerm_netapp_backup_policy",
        "NetAppBackupVaultResource": "azurerm_netapp_backup_vault",
        "NetAppVolumeGroupOracleResource": "azurerm_netapp_volume_group_oracle",
        "NetAppVolumeGroupSAPHanaResource": "azurerm_netapp_volume_group_sap_hana",
        "NetAppVolumeQuotaRuleResource": "azurerm_netapp_volume_quota_rule"
      },
      "data_source_terraform_types": {
        "NetAppAccountEncryptionDataSource": "azurerm_netapp_account_encryption",
        "NetAppBackupPolicyDataSource": "azurerm_netapp_backup_policy",
        "NetAppBackupVaultDataSource": "azurerm_netapp_backup_vault",
        "NetAppVolumeGroupOracleDataSource": "azurerm_netapp_volume_group_oracle",
        "NetAppVolumeGroupSAPHanaDataSource": "azurerm_netapp_volume_group_sap_hana",
        "NetAppVolumeQuotaRuleDataSource": "azurerm_netapp_volume_quota_rule"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "network",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/network",
      "supported_resources": {
        "azurerm_application_gateway": "resourceApplicationGateway",
        "azurerm_application_security_group": "resourceApplicationSecurityGroup",
        "azurerm_bastion_host": "resourceBastionHost",
        "azurerm_express_route_circuit": "resourceExpressRouteCircuit",
        "azurerm_express_route_circuit_authorization": "resourceExpressRouteCircuitAuthorization",
        "azurerm_express_route_circuit_connection": "resourceExpressRouteCircuitConnection",
        "azurerm_express_route_circuit_peering": "resourceExpressRouteCircuitPeering",
        "azurerm_express_route_connection": "resourceExpressRouteConnection",
        "azurerm_express_route_gateway": "resourceExpressRouteGateway",
        "azurerm_express_route_port": "resourceArmExpressRoutePort",
        "azurerm_express_route_port_authorization": "resourceExpressRoutePortAuthorization",
        "azurerm_ip_group": "resourceIpGroup",
        "azurerm_ip_group_cidr": "resourceIpGroupCidr",
        "azurerm_local_network_gateway": "resourceLocalNetworkGateway",
        "azurerm_nat_gateway": "resourceNatGateway",
        "azurerm_nat_gateway_public_ip_association": "resourceNATGatewayPublicIpAssociation",
        "azurerm_nat_gateway_public_ip_prefix_association": "resourceNATGatewayPublicIpPrefixAssociation",
        "azurerm_network_connection_monitor": "resourceNetworkConnectionMonitor",
        "azurerm_network_ddos_protection_plan": "resourceNetworkDDoSProtectionPlan",
        "azurerm_network_interface": "resourceNetworkInterface",
        "azurerm_network_interface_application_gateway_backend_address_pool_association": "resourceNetworkInterfaceApplicationGatewayBackendAddressPoolAssociation",
        "azurerm_network_interface_application_security_group_association": "resourceNetworkInterfaceApplicationSecurityGroupAssociation",
        "azurerm_network_interface_backend_address_pool_association": "resourceNetworkInterfaceBackendAddressPoolAssociation",
        "azurerm_network_interface_nat_rule_association": "resourceNetworkInterfaceNatRuleAssociation",
        "azurerm_network_interface_security_group_association": "resourceNetworkInterfaceSecurityGroupAssociation",
        "azurerm_network_profile": "resourceNetworkProfile",
        "azurerm_network_security_group": "resourceNetworkSecurityGroup",
        "azurerm_network_security_rule": "resourceNetworkSecurityRule",
        "azurerm_network_watcher": "resourceNetworkWatcher",
        "azurerm_network_watcher_flow_log": "resourceNetworkWatcherFlowLog",
        "azurerm_point_to_site_vpn_gateway": "resourcePointToSiteVPNGateway",
        "azurerm_private_endpoint": "resourcePrivateEndpoint",
        "azurerm_private_link_service": "resourcePrivateLinkService",
        "azurerm_public_ip": "resourcePublicIp",
        "azurerm_public_ip_prefix": "resourcePublicIpPrefix",
        "azurerm_route": "resourceRoute",
        "azurerm_route_filter": "resourceRouteFilter",
        "azurerm_route_server": "resourceRouteServer",
        "azurerm_route_server_bgp_connection": "resourceRouteServerBgpConnection",
        "azurerm_route_table": "resourceRouteTable",
        "azurerm_subnet": "resourceSubnet",
        "azurerm_subnet_nat_gateway_association": "resourceSubnetNatGatewayAssociation",
        "azurerm_subnet_network_security_group_association": "resourceSubnetNetworkSecurityGroupAssociation",
        "azurerm_subnet_route_table_association": "resourceSubnetRouteTableAssociation",
        "azurerm_subnet_service_endpoint_storage_policy": "resourceSubnetServiceEndpointStoragePolicy",
        "azurerm_virtual_hub": "resourceVirtualHub",
        "azurerm_virtual_hub_bgp_connection": "resourceVirtualHubBgpConnection",
        "azurerm_virtual_hub_connection": "resourceVirtualHubConnection",
        "azurerm_virtual_hub_ip": "resourceVirtualHubIP",
        "azurerm_virtual_hub_route_table": "resourceVirtualHubRouteTable",
        "azurerm_virtual_hub_route_table_route": "resourceVirtualHubRouteTableRoute",
        "azurerm_virtual_hub_security_partner_provider": "resourceVirtualHubSecurityPartnerProvider",
        "azurerm_virtual_machine_packet_capture": "resourceVirtualMachinePacketCapture",
        "azurerm_virtual_machine_scale_set_packet_capture": "resourceVirtualMachineScaleSetPacketCapture",
        "azurerm_virtual_network": "resourceVirtualNetwork",
        "azurerm_virtual_network_dns_servers": "resourceVirtualNetworkDnsServers",
        "azurerm_virtual_network_gateway": "resourceVirtualNetworkGateway",
        "azurerm_virtual_network_gateway_connection": "resourceVirtualNetworkGatewayConnection",
        "azurerm_virtual_network_gateway_nat_rule": "resourceVirtualNetworkGatewayNatRule",
        "azurerm_virtual_network_peering": "resourceVirtualNetworkPeering",
        "azurerm_virtual_wan": "resourceVirtualWan",
        "azurerm_vpn_gateway": "resourceVPNGateway",
        "azurerm_vpn_gateway_connection": "resourceVPNGatewayConnection",
        "azurerm_vpn_gateway_nat_rule": "resourceVPNGatewayNatRule",
        "azurerm_vpn_server_configuration": "resourceVPNServerConfiguration",
        "azurerm_vpn_server_configuration_policy_group": "resourceVPNServerConfigurationPolicyGroup",
        "azurerm_vpn_site": "resourceVpnSite",
        "azurerm_web_application_firewall_policy": "resourceWebApplicationFirewallPolicy"
      },
      "supported_data_sources": {
        "azurerm_application_gateway": "dataSourceApplicationGateway",
        "azurerm_application_security_group": "dataSourceApplicationSecurityGroup",
        "azurerm_bastion_host": "dataSourceBastionHost",
        "azurerm_express_route_circuit": "dataSourceExpressRouteCircuit",
        "azurerm_express_route_circuit_peering": "dataSourceExpressRouteCircuitPeering",
        "azurerm_ip_group": "dataSourceIpGroup",
        "azurerm_ip_groups": "dataSourceIpGroups",
        "azurerm_local_network_gateway": "dataSourceLocalNetworkGateway",
        "azurerm_nat_gateway": "dataSourceNatGateway",
        "azurerm_network_ddos_protection_plan": "dataSourceNetworkDDoSProtectionPlan",
        "azurerm_network_interface": "dataSourceNetworkInterface",
        "azurerm_network_security_group": "dataSourceNetworkSecurityGroup",
        "azurerm_network_service_tags": "dataSourceNetworkServiceTags",
        "azurerm_network_watcher": "dataSourceNetworkWatcher",
        "azurerm_private_endpoint_connection": "dataSourcePrivateEndpointConnection",
        "azurerm_private_link_service": "dataSourcePrivateLinkService",
        "azurerm_private_link_service_endpoint_connections": "dataSourcePrivateLinkServiceEndpointConnections",
        "azurerm_public_ip": "dataSourcePublicIP",
        "azurerm_public_ip_prefix": "dataSourcePublicIpPrefix",
        "azurerm_public_ips": "dataSourcePublicIPs",
        "azurerm_route_filter": "dataSourceRouteFilter",
        "azurerm_route_table": "dataSourceRouteTable",
        "azurerm_subnet": "dataSourceSubnet",
        "azurerm_virtual_hub": "dataSourceVirtualHub",
        "azurerm_virtual_hub_connection": "dataSourceVirtualHubConnection",
        "azurerm_virtual_hub_route_table": "dataSourceVirtualHubRouteTable",
        "azurerm_virtual_network": "dataSourceVirtualNetwork",
        "azurerm_virtual_network_gateway": "dataSourceVirtualNetworkGateway",
        "azurerm_virtual_network_gateway_connection": "dataSourceVirtualNetworkGatewayConnection",
        "azurerm_virtual_wan": "dataSourceVirtualWan",
        "azurerm_vpn_gateway": "dataSourceVPNGateway",
        "azurerm_web_application_firewall_policy": "dataWebApplicationFirewallPolicy"
      },
      "resources": [
        "CustomIpPrefixResource",
        "ManagerAdminRuleResource",
        "ManagerAdminRuleCollectionResource",
        "ManagerDeploymentResource",
        "ManagerConnectivityConfigurationResource",
        "ManagerManagementGroupConnectionResource",
        "ManagerNetworkGroupResource",
        "ManagerResource",
        "ManagerIpamPoolResource",
        "ManagerRoutingConfigurationResource",
        "ManagerScopeConnectionResource",
        "ManagerSecurityAdminConfigurationResource",
        "ManagerStaticMemberResource",
        "ManagerSubscriptionConnectionResource",
        "ManagerVerifierWorkspaceResource",
        "ManagerVerifierWorkspaceReachabilityAnalysisIntentResource",
        "PrivateEndpointApplicationSecurityGroupAssociationResource",
        "RouteMapResource",
        "VirtualHubRoutingIntentResource"
      ],
      "data_sources": [
        "ManagerDataSource",
        "ManagerNetworkGroupDataSource",
        "ManagerConnectivityConfigurationDataSource",
        "ManagerIpamPoolDataSource",
        "VPNServerConfigurationDataSource",
        "VirtualNetworkPeeringDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_application_gateway": {
          "create_method": "resourceApplicationGatewayCreate",
          "read_method": "resourceApplicationGatewayRead",
          "update_method": "resourceApplicationGatewayUpdate",
          "delete_method": "resourceApplicationGatewayDelete"
        },
        "azurerm_application_security_group": {
          "create_method": "resourceApplicationSecurityGroupCreate",
          "read_method": "resourceApplicationSecurityGroupRead",
          "update_method": "resourceApplicationSecurityGroupUpdate",
          "delete_method": "resourceApplicationSecurityGroupDelete"
        },
        "azurerm_bastion_host": {
          "create_method": "resourceBastionHostCreate",
          "read_method": "resourceBastionHostRead",
          "update_method": "resourceBastionHostUpdate",
          "delete_method": "resourceBastionHostDelete"
        },
        "azurerm_express_route_circuit": {
          "create_method": "resourceExpressRouteCircuitCreate",
          "read_method": "resourceExpressRouteCircuitRead",
          "update_method": "resourceExpressRouteCircuitUpdate",
          "delete_method": "resourceExpressRouteCircuitDelete"
        },
        "azurerm_express_route_circuit_authorization": {
          "create_method": "resourceExpressRouteCircuitAuthorizationCreate",
          "read_method": "resourceExpressRouteCircuitAuthorizationRead",
          "delete_method": "resourceExpressRouteCircuitAuthorizationDelete"
        },
        "azurerm_express_route_circuit_connection": {
          "create_method": "resourceExpressRouteCircuitConnectionCreate",
          "read_method": "resourceExpressRouteCircuitConnectionRead",
          "update_method": "resourceExpressRouteCircuitConnectionUpdate",
          "delete_method": "resourceExpressRouteCircuitConnectionDelete"
        },
        "azurerm_express_route_circuit_peering": {
          "create_method": "resourceExpressRouteCircuitPeeringCreate",
          "read_method": "resourceExpressRouteCircuitPeeringRead",
          "update_method": "resourceExpressRouteCircuitPeeringUpdate",
          "delete_method": "resourceExpressRouteCircuitPeeringDelete"
        },
        "azurerm_express_route_connection": {
          "create_method": "resourceExpressRouteConnectionCreate",
          "read_method": "resourceExpressRouteConnectionRead",
          "update_method": "resourceExpressRouteConnectionUpdate",
          "delete_method": "resourceExpressRouteConnectionDelete"
        },
        "azurerm_express_route_gateway": {
          "create_method": "resourceExpressRouteGatewayCreate",
          "read_method": "resourceExpressRouteGatewayRead",
          "update_method": "resourceExpressRouteGatewayUpdate",
          "delete_method": "resourceExpressRouteGatewayDelete"
        },
        "azurerm_express_route_port": {
          "create_method": "resourceArmExpressRoutePortCreate",
          "read_method": "resourceArmExpressRoutePortRead",
          "update_method": "resourceArmExpressRoutePortUpdate",
          "delete_method": "resourceArmExpressRoutePortDelete"
        },
        "azurerm_express_route_port_authorization": {
          "create_method": "resourceExpressRoutePortAuthorizationCreate",
          "read_method": "resourceExpressRoutePortAuthorizationRead",
          "delete_method": "resourceExpressRoutePortAuthorizationDelete"
        },
        "azurerm_ip_group": {
          "create_method": "resourceIpGroupCreate",
          "read_method": "resourceIpGroupRead",
          "update_method": "resourceIpGroupUpdate",
          "delete_method": "resourceIpGroupDelete"
        },
        "azurerm_ip_group_cidr": {
          "create_method": "resourceIpGroupCidrCreate",
          "read_method": "resourceIpGroupCidrRead",
          "delete_method": "resourceIpGroupCidrDelete"
        },
        "azurerm_local_network_gateway": {
          "create_method": "resourceLocalNetworkGatewayCreate",
          "read_method": "resourceLocalNetworkGatewayRead",
          "update_method": "resourceLocalNetworkGatewayUpdate",
          "delete_method": "resourceLocalNetworkGatewayDelete"
        },
        "azurerm_nat_gateway": {
          "create_method": "resourceNatGatewayCreate",
          "read_method": "resourceNatGatewayRead",
          "update_method": "resourceNatGatewayUpdate",
          "delete_method": "resourceNatGatewayDelete"
        },
        "azurerm_nat_gateway_public_ip_association": {
          "create_method": "resourceNATGatewayPublicIpAssociationCreate",
          "read_method": "resourceNATGatewayPublicIpAssociationRead",
          "delete_method": "resourceNATGatewayPublicIpAssociationDelete"
        },
        "azurerm_nat_gateway_public_ip_prefix_association": {
          "create_method": "resourceNATGatewayPublicIpPrefixAssociationCreate",
          "read_method": "resourceNATGatewayPublicIpPrefixAssociationRead",
          "delete_method": "resourceNATGatewayPublicIpPrefixAssociationDelete"
        },
        "azurerm_network_connection_monitor": {
          "create_method": "resourceNetworkConnectionMonitorCreate",
          "read_method": "resourceNetworkConnectionMonitorRead",
          "update_method": "resourceNetworkConnectionMonitorUpdate",
          "delete_method": "resourceNetworkConnectionMonitorDelete"
        },
        "azurerm_network_ddos_protection_plan": {
          "create_method": "resourceNetworkDDoSProtectionPlanCreate",
          "read_method": "resourceNetworkDDoSProtectionPlanRead",
          "update_method": "resourceNetworkDDoSProtectionPlanUpdate",
          "delete_method": "resourceNetworkDDoSProtectionPlanDelete"
        },
        "azurerm_network_interface": {
          "create_method": "resourceNetworkInterfaceCreate",
          "read_method": "resourceNetworkInterfaceRead",
          "update_method": "resourceNetworkInterfaceUpdate",
          "delete_method": "resourceNetworkInterfaceDelete"
        },
        "azurerm_network_interface_application_gateway_backend_address_pool_association": {
          "create_method": "resourceNetworkInterfaceApplicationGatewayBackendAddressPoolAssociationCreate",
          "read_method": "resourceNetworkInterfaceApplicationGatewayBackendAddressPoolAssociationRead",
          "delete_method": "resourceNetworkInterfaceApplicationGatewayBackendAddressPoolAssociationDelete"
        },
        "azurerm_network_interface_application_security_group_association": {
          "create_method": "resourceNetworkInterfaceApplicationSecurityGroupAssociationCreate",
          "read_method": "resourceNetworkInterfaceApplicationSecurityGroupAssociationRead",
          "delete_method": "resourceNetworkInterfaceApplicationSecurityGroupAssociationDelete"
        },
        "azurerm_network_interface_backend_address_pool_association": {
          "create_method": "resourceNetworkInterfaceBackendAddressPoolAssociationCreate",
          "read_method": "resourceNetworkInterfaceBackendAddressPoolAssociationRead",
          "delete_method": "resourceNetworkInterfaceBackendAddressPoolAssociationDelete"
        },
        "azurerm_network_interface_nat_rule_association": {
          "create_method": "resourceNetworkInterfaceNatRuleAssociationCreate",
          "read_method": "resourceNetworkInterfaceNatRuleAssociationRead",
          "delete_method": "resourceNetworkInterfaceNatRuleAssociationDelete"
        },
        "azurerm_network_interface_security_group_association": {
          "create_method": "resourceNetworkInterfaceSecurityGroupAssociationCreate",
          "read_method": "resourceNetworkInterfaceSecurityGroupAssociationRead",
          "delete_method": "resourceNetworkInterfaceSecurityGroupAssociationDelete"
        },
        "azurerm_network_profile": {
          "create_method": "resourceNetworkProfileCreate",
          "read_method": "resourceNetworkProfileRead",
          "update_method": "resourceNetworkProfileUpdate",
          "delete_method": "resourceNetworkProfileDelete"
        },
        "azurerm_network_security_group": {
          "create_method": "resourceNetworkSecurityGroupCreate",
          "read_method": "resourceNetworkSecurityGroupRead",
          "update_method": "resourceNetworkSecurityGroupUpdate",
          "delete_method": "resourceNetworkSecurityGroupDelete"
        },
        "azurerm_network_security_rule": {
          "create_method": "resourceNetworkSecurityRuleCreate",
          "read_method": "resourceNetworkSecurityRuleRead",
          "update_method": "resourceNetworkSecurityRuleUpdate",
          "delete_method": "resourceNetworkSecurityRuleDelete"
        },
        "azurerm_network_watcher": {
          "create_method": "resourceNetworkWatcherCreate",
          "read_method": "resourceNetworkWatcherRead",
          "update_method": "resourceNetworkWatcherUpdate",
          "delete_method": "resourceNetworkWatcherDelete"
        },
        "azurerm_network_watcher_flow_log": {
          "create_method": "resourceNetworkWatcherFlowLogCreate",
          "read_method": "resourceNetworkWatcherFlowLogRead",
          "update_method": "resourceNetworkWatcherFlowLogUpdate",
          "delete_method": "resourceNetworkWatcherFlowLogDelete"
        },
        "azurerm_point_to_site_vpn_gateway": {
          "create_method": "resourcePointToSiteVPNGatewayCreate",
          "read_method": "resourcePointToSiteVPNGatewayRead",
          "update_method": "resourcePointToSiteVPNGatewayUpdate",
          "delete_method": "resourcePointToSiteVPNGatewayDelete"
        },
        "azurerm_private_endpoint": {
          "create_method": "resourcePrivateEndpointCreate",
          "read_method": "resourcePrivateEndpointRead",
          "update_method": "resourcePrivateEndpointUpdate",
          "delete_method": "resourcePrivateEndpointDelete"
        },
        "azurerm_private_link_service": {
          "create_method": "resourcePrivateLinkServiceCreate",
          "read_method": "resourcePrivateLinkServiceRead",
          "update_method": "resourcePrivateLinkServiceUpdate",
          "delete_method": "resourcePrivateLinkServiceDelete"
        },
        "azurerm_public_ip": {
          "create_method": "resourcePublicIpCreate",
          "read_method": "resourcePublicIpRead",
          "update_method": "resourcePublicIpUpdate",
          "delete_method": "resourcePublicIpDelete"
        },
        "azurerm_public_ip_prefix": {
          "create_method": "resourcePublicIpPrefixCreate",
          "read_method": "resourcePublicIpPrefixRead",
          "update_method": "resourcePublicIpPrefixUpdate",
          "delete_method": "resourcePublicIpPrefixDelete"
        },
        "azurerm_route": {
          "create_method": "resourceRouteCreate",
          "read_method": "resourceRouteRead",
          "update_method": "resourceRouteUpdate",
          "delete_method": "resourceRouteDelete"
        },
        "azurerm_route_filter": {
          "create_method": "resourceRouteFilterCreate",
          "read_method": "resourceRouteFilterRead",
          "update_method": "resourceRouteFilterUpdate",
          "delete_method": "resourceRouteFilterDelete"
        },
        "azurerm_route_server": {
          "create_method": "resourceRouteServerCreate",
          "read_method": "resourceRouteServerRead",
          "update_method": "resourceRouteServerUpdate",
          "delete_method": "resourceRouteServerDelete"
        },
        "azurerm_route_server_bgp_connection": {
          "create_method": "resourceRouteServerBgpConnectionCreate",
          "read_method": "resourceRouteServerBgpConnectionRead",
          "delete_method": "resourceRouteServerBgpConnectionDelete"
        },
        "azurerm_route_table": {
          "create_method": "resourceRouteTableCreate",
          "read_method": "resourceRouteTableRead",
          "update_method": "resourceRouteTableUpdate",
          "delete_method": "resourceRouteTableDelete"
        },
        "azurerm_subnet": {
          "create_method": "resourceSubnetCreate",
          "read_method": "resourceSubnetRead",
          "update_method": "resourceSubnetUpdate",
          "delete_method": "resourceSubnetDelete"
        },
        "azurerm_subnet_nat_gateway_association": {
          "create_method": "resourceSubnetNatGatewayAssociationCreate",
          "read_method": "resourceSubnetNatGatewayAssociationRead",
          "delete_method": "resourceSubnetNatGatewayAssociationDelete"
        },
        "azurerm_subnet_network_security_group_association": {
          "create_method": "resourceSubnetNetworkSecurityGroupAssociationCreate",
          "read_method": "resourceSubnetNetworkSecurityGroupAssociationRead",
          "delete_method": "resourceSubnetNetworkSecurityGroupAssociationDelete"
        },
        "azurerm_subnet_route_table_association": {
          "create_method": "resourceSubnetRouteTableAssociationCreate",
          "read_method": "resourceSubnetRouteTableAssociationRead",
          "delete_method": "resourceSubnetRouteTableAssociationDelete"
        },
        "azurerm_subnet_service_endpoint_storage_policy": {
          "create_method": "resourceSubnetServiceEndpointStoragePolicyCreate",
          "read_method": "resourceSubnetServiceEndpointStoragePolicyRead",
          "update_method": "resourceSubnetServiceEndpointStoragePolicyUpdate",
          "delete_method": "resourceSubnetServiceEndpointStoragePolicyDelete"
        },
        "azurerm_virtual_hub": {
          "create_method": "resourceVirtualHubCreate",
          "read_method": "resourceVirtualHubRead",
          "update_method": "resourceVirtualHubUpdate",
          "delete_method": "resourceVirtualHubDelete"
        },
        "azurerm_virtual_hub_bgp_connection": {
          "create_method": "resourceVirtualHubBgpConnectionCreate",
          "read_method": "resourceVirtualHubBgpConnectionRead",
          "update_method": "resourceVirtualHubBgpConnectionUpdate",
          "delete_method": "resourceVirtualHubBgpConnectionDelete"
        },
        "azurerm_virtual_hub_connection": {
          "create_method": "resourceVirtualHubConnectionCreateOrUpdate",
          "read_method": "resourceVirtualHubConnectionRead",
          "update_method": "resourceVirtualHubConnectionCreateOrUpdate",
          "delete_method": "resourceVirtualHubConnectionDelete"
        },
        "azurerm_virtual_hub_ip": {
          "create_method": "resourceVirtualHubIPCreate",
          "read_method": "resourceVirtualHubIPRead",
          "update_method": "resourceVirtualHubIPUpdate",
          "delete_method": "resourceVirtualHubIPDelete"
        },
        "azurerm_virtual_hub_route_table": {
          "create_method": "resourceVirtualHubRouteTableCreate",
          "read_method": "resourceVirtualHubRouteTableRead",
          "update_method": "resourceVirtualHubRouteTableUpdate",
          "delete_method": "resourceVirtualHubRouteTableDelete"
        },
        "azurerm_virtual_hub_route_table_route": {
          "create_method": "resourceVirtualHubRouteTableRouteCreate",
          "read_method": "resourceVirtualHubRouteTableRouteRead",
          "update_method": "resourceVirtualHubRouteTableRouteUpdate",
          "delete_method": "resourceVirtualHubRouteTableRouteDelete"
        },
        "azurerm_virtual_hub_security_partner_provider": {
          "create_method": "resourceVirtualHubSecurityPartnerProviderCreate",
          "read_method": "resourceVirtualHubSecurityPartnerProviderRead",
          "update_method": "resourceVirtualHubSecurityPartnerProviderUpdate",
          "delete_method": "resourceVirtualHubSecurityPartnerProviderDelete"
        },
        "azurerm_virtual_machine_packet_capture": {
          "create_method": "resourceVirtualMachinePacketCaptureCreate",
          "read_method": "resourceVirtualMachinePacketCaptureRead",
          "delete_method": "resourceVirtualMachinePacketCaptureDelete"
        },
        "azurerm_virtual_machine_scale_set_packet_capture": {
          "create_method": "resourceVirtualMachineScaleSetPacketCaptureCreate",
          "read_method": "resourceVirtualMachineScaleSetPacketCaptureRead",
          "delete_method": "resourceVirtualMachineScaleSetPacketCaptureDelete"
        },
        "azurerm_virtual_network": {
          "create_method": "resourceVirtualNetworkCreate",
          "read_method": "resourceVirtualNetworkRead",
          "update_method": "resourceVirtualNetworkUpdate",
          "delete_method": "resourceVirtualNetworkDelete"
        },
        "azurerm_virtual_network_dns_servers": {
          "create_method": "resourceVirtualNetworkDnsServersCreate",
          "read_method": "resourceVirtualNetworkDnsServersRead",
          "update_method": "resourceVirtualNetworkDnsServersUpdate",
          "delete_method": "resourceVirtualNetworkDnsServersDelete"
        },
        "azurerm_virtual_network_gateway": {
          "create_method": "resourceVirtualNetworkGatewayCreate",
          "read_method": "resourceVirtualNetworkGatewayRead",
          "update_method": "resourceVirtualNetworkGatewayUpdate",
          "delete_method": "resourceVirtualNetworkGatewayDelete"
        },
        "azurerm_virtual_network_gateway_connection": {
          "create_method": "resourceVirtualNetworkGatewayConnectionCreate",
          "read_method": "resourceVirtualNetworkGatewayConnectionRead",
          "update_method": "resourceVirtualNetworkGatewayConnectionUpdate",
          "delete_method": "resourceVirtualNetworkGatewayConnectionDelete"
        },
        "azurerm_virtual_network_gateway_nat_rule": {
          "create_method": "resourceVirtualNetworkGatewayNatRuleCreate",
          "read_method": "resourceVirtualNetworkGatewayNatRuleRead",
          "update_method": "resourceVirtualNetworkGatewayNatRuleUpdate",
          "delete_method": "resourceVirtualNetworkGatewayNatRuleDelete"
        },
        "azurerm_virtual_network_peering": {
          "create_method": "resourceVirtualNetworkPeeringCreate",
          "read_method": "resourceVirtualNetworkPeeringRead",
          "update_method": "resourceVirtualNetworkPeeringUpdate",
          "delete_method": "resourceVirtualNetworkPeeringDelete"
        },
        "azurerm_virtual_wan": {
          "create_method": "resourceVirtualWanCreate",
          "read_method": "resourceVirtualWanRead",
          "update_method": "resourceVirtualWanUpdate",
          "delete_method": "resourceVirtualWanDelete"
        },
        "azurerm_vpn_gateway": {
          "create_method": "resourceVPNGatewayCreate",
          "read_method": "resourceVPNGatewayRead",
          "update_method": "resourceVPNGatewayUpdate",
          "delete_method": "resourceVPNGatewayDelete"
        },
        "azurerm_vpn_gateway_connection": {
          "create_method": "resourceVpnGatewayConnectionResourceCreate",
          "read_method": "resourceVpnGatewayConnectionResourceRead",
          "update_method": "resourceVpnGatewayConnectionResourceUpdate",
          "delete_method": "resourceVpnGatewayConnectionResourceDelete"
        },
        "azurerm_vpn_gateway_nat_rule": {
          "create_method": "resourceVPNGatewayNatRuleCreate",
          "read_method": "resourceVPNGatewayNatRuleRead",
          "update_method": "resourceVPNGatewayNatRuleUpdate",
          "delete_method": "resourceVPNGatewayNatRuleDelete"
        },
        "azurerm_vpn_server_configuration": {
          "create_method": "resourceVPNServerConfigurationCreate",
          "read_method": "resourceVPNServerConfigurationRead",
          "update_method": "resourceVPNServerConfigurationUpdate",
          "delete_method": "resourceVPNServerConfigurationDelete"
        },
        "azurerm_vpn_server_configuration_policy_group": {
          "create_method": "resourceVPNServerConfigurationPolicyGroupCreate",
          "read_method": "resourceVPNServerConfigurationPolicyGroupRead",
          "update_method": "resourceVPNServerConfigurationPolicyGroupUpdate",
          "delete_method": "resourceVPNServerConfigurationPolicyGroupDelete"
        },
        "azurerm_vpn_site": {
          "create_method": "resourceVpnSiteCreate",
          "read_method": "resourceVpnSiteRead",
          "update_method": "resourceVpnSiteUpdate",
          "delete_method": "resourceVpnSiteDelete"
        },
        "azurerm_web_application_firewall_policy": {
          "create_method": "resourceWebApplicationFirewallPolicyCreate",
          "read_method": "resourceWebApplicationFirewallPolicyRead",
          "update_method": "resourceWebApplicationFirewallPolicyUpdate",
          "delete_method": "resourceWebApplicationFirewallPolicyDelete"
        }
      },
      "data_source_methods": {
        "azurerm_application_gateway": {
          "read_method": "dataSourceApplicationGatewayRead"
        },
        "azurerm_application_security_group": {
          "read_method": "dataSourceApplicationSecurityGroupRead"
        },
        "azurerm_bastion_host": {
          "read_method": "dataSourceBastionHostRead"
        },
        "azurerm_express_route_circuit": {
          "read_method": "dataSourceExpressRouteCircuitRead"
        },
        "azurerm_express_route_circuit_peering": {
          "read_method": "dataSourceExpressRouteCircuitPeeringRead"
        },
        "azurerm_ip_group": {
          "read_method": "dataSourceIpGroupRead"
        },
        "azurerm_ip_groups": {
          "read_method": "dataSourceIpGroupsRead"
        },
        "azurerm_local_network_gateway": {
          "read_method": "dataSourceLocalNetworkGatewayRead"
        },
        "azurerm_nat_gateway": {
          "read_method": "dataSourceNatGatewayRead"
        },
        "azurerm_network_ddos_protection_plan": {
          "read_method": "dataSourceNetworkDDoSProtectionPlanRead"
        },
        "azurerm_network_interface": {
          "read_method": "dataSourceNetworkInterfaceRead"
        },
        "azurerm_network_security_group": {
          "read_method": "dataSourceNetworkSecurityGroupRead"
        },
        "azurerm_network_service_tags": {
          "read_method": "dataSourceNetworkServiceTagsRead"
        },
        "azurerm_network_watcher": {
          "read_method": "dataSourceNetworkWatcherRead"
        },
        "azurerm_private_endpoint_connection": {
          "read_method": "dataSourcePrivateEndpointConnectionRead"
        },
        "azurerm_private_link_service": {
          "read_method": "dataSourcePrivateLinkServiceRead"
        },
        "azurerm_private_link_service_endpoint_connections": {
          "read_method": "dataSourcePrivateLinkServiceEndpointConnectionsRead"
        },
        "azurerm_public_ip": {
          "read_method": "dataSourcePublicIPRead"
        },
        "azurerm_public_ip_prefix": {
          "read_method": "dataSourcePublicIpPrefixRead"
        },
        "azurerm_public_ips": {
          "read_method": "dataSourcePublicIPsRead"
        },
        "azurerm_route_filter": {
          "read_method": "dataSourceRouteFilterRead"
        },
        "azurerm_route_table": {
          "read_method": "dataSourceRouteTableRead"
        },
        "azurerm_subnet": {
          "read_method": "dataSourceSubnetRead"
        },
        "azurerm_virtual_hub": {
          "read_method": "dataSourceVirtualHubRead"
        },
        "azurerm_virtual_hub_connection": {
          "read_method": "dataSourceVirtualHubConnectionRead"
        },
        "azurerm_virtual_hub_route_table": {
          "read_method": "dataSourceVirtualHubRouteTableRead"
        },
        "azurerm_virtual_network": {
          "read_method": "dataSourceVnetRead"
        },
        "azurerm_virtual_network_gateway": {
          "read_method": "dataSourceVirtualNetworkGatewayRead"
        },
        "azurerm_virtual_network_gateway_connection": {
          "read_method": "dataSourceVirtualNetworkGatewayConnectionRead"
        },
        "azurerm_virtual_wan": {
          "read_method": "dataSourceVirtualWanRead"
        },
        "azurerm_vpn_gateway": {
          "read_method": "dataSourceVPNGatewayRead"
        },
        "azurerm_web_application_firewall_policy": {
          "read_method": "dataSourceWebApplicationFirewallPolicy"
        }
      },
      "resource_terraform_types": {
        "CustomIpPrefixResource": "azurerm_custom_ip_prefix",
        "ManagerAdminRuleCollectionResource": "azurerm_network_manager_admin_rule_collection",
        "ManagerAdminRuleResource": "azurerm_network_manager_admin_rule",
        "ManagerConnectivityConfigurationResource": "azurerm_network_manager_connectivity_configuration",
        "ManagerDeploymentResource": "azurerm_network_manager_deployment",
        "ManagerIpamPoolResource": "azurerm_network_manager_ipam_pool",
        "ManagerManagementGroupConnectionResource": "azurerm_network_manager_management_group_connection",
        "ManagerNetworkGroupResource": "azurerm_network_manager_network_group",
        "ManagerResource": "azurerm_network_manager",
        "ManagerRoutingConfigurationResource": "azurerm_network_manager_routing_configuration",
        "ManagerScopeConnectionResource": "azurerm_network_manager_scope_connection",
        "ManagerSecurityAdminConfigurationResource": "azurerm_network_manager_security_admin_configuration",
        "ManagerStaticMemberResource": "azurerm_network_manager_static_member",
        "ManagerSubscriptionConnectionResource": "azurerm_network_manager_subscription_connection",
        "ManagerVerifierWorkspaceReachabilityAnalysisIntentResource": "azurerm_network_manager_verifier_workspace_reachability_analysis_intent",
        "ManagerVerifierWorkspaceResource": "azurerm_network_manager_verifier_workspace",
        "PrivateEndpointApplicationSecurityGroupAssociationResource": "azurerm_private_endpoint_application_security_group_association",
        "RouteMapResource": "azurerm_route_map",
        "VirtualHubRoutingIntentResource": "azurerm_virtual_hub_routing_intent"
      },
      "data_source_terraform_types": {
        "ManagerConnectivityConfigurationDataSource": "azurerm_network_manager_connectivity_configuration",
        "ManagerDataSource": "azurerm_network_manager",
        "ManagerIpamPoolDataSource": "azurerm_network_manager_ipam_pool",
        "ManagerNetworkGroupDataSource": "azurerm_network_manager_network_group",
        "VPNServerConfigurationDataSource": "azurerm_vpn_server_configuration",
        "VirtualNetworkPeeringDataSource": "azurerm_virtual_network_peering"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "newrelic",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/newrelic",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "NewRelicMonitorResource",
        "NewRelicTagRuleResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "NewRelicMonitorResource": "azurerm_new_relic_monitor",
        "NewRelicTagRuleResource": "azurerm_new_relic_tag_rule"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "networkfunction",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/networkfunction",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "NetworkFunctionAzureTrafficCollectorResource",
        "NetworkFunctionCollectorPolicyResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "NetworkFunctionAzureTrafficCollectorResource": "azurerm_network_function_azure_traffic_collector",
        "NetworkFunctionCollectorPolicyResource": "azurerm_network_function_collector_policy"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "nginx",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/nginx",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "CertificateResource",
        "DeploymentResource",
        "ConfigurationResource",
        "APIKeyResource"
      ],
      "data_sources": [
        "DeploymentDataSource",
        "CertificateDataSource",
        "ConfigurationDataSource",
        "APIKeyDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "APIKeyResource": "azurerm_nginx_api_key",
        "CertificateResource": "azurerm_nginx_certificate",
        "ConfigurationResource": "azurerm_nginx_configuration",
        "DeploymentResource": "azurerm_nginx_deployment"
      },
      "data_source_terraform_types": {
        "APIKeyDataSource": "azurerm_nginx_api_key",
        "CertificateDataSource": "azurerm_nginx_certificate",
        "ConfigurationDataSource": "azurerm_nginx_configuration",
        "DeploymentDataSource": "azurerm_nginx_deployment"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "notificationhub",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/notificationhub",
      "supported_resources": {
        "azurerm_notification_hub": "resourceNotificationHub",
        "azurerm_notification_hub_authorization_rule": "resourceNotificationHubAuthorizationRule",
        "azurerm_notification_hub_namespace": "resourceNotificationHubNamespace"
      },
      "supported_data_sources": {
        "azurerm_notification_hub": "dataSourceNotificationHub",
        "azurerm_notification_hub_namespace": "dataSourceNotificationHubNamespace"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_notification_hub": {
          "create_method": "resourceNotificationHubCreateUpdate",
          "read_method": "resourceNotificationHubRead",
          "update_method": "resourceNotificationHubCreateUpdate",
          "delete_method": "resourceNotificationHubDelete"
        },
        "azurerm_notification_hub_authorization_rule": {
          "create_method": "resourceNotificationHubAuthorizationRuleCreateUpdate",
          "read_method": "resourceNotificationHubAuthorizationRuleRead",
          "update_method": "resourceNotificationHubAuthorizationRuleCreateUpdate",
          "delete_method": "resourceNotificationHubAuthorizationRuleDelete"
        },
        "azurerm_notification_hub_namespace": {
          "create_method": "resourceNotificationHubNamespaceCreate",
          "read_method": "resourceNotificationHubNamespaceRead",
          "update_method": "resourceNotificationHubNamespaceUpdate",
          "delete_method": "resourceNotificationHubNamespaceDelete"
        }
      },
      "data_source_methods": {
        "azurerm_notification_hub": {
          "read_method": "dataSourceNotificationHubRead"
        },
        "azurerm_notification_hub_namespace": {
          "read_method": "resourceArmDataSourceNotificationHubNamespaceRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "oracle",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/oracle",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "AutonomousDatabaseRegularResource",
        "CloudVmClusterResource",
        "ExadataInfraResource"
      ],
      "data_sources": [
        "AdbsCharSetsDataSource",
        "AdbsNCharSetsDataSource",
        "AutonomousDatabaseRegularDataSource",
        "CloudVmClusterDataSource",
        "DBNodesDataSource",
        "DBServersDataSource",
        "DbSystemShapesDataSource",
        "ExadataInfraDataSource",
        "GiVersionsDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "AutonomousDatabaseRegularResource": "azurerm_oracle_autonomous_database",
        "CloudVmClusterResource": "azurerm_oracle_cloud_vm_cluster",
        "ExadataInfraResource": "azurerm_oracle_exadata_infrastructure"
      },
      "data_source_terraform_types": {
        "AdbsCharSetsDataSource": "azurerm_oracle_adbs_character_sets",
        "AdbsNCharSetsDataSource": "azurerm_oracle_adbs_national_character_sets",
        "AutonomousDatabaseRegularDataSource": "azurerm_oracle_autonomous_database",
        "CloudVmClusterDataSource": "azurerm_oracle_cloud_vm_cluster",
        "DBNodesDataSource": "azurerm_oracle_db_nodes",
        "DBServersDataSource": "azurerm_oracle_db_servers",
        "DbSystemShapesDataSource": "azurerm_oracle_db_system_shapes",
        "ExadataInfraDataSource": "azurerm_oracle_exadata_infrastructure",
        "GiVersionsDataSource": "azurerm_oracle_gi_versions"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "orbital",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/orbital",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "SpacecraftResource",
        "ContactProfileResource",
        "ContactResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "ContactProfileResource": "azurerm_orbital_contact_profile",
        "ContactResource": "azurerm_orbital_contact",
        "SpacecraftResource": "azurerm_orbital_spacecraft"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "paloalto",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/paloalto",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "LocalRuleStack",
        "LocalRuleStackCertificate",
        "LocalRulestackFQDNList",
        "LocalRulestackOutboundTrustCertificateAssociationResource",
        "LocalRulestackOutboundUnTrustCertificateAssociationResource",
        "LocalRuleStackPrefixList",
        "LocalRuleStackRule",
        "NetworkVirtualApplianceResource",
        "NextGenerationFirewallVHubLocalRuleStackResource",
        "NextGenerationFirewallVHubPanoramaResource",
        "NextGenerationFirewallVNetLocalRulestackResource",
        "NextGenerationFirewallVNetPanoramaResource"
      ],
      "data_sources": [
        "LocalRulestackDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "LocalRuleStack": "azurerm_palo_alto_local_rulestack",
        "LocalRuleStackCertificate": "azurerm_palo_alto_local_rulestack_certificate",
        "LocalRuleStackPrefixList": "azurerm_palo_alto_local_rulestack_prefix_list",
        "LocalRuleStackRule": "azurerm_palo_alto_local_rulestack_rule",
        "LocalRulestackFQDNList": "azurerm_palo_alto_local_rulestack_fqdn_list",
        "LocalRulestackOutboundTrustCertificateAssociationResource": "azurerm_palo_alto_local_rulestack_outbound_trust_certificate_association",
        "LocalRulestackOutboundUnTrustCertificateAssociationResource": "azurerm_palo_alto_local_rulestack_outbound_untrust_certificate_association",
        "NetworkVirtualApplianceResource": "azurerm_palo_alto_virtual_network_appliance",
        "NextGenerationFirewallVHubLocalRuleStackResource": "azurerm_palo_alto_next_generation_firewall_virtual_hub_local_rulestack",
        "NextGenerationFirewallVHubPanoramaResource": "azurerm_palo_alto_next_generation_firewall_virtual_hub_panorama",
        "NextGenerationFirewallVNetLocalRulestackResource": "azurerm_palo_alto_next_generation_firewall_virtual_network_local_rulestack",
        "NextGenerationFirewallVNetPanoramaResource": "azurerm_palo_alto_next_generation_firewall_virtual_network_panorama"
      },
      "data_source_terraform_types": {
        "LocalRulestackDataSource": "azurerm_palo_alto_local_rulestack"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "policy",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/policy",
      "supported_resources": {
        "azurerm_management_group_policy_exemption": "resourceArmManagementGroupPolicyExemption",
        "azurerm_management_group_policy_remediation": "resourceArmManagementGroupPolicyRemediation",
        "azurerm_policy_definition": "resourceArmPolicyDefinition",
        "azurerm_policy_virtual_machine_configuration_assignment": "resourcePolicyVirtualMachineConfigurationAssignment",
        "azurerm_resource_group_policy_exemption": "resourceArmResourceGroupPolicyExemption",
        "azurerm_resource_group_policy_remediation": "resourceArmResourceGroupPolicyRemediation",
        "azurerm_resource_policy_exemption": "resourceArmResourcePolicyExemption",
        "azurerm_resource_policy_remediation": "resourceArmResourcePolicyRemediation",
        "azurerm_subscription_policy_exemption": "resourceArmSubscriptionPolicyExemption",
        "azurerm_subscription_policy_remediation": "resourceArmSubscriptionPolicyRemediation"
      },
      "supported_data_sources": {
        "azurerm_policy_definition": "dataSourceArmPolicyDefinition",
        "azurerm_policy_definition_built_in": "dataSourceArmPolicyDefinitionBuiltIn",
        "azurerm_policy_set_definition": "dataSourceArmPolicySetDefinition",
        "azurerm_policy_virtual_machine_configuration_assignment": "dataSourcePolicyVirtualMachineConfigurationAssignment"
      },
      "resources": [
        "ManagementGroupAssignmentResource",
        "ManagementGroupPolicySetDefinitionResource",
        "ResourceAssignmentResource",
        "ResourceGroupAssignmentResource",
        "SubscriptionAssignmentResource"
      ],
      "data_sources": [
        "AssignmentDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_management_group_policy_exemption": {
          "create_method": "resourceArmManagementGroupPolicyExemptionCreateUpdate",
          "read_method": "resourceArmManagementGroupPolicyExemptionRead",
          "update_method": "resourceArmManagementGroupPolicyExemptionCreateUpdate",
          "delete_method": "resourceArmManagementGroupPolicyExemptionDelete"
        },
        "azurerm_management_group_policy_remediation": {
          "create_method": "resourceArmManagementGroupPolicyRemediationCreateUpdate",
          "read_method": "resourceArmManagementGroupPolicyRemediationRead",
          "update_method": "resourceArmManagementGroupPolicyRemediationCreateUpdate",
          "delete_method": "resourceArmManagementGroupPolicyRemediationDelete"
        },
        "azurerm_policy_definition": {
          "create_method": "resourceArmPolicyDefinitionCreateUpdate",
          "read_method": "resourceArmPolicyDefinitionRead",
          "update_method": "resourceArmPolicyDefinitionCreateUpdate",
          "delete_method": "resourceArmPolicyDefinitionDelete"
        },
        "azurerm_policy_virtual_machine_configuration_assignment": {
          "create_method": "resourcePolicyVirtualMachineConfigurationAssignmentCreateUpdate",
          "read_method": "resourcePolicyVirtualMachineConfigurationAssignmentRead",
          "update_method": "resourcePolicyVirtualMachineConfigurationAssignmentCreateUpdate",
          "delete_method": "resourcePolicyVirtualMachineConfigurationAssignmentDelete"
        },
        "azurerm_resource_group_policy_exemption": {
          "create_method": "resourceArmResourceGroupPolicyExemptionCreateUpdate",
          "read_method": "resourceArmResourceGroupPolicyExemptionRead",
          "update_method": "resourceArmResourceGroupPolicyExemptionCreateUpdate",
          "delete_method": "resourceArmResourceGroupPolicyExemptionDelete"
        },
        "azurerm_resource_group_policy_remediation": {
          "create_method": "resourceArmResourceGroupPolicyRemediationCreateUpdate",
          "read_method": "resourceArmResourceGroupPolicyRemediationRead",
          "update_method": "resourceArmResourceGroupPolicyRemediationCreateUpdate",
          "delete_method": "resourceArmResourceGroupPolicyRemediationDelete"
        },
        "azurerm_resource_policy_exemption": {
          "create_method": "resourceArmResourcePolicyExemptionCreateUpdate",
          "read_method": "resourceArmResourcePolicyExemptionRead",
          "update_method": "resourceArmResourcePolicyExemptionCreateUpdate",
          "delete_method": "resourceArmResourcePolicyExemptionDelete"
        },
        "azurerm_resource_policy_remediation": {
          "create_method": "resourceArmResourcePolicyRemediationCreateUpdate",
          "read_method": "resourceArmResourcePolicyRemediationRead",
          "update_method": "resourceArmResourcePolicyRemediationCreateUpdate",
          "delete_method": "resourceArmResourcePolicyRemediationDelete"
        },
        "azurerm_subscription_policy_exemption": {
          "create_method": "resourceArmSubscriptionPolicyExemptionCreateUpdate",
          "read_method": "resourceArmSubscriptionPolicyExemptionRead",
          "update_method": "resourceArmSubscriptionPolicyExemptionCreateUpdate",
          "delete_method": "resourceArmSubscriptionPolicyExemptionDelete"
        },
        "azurerm_subscription_policy_remediation": {
          "create_method": "resourceArmSubscriptionPolicyRemediationCreateUpdate",
          "read_method": "resourceArmSubscriptionPolicyRemediationRead",
          "update_method": "resourceArmSubscriptionPolicyRemediationCreateUpdate",
          "delete_method": "resourceArmSubscriptionPolicyRemediationDelete"
        }
      },
      "data_source_methods": {
        "azurerm_policy_definition": {},
        "azurerm_policy_definition_built_in": {},
        "azurerm_policy_set_definition": {
          "read_method": "dataSourceArmPolicySetDefinitionRead"
        },
        "azurerm_policy_virtual_machine_configuration_assignment": {
          "read_method": "dataSourcePolicyVirtualMachineConfigurationAssignmentRead"
        }
      },
      "resource_terraform_types": {
        "ManagementGroupAssignmentResource": "azurerm_management_group_policy_assignment",
        "ManagementGroupPolicySetDefinitionResource": "azurerm_management_group_policy_set_definition",
        "ResourceAssignmentResource": "azurerm_resource_policy_assignment",
        "ResourceGroupAssignmentResource": "azurerm_resource_group_policy_assignment",
        "SubscriptionAssignmentResource": "azurerm_subscription_policy_assignment"
      },
      "data_source_terraform_types": {
        "AssignmentDataSource": "azurerm_policy_assignment"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "portal",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/portal",
      "supported_resources": {
        "azurerm_portal_dashboard": "resourcePortalDashboard",
        "azurerm_portal_tenant_configuration": "resourcePortalTenantConfiguration"
      },
      "supported_data_sources": {
        "azurerm_portal_dashboard": "dataSourcePortalDashboard"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_portal_dashboard": {
          "create_method": "resourcePortalDashboardCreateUpdate",
          "read_method": "resourcePortalDashboardRead",
          "update_method": "resourcePortalDashboardCreateUpdate",
          "delete_method": "resourcePortalDashboardDelete"
        },
        "azurerm_portal_tenant_configuration": {
          "create_method": "resourcePortalTenantConfigurationCreateUpdate",
          "read_method": "resourcePortalTenantConfigurationRead",
          "update_method": "resourcePortalTenantConfigurationCreateUpdate",
          "delete_method": "resourcePortalTenantConfigurationDelete"
        }
      },
      "data_source_methods": {
        "azurerm_portal_dashboard": {
          "read_method": "dataSourcePortalDashboardRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "postgres",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/postgres",
      "supported_resources": {
        "azurerm_postgresql_flexible_server": "resourcePostgresqlFlexibleServer",
        "azurerm_postgresql_flexible_server_active_directory_administrator": "resourcePostgresqlFlexibleServerAdministrator",
        "azurerm_postgresql_flexible_server_configuration": "resourcePostgresqlFlexibleServerConfiguration",
        "azurerm_postgresql_flexible_server_database": "resourcePostgresqlFlexibleServerDatabase",
        "azurerm_postgresql_flexible_server_firewall_rule": "resourcePostgresqlFlexibleServerFirewallRule"
      },
      "supported_data_sources": {
        "azurerm_postgresql_flexible_server": "dataSourcePostgresqlFlexibleServer"
      },
      "resources": [
        "PostgresqlFlexibleServerBackupResource",
        "PostgresqlFlexibleServerVirtualEndpointResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_postgresql_flexible_server": {
          "create_method": "resourcePostgresqlFlexibleServerCreate",
          "read_method": "resourcePostgresqlFlexibleServerRead",
          "update_method": "resourcePostgresqlFlexibleServerUpdate",
          "delete_method": "resourcePostgresqlFlexibleServerDelete"
        },
        "azurerm_postgresql_flexible_server_active_directory_administrator": {
          "create_method": "resourcePostgresqlFlexibleServerAdministratorCreate",
          "read_method": "resourcePostgresqlFlexibleServerAdministratorRead",
          "delete_method": "resourcePostgresqlFlexibleServerAdministratorDelete"
        },
        "azurerm_postgresql_flexible_server_configuration": {
          "create_method": "resourceFlexibleServerConfigurationUpdate",
          "read_method": "resourceFlexibleServerConfigurationRead",
          "update_method": "resourceFlexibleServerConfigurationUpdate",
          "delete_method": "resourceFlexibleServerConfigurationDelete"
        },
        "azurerm_postgresql_flexible_server_database": {
          "create_method": "resourcePostgresqlFlexibleServerDatabaseCreate",
          "read_method": "resourcePostgresqlFlexibleServerDatabaseRead",
          "delete_method": "resourcePostgresqlFlexibleServerDatabaseDelete"
        },
        "azurerm_postgresql_flexible_server_firewall_rule": {
          "create_method": "resourcePostgresqlFlexibleServerFirewallRuleCreateUpdate",
          "read_method": "resourcePostgresqlFlexibleServerFirewallRuleRead",
          "update_method": "resourcePostgresqlFlexibleServerFirewallRuleCreateUpdate",
          "delete_method": "resourcePostgresqlFlexibleServerFirewallRuleDelete"
        }
      },
      "data_source_methods": {
        "azurerm_postgresql_flexible_server": {
          "read_method": "dataSourceArmPostgresqlFlexibleServerRead"
        }
      },
      "resource_terraform_types": {
        "PostgresqlFlexibleServerBackupResource": "azurerm_postgresql_flexible_server_backup",
        "PostgresqlFlexibleServerVirtualEndpointResource": "azurerm_postgresql_flexible_server_virtual_endpoint"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "powerbi",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/powerbi",
      "supported_resources": {
        "azurerm_powerbi_embedded": "resourcePowerBIEmbedded"
      },
      "supported_data_sources": {},
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_powerbi_embedded": {
          "create_method": "resourcePowerBIEmbeddedCreate",
          "read_method": "resourcePowerBIEmbeddedRead",
          "update_method": "resourcePowerBIEmbeddedUpdate",
          "delete_method": "resourcePowerBIEmbeddedDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "privatedns",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/privatedns",
      "supported_resources": {
        "azurerm_private_dns_a_record": "resourcePrivateDnsARecord",
        "azurerm_private_dns_aaaa_record": "resourcePrivateDnsAaaaRecord",
        "azurerm_private_dns_cname_record": "resourcePrivateDnsCNameRecord",
        "azurerm_private_dns_mx_record": "resourcePrivateDnsMxRecord",
        "azurerm_private_dns_ptr_record": "resourcePrivateDnsPtrRecord",
        "azurerm_private_dns_srv_record": "resourcePrivateDnsSrvRecord",
        "azurerm_private_dns_txt_record": "resourcePrivateDnsTxtRecord",
        "azurerm_private_dns_zone": "resourcePrivateDnsZone",
        "azurerm_private_dns_zone_virtual_network_link": "resourcePrivateDnsZoneVirtualNetworkLink"
      },
      "supported_data_sources": {
        "azurerm_private_dns_a_record": "dataSourcePrivateDnsARecord",
        "azurerm_private_dns_aaaa_record": "dataSourcePrivateDnsAaaaRecord",
        "azurerm_private_dns_cname_record": "dataSourcePrivateDnsCNameRecord",
        "azurerm_private_dns_mx_record": "dataSourcePrivateDnsMxRecord",
        "azurerm_private_dns_ptr_record": "dataSourcePrivateDnsPtrRecord",
        "azurerm_private_dns_soa_record": "dataSourcePrivateDnsSoaRecord",
        "azurerm_private_dns_srv_record": "dataSourcePrivateDnsSrvRecord",
        "azurerm_private_dns_txt_record": "dataSourcePrivateDnsTxtRecord",
        "azurerm_private_dns_zone": "dataSourcePrivateDnsZone",
        "azurerm_private_dns_zone_virtual_network_link": "dataSourcePrivateDnsZoneVirtualNetworkLink"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_private_dns_a_record": {
          "create_method": "resourcePrivateDnsARecordCreateUpdate",
          "read_method": "resourcePrivateDnsARecordRead",
          "update_method": "resourcePrivateDnsARecordCreateUpdate",
          "delete_method": "resourcePrivateDnsARecordDelete"
        },
        "azurerm_private_dns_aaaa_record": {
          "create_method": "resourcePrivateDnsAaaaRecordCreateUpdate",
          "read_method": "resourcePrivateDnsAaaaRecordRead",
          "update_method": "resourcePrivateDnsAaaaRecordCreateUpdate",
          "delete_method": "resourcePrivateDnsAaaaRecordDelete"
        },
        "azurerm_private_dns_cname_record": {
          "create_method": "resourcePrivateDnsCNameRecordCreateUpdate",
          "read_method": "resourcePrivateDnsCNameRecordRead",
          "update_method": "resourcePrivateDnsCNameRecordCreateUpdate",
          "delete_method": "resourcePrivateDnsCNameRecordDelete"
        },
        "azurerm_private_dns_mx_record": {
          "create_method": "resourcePrivateDnsMxRecordCreateUpdate",
          "read_method": "resourcePrivateDnsMxRecordRead",
          "update_method": "resourcePrivateDnsMxRecordCreateUpdate",
          "delete_method": "resourcePrivateDnsMxRecordDelete"
        },
        "azurerm_private_dns_ptr_record": {
          "create_method": "resourcePrivateDnsPtrRecordCreateUpdate",
          "read_method": "resourcePrivateDnsPtrRecordRead",
          "update_method": "resourcePrivateDnsPtrRecordCreateUpdate",
          "delete_method": "resourcePrivateDnsPtrRecordDelete"
        },
        "azurerm_private_dns_srv_record": {
          "create_method": "resourcePrivateDnsSrvRecordCreateUpdate",
          "read_method": "resourcePrivateDnsSrvRecordRead",
          "update_method": "resourcePrivateDnsSrvRecordCreateUpdate",
          "delete_method": "resourcePrivateDnsSrvRecordDelete"
        },
        "azurerm_private_dns_txt_record": {
          "create_method": "resourcePrivateDnsTxtRecordCreateUpdate",
          "read_method": "resourcePrivateDnsTxtRecordRead",
          "update_method": "resourcePrivateDnsTxtRecordCreateUpdate",
          "delete_method": "resourcePrivateDnsTxtRecordDelete"
        },
        "azurerm_private_dns_zone": {
          "create_method": "resourcePrivateDnsZoneCreateUpdate",
          "read_method": "resourcePrivateDnsZoneRead",
          "update_method": "resourcePrivateDnsZoneCreateUpdate",
          "delete_method": "resourcePrivateDnsZoneDelete"
        },
        "azurerm_private_dns_zone_virtual_network_link": {
          "create_method": "resourcePrivateDnsZoneVirtualNetworkLinkCreateUpdate",
          "read_method": "resourcePrivateDnsZoneVirtualNetworkLinkRead",
          "update_method": "resourcePrivateDnsZoneVirtualNetworkLinkCreateUpdate",
          "delete_method": "resourcePrivateDnsZoneVirtualNetworkLinkDelete"
        }
      },
      "data_source_methods": {
        "azurerm_private_dns_a_record": {
          "read_method": "dataSourcePrivateDnsARecordRead"
        },
        "azurerm_private_dns_aaaa_record": {
          "read_method": "dataSourcePrivateDnsAAAARecordRead"
        },
        "azurerm_private_dns_cname_record": {
          "read_method": "dataSourcePrivateDnsCNameRecordRead"
        },
        "azurerm_private_dns_mx_record": {
          "read_method": "dataSourcePrivateDnsMxRecordRead"
        },
        "azurerm_private_dns_ptr_record": {
          "read_method": "dataSourcePrivateDnsPtrRecordRead"
        },
        "azurerm_private_dns_soa_record": {
          "read_method": "dataSourcePrivateDnsSoaRecordRead"
        },
        "azurerm_private_dns_srv_record": {
          "read_method": "dataSourcePrivateDnsSrvRecordRead"
        },
        "azurerm_private_dns_txt_record": {
          "read_method": "dataSourcePrivateDnsTxtRecordRead"
        },
        "azurerm_private_dns_zone": {
          "read_method": "dataSourcePrivateDnsZoneRead"
        },
        "azurerm_private_dns_zone_virtual_network_link": {
          "read_method": "dataSourcePrivateDnsZoneVirtualNetworkLinkRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "privatednsresolver",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/privatednsresolver",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "PrivateDNSResolverDnsForwardingRulesetResource",
        "PrivateDNSResolverDnsResolverResource",
        "PrivateDNSResolverForwardingRuleResource",
        "PrivateDNSResolverInboundEndpointResource",
        "PrivateDNSResolverOutboundEndpointResource",
        "PrivateDNSResolverVirtualNetworkLinkResource"
      ],
      "data_sources": [
        "PrivateDNSResolverDnsForwardingRulesetDataSource",
        "PrivateDNSResolverDnsResolverDataSource",
        "PrivateDNSResolverForwardingRuleDataSource",
        "PrivateDNSResolverInboundEndpointDataSource",
        "PrivateDNSResolverOutboundEndpointDataSource",
        "PrivateDNSResolverVirtualNetworkLinkDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "PrivateDNSResolverDnsForwardingRulesetResource": "azurerm_private_dns_resolver_dns_forwarding_ruleset",
        "PrivateDNSResolverDnsResolverResource": "azurerm_private_dns_resolver",
        "PrivateDNSResolverForwardingRuleResource": "azurerm_private_dns_resolver_forwarding_rule",
        "PrivateDNSResolverInboundEndpointResource": "azurerm_private_dns_resolver_inbound_endpoint",
        "PrivateDNSResolverOutboundEndpointResource": "azurerm_private_dns_resolver_outbound_endpoint",
        "PrivateDNSResolverVirtualNetworkLinkResource": "azurerm_private_dns_resolver_virtual_network_link"
      },
      "data_source_terraform_types": {
        "PrivateDNSResolverDnsForwardingRulesetDataSource": "azurerm_private_dns_resolver_dns_forwarding_ruleset",
        "PrivateDNSResolverDnsResolverDataSource": "azurerm_private_dns_resolver",
        "PrivateDNSResolverForwardingRuleDataSource": "azurerm_private_dns_resolver_forwarding_rule",
        "PrivateDNSResolverInboundEndpointDataSource": "azurerm_private_dns_resolver_inbound_endpoint",
        "PrivateDNSResolverOutboundEndpointDataSource": "azurerm_private_dns_resolver_outbound_endpoint",
        "PrivateDNSResolverVirtualNetworkLinkDataSource": "azurerm_private_dns_resolver_virtual_network_link"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "purview",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/purview",
      "supported_resources": {
        "azurerm_purview_account": "resourcePurviewAccount"
      },
      "supported_data_sources": {},
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_purview_account": {
          "create_method": "resourcePurviewAccountCreate",
          "read_method": "resourcePurviewAccountRead",
          "update_method": "resourcePurviewAccountUpdate",
          "delete_method": "resourcePurviewAccountDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "qumulo",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/qumulo",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "FileSystemResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "FileSystemResource": "azurerm_qumulo_file_system"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "recoveryservices",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/recoveryservices",
      "supported_resources": {
        "azurerm_backup_container_storage_account": "resourceBackupProtectionContainerStorageAccount",
        "azurerm_backup_policy_file_share": "resourceBackupProtectionPolicyFileShare",
        "azurerm_backup_policy_vm": "resourceBackupProtectionPolicyVM",
        "azurerm_backup_protected_file_share": "resourceBackupProtectedFileShare",
        "azurerm_backup_protected_vm": "resourceRecoveryServicesBackupProtectedVM",
        "azurerm_recovery_services_vault": "resourceRecoveryServicesVault",
        "azurerm_site_recovery_fabric": "resourceSiteRecoveryFabric",
        "azurerm_site_recovery_network_mapping": "resourceSiteRecoveryNetworkMapping",
        "azurerm_site_recovery_protection_container": "resourceSiteRecoveryProtectionContainer",
        "azurerm_site_recovery_protection_container_mapping": "resourceSiteRecoveryProtectionContainerMapping",
        "azurerm_site_recovery_replicated_vm": "resourceSiteRecoveryReplicatedVM",
        "azurerm_site_recovery_replication_policy": "resourceSiteRecoveryReplicationPolicy"
      },
      "supported_data_sources": {
        "azurerm_backup_policy_file_share": "dataSourceBackupPolicyFileShare",
        "azurerm_backup_policy_vm": "dataSourceBackupPolicyVm",
        "azurerm_site_recovery_fabric": "dataSourceSiteRecoveryFabric",
        "azurerm_site_recovery_protection_container": "dataSourceSiteRecoveryProtectionContainer",
        "azurerm_site_recovery_replication_policy": "dataSourceSiteRecoveryReplicationPolicy"
      },
      "resources": [
        "BackupProtectionPolicyVMWorkloadResource",
        "SiteRecoveryReplicationRecoveryPlanResource",
        "ReplicationPolicyHyperVResource",
        "HyperVSiteResource",
        "HyperVReplicationPolicyAssociationResource",
        "HyperVNetworkMappingResource",
        "VMWareReplicationPolicyResource",
        "VMWareReplicationPolicyAssociationResource",
        "VaultGuardProxyResource",
        "VMWareReplicatedVmResource"
      ],
      "data_sources": [
        "SiteRecoveryRecoveryVaultDataSource",
        "SiteRecoveryReplicationRecoveryPlanDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_backup_container_storage_account": {
          "create_method": "resourceBackupProtectionContainerStorageAccountCreate",
          "read_method": "resourceBackupProtectionContainerStorageAccountRead",
          "delete_method": "resourceBackupProtectionContainerStorageAccountDelete"
        },
        "azurerm_backup_policy_file_share": {
          "create_method": "resourceBackupProtectionPolicyFileShareCreateUpdate",
          "read_method": "resourceBackupProtectionPolicyFileShareRead",
          "update_method": "resourceBackupProtectionPolicyFileShareCreateUpdate",
          "delete_method": "resourceBackupProtectionPolicyFileShareDelete"
        },
        "azurerm_backup_policy_vm": {
          "create_method": "resourceBackupProtectionPolicyVMCreate",
          "read_method": "resourceBackupProtectionPolicyVMRead",
          "update_method": "resourceBackupProtectionPolicyVMUpdate",
          "delete_method": "resourceBackupProtectionPolicyVMDelete"
        },
        "azurerm_backup_protected_file_share": {
          "create_method": "resourceBackupProtectedFileShareCreateUpdate",
          "read_method": "resourceBackupProtectedFileShareRead",
          "update_method": "resourceBackupProtectedFileShareCreateUpdate",
          "delete_method": "resourceBackupProtectedFileShareDelete"
        },
        "azurerm_backup_protected_vm": {
          "create_method": "resourceRecoveryServicesBackupProtectedVMCreate",
          "read_method": "resourceRecoveryServicesBackupProtectedVMRead",
          "update_method": "resourceRecoveryServicesBackupProtectedVMUpdate",
          "delete_method": "resourceRecoveryServicesBackupProtectedVMDelete"
        },
        "azurerm_recovery_services_vault": {
          "create_method": "resourceRecoveryServicesVaultCreate",
          "read_method": "resourceRecoveryServicesVaultRead",
          "update_method": "resourceRecoveryServicesVaultUpdate",
          "delete_method": "resourceRecoveryServicesVaultDelete"
        },
        "azurerm_site_recovery_fabric": {
          "create_method": "resourceSiteRecoveryFabricCreate",
          "read_method": "resourceSiteRecoveryFabricRead",
          "delete_method": "resourceSiteRecoveryFabricDelete"
        },
        "azurerm_site_recovery_network_mapping": {
          "create_method": "resourceSiteRecoveryNetworkMappingCreate",
          "read_method": "resourceSiteRecoveryNetworkMappingRead",
          "delete_method": "resourceSiteRecoveryNetworkMappingDelete"
        },
        "azurerm_site_recovery_protection_container": {
          "create_method": "resourceSiteRecoveryProtectionContainerCreate",
          "read_method": "resourceSiteRecoveryProtectionContainerRead",
          "delete_method": "resourceSiteRecoveryProtectionContainerDelete"
        },
        "azurerm_site_recovery_protection_container_mapping": {
          "create_method": "resourceSiteRecoveryContainerMappingCreate",
          "read_method": "resourceSiteRecoveryContainerMappingRead",
          "update_method": "resourceSiteRecoveryContainerMappingUpdate",
          "delete_method": "resourceSiteRecoveryServicesContainerMappingDelete"
        },
        "azurerm_site_recovery_replicated_vm": {
          "create_method": "resourceSiteRecoveryReplicatedItemCreate",
          "read_method": "resourceSiteRecoveryReplicatedItemRead",
          "update_method": "resourceSiteRecoveryReplicatedItemUpdate",
          "delete_method": "resourceSiteRecoveryReplicatedItemDelete"
        },
        "azurerm_site_recovery_replication_policy": {
          "create_method": "resourceSiteRecoveryReplicationPolicyCreate",
          "read_method": "resourceSiteRecoveryReplicationPolicyRead",
          "update_method": "resourceSiteRecoveryReplicationPolicyUpdate",
          "delete_method": "resourceSiteRecoveryReplicationPolicyDelete"
        }
      },
      "data_source_methods": {
        "azurerm_backup_policy_file_share": {
          "read_method": "dataSourceBackupPolicyFileShareRead"
        },
        "azurerm_backup_policy_vm": {
          "read_method": "dataSourceBackupPolicyVmRead"
        },
        "azurerm_site_recovery_fabric": {
          "read_method": "dataSourceSiteRecoveryFabricRead"
        },
        "azurerm_site_recovery_protection_container": {
          "read_method": "dataSourceSiteRecoveryProtectionContainerRead"
        },
        "azurerm_site_recovery_replication_policy": {
          "read_method": "dataSourceSiteRecoveryReplicationPolicyRead"
        }
      },
      "resource_terraform_types": {
        "BackupProtectionPolicyVMWorkloadResource": "azurerm_backup_policy_vm_workload",
        "HyperVNetworkMappingResource": "azurerm_site_recovery_hyperv_network_mapping",
        "HyperVReplicationPolicyAssociationResource": "azurerm_site_recovery_hyperv_replication_policy_association",
        "HyperVSiteResource": "azurerm_site_recovery_services_vault_hyperv_site",
        "ReplicationPolicyHyperVResource": "azurerm_site_recovery_hyperv_replication_policy",
        "SiteRecoveryReplicationRecoveryPlanResource": "azurerm_site_recovery_replication_recovery_plan",
        "VMWareReplicatedVmResource": "azurerm_site_recovery_vmware_replicated_vm",
        "VMWareReplicationPolicyAssociationResource": "azurerm_site_recovery_vmware_replication_policy_association",
        "VMWareReplicationPolicyResource": "azurerm_site_recovery_vmware_replication_policy",
        "VaultGuardProxyResource": "azurerm_recovery_services_vault_resource_guard_association"
      },
      "data_source_terraform_types": {
        "SiteRecoveryRecoveryVaultDataSource": "azurerm_recovery_services_vault",
        "SiteRecoveryReplicationRecoveryPlanDataSource": "azurerm_site_recovery_replication_recovery_plan"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "redhatopenshift",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/redhatopenshift",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "RedHatOpenShiftCluster"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "RedHatOpenShiftCluster": "azurerm_redhat_openshift_cluster"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "redis",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/redis",
      "supported_resources": {
        "azurerm_redis_cache": "resourceRedisCache",
        "azurerm_redis_firewall_rule": "resourceRedisFirewallRule",
        "azurerm_redis_linked_server": "resourceRedisLinkedServer"
      },
      "supported_data_sources": {
        "azurerm_redis_cache": "dataSourceRedisCache"
      },
      "resources": [
        "RedisCacheAccessPolicyAssignmentResource",
        "RedisCacheAccessPolicyResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_redis_cache": {
          "create_method": "resourceRedisCacheCreate",
          "read_method": "resourceRedisCacheRead",
          "update_method": "resourceRedisCacheUpdate",
          "delete_method": "resourceRedisCacheDelete"
        },
        "azurerm_redis_firewall_rule": {
          "create_method": "resourceRedisFirewallRuleCreateUpdate",
          "read_method": "resourceRedisFirewallRuleRead",
          "update_method": "resourceRedisFirewallRuleCreateUpdate",
          "delete_method": "resourceRedisFirewallRuleDelete"
        },
        "azurerm_redis_linked_server": {
          "create_method": "resourceRedisLinkedServerCreate",
          "read_method": "resourceRedisLinkedServerRead",
          "delete_method": "resourceRedisLinkedServerDelete"
        }
      },
      "data_source_methods": {
        "azurerm_redis_cache": {
          "read_method": "dataSourceRedisCacheRead"
        }
      },
      "resource_terraform_types": {
        "RedisCacheAccessPolicyAssignmentResource": "azurerm_redis_cache_access_policy_assignment",
        "RedisCacheAccessPolicyResource": "azurerm_redis_cache_access_policy"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "redisenterprise",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/redisenterprise",
      "supported_resources": {
        "azurerm_redis_enterprise_cluster": "resourceRedisEnterpriseCluster",
        "azurerm_redis_enterprise_database": "resourceRedisEnterpriseDatabase"
      },
      "supported_data_sources": {
        "azurerm_redis_enterprise_database": "dataSourceRedisEnterpriseDatabase"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_redis_enterprise_cluster": {
          "create_method": "resourceRedisEnterpriseClusterCreate",
          "read_method": "resourceRedisEnterpriseClusterRead",
          "update_method": "resourceRedisEnterpriseClusterUpdate",
          "delete_method": "resourceRedisEnterpriseClusterDelete"
        },
        "azurerm_redis_enterprise_database": {
          "create_method": "resourceRedisEnterpriseDatabaseCreate",
          "read_method": "resourceRedisEnterpriseDatabaseRead",
          "update_method": "resourceRedisEnterpriseDatabaseUpdate",
          "delete_method": "resourceRedisEnterpriseDatabaseDelete"
        }
      },
      "data_source_methods": {
        "azurerm_redis_enterprise_database": {
          "read_method": "dataSourceRedisEnterpriseDatabaseRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "relay",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/relay",
      "supported_resources": {
        "azurerm_relay_hybrid_connection": "resourceArmRelayHybridConnection",
        "azurerm_relay_hybrid_connection_authorization_rule": "resourceRelayHybridConnectionAuthorizationRule",
        "azurerm_relay_namespace": "resourceRelayNamespace",
        "azurerm_relay_namespace_authorization_rule": "resourceRelayNamespaceAuthorizationRule"
      },
      "supported_data_sources": {},
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_relay_hybrid_connection": {
          "create_method": "resourceArmRelayHybridConnectionCreateUpdate",
          "read_method": "resourceArmRelayHybridConnectionRead",
          "update_method": "resourceArmRelayHybridConnectionCreateUpdate",
          "delete_method": "resourceArmRelayHybridConnectionDelete"
        },
        "azurerm_relay_hybrid_connection_authorization_rule": {
          "create_method": "resourceRelayHybridConnectionAuthorizationRuleCreateUpdate",
          "read_method": "resourceRelayHybridConnectionAuthorizationRuleRead",
          "update_method": "resourceRelayHybridConnectionAuthorizationRuleCreateUpdate",
          "delete_method": "resourceRelayHybridConnectionAuthorizationRuleDelete"
        },
        "azurerm_relay_namespace": {
          "create_method": "resourceRelayNamespaceCreateUpdate",
          "read_method": "resourceRelayNamespaceRead",
          "update_method": "resourceRelayNamespaceCreateUpdate",
          "delete_method": "resourceRelayNamespaceDelete"
        },
        "azurerm_relay_namespace_authorization_rule": {
          "create_method": "resourceRelayNamespaceAuthorizationRuleCreateUpdate",
          "read_method": "resourceRelayNamespaceAuthorizationRuleRead",
          "update_method": "resourceRelayNamespaceAuthorizationRuleCreateUpdate",
          "delete_method": "resourceRelayNamespaceAuthorizationRuleDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "resource",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/resource",
      "supported_resources": {
        "azurerm_management_group_template_deployment": "managementGroupTemplateDeploymentResource",
        "azurerm_management_lock": "resourceManagementLock",
        "azurerm_resource_group": "resourceResourceGroup",
        "azurerm_resource_group_template_deployment": "resourceGroupTemplateDeploymentResource",
        "azurerm_subscription_template_deployment": "subscriptionTemplateDeploymentResource",
        "azurerm_tenant_template_deployment": "tenantTemplateDeploymentResource"
      },
      "supported_data_sources": {
        "azurerm_management_group_template_deployment": "dataSourceManagementGroupTemplateDeployment",
        "azurerm_resource_group": "dataSourceResourceGroup",
        "azurerm_resource_group_template_deployment": "dataSourceResourceGroupTemplateDeployment",
        "azurerm_resources": "dataSourceResources",
        "azurerm_subscription_template_deployment": "dataSourceSubscriptionTemplateDeployment",
        "azurerm_template_spec_version": "dataSourceTemplateSpecVersion",
        "azurerm_tenant_template_deployment": "dataSourceTenantTemplateDeployment"
      },
      "resources": [
        "ResourceManagementPrivateLinkAssociationResource",
        "ResourceProviderRegistrationResource",
        "ResourceManagementPrivateLinkResource",
        "ResourceDeploymentScriptAzurePowerShellResource",
        "ResourceDeploymentScriptAzureCliResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_management_group_template_deployment": {
          "create_method": "managementGroupTemplateDeploymentResourceCreate",
          "read_method": "managementGroupTemplateDeploymentResourceRead",
          "update_method": "managementGroupTemplateDeploymentResourceUpdate",
          "delete_method": "managementGroupTemplateDeploymentResourceDelete"
        },
        "azurerm_management_lock": {
          "create_method": "resourceManagementLockCreate",
          "read_method": "resourceManagementLockRead",
          "delete_method": "resourceManagementLockDelete"
        },
        "azurerm_resource_group": {
          "create_method": "resourceResourceGroupCreateUpdate",
          "read_method": "resourceResourceGroupRead",
          "update_method": "resourceResourceGroupCreateUpdate",
          "delete_method": "resourceResourceGroupDelete"
        },
        "azurerm_resource_group_template_deployment": {
          "create_method": "resourceGroupTemplateDeploymentResourceCreate",
          "read_method": "resourceGroupTemplateDeploymentResourceRead",
          "update_method": "resourceGroupTemplateDeploymentResourceUpdate",
          "delete_method": "resourceGroupTemplateDeploymentResourceDelete"
        },
        "azurerm_subscription_template_deployment": {
          "create_method": "subscriptionTemplateDeploymentResourceCreate",
          "read_method": "subscriptionTemplateDeploymentResourceRead",
          "update_method": "subscriptionTemplateDeploymentResourceUpdate",
          "delete_method": "subscriptionTemplateDeploymentResourceDelete"
        },
        "azurerm_tenant_template_deployment": {
          "create_method": "tenantTemplateDeploymentResourceCreate",
          "read_method": "tenantTemplateDeploymentResourceRead",
          "update_method": "tenantTemplateDeploymentResourceUpdate",
          "delete_method": "tenantTemplateDeploymentResourceDelete"
        }
      },
      "data_source_methods": {
        "azurerm_management_group_template_deployment": {
          "read_method": "dataSourceManagementGroupTemplateDeploymentRead"
        },
        "azurerm_resource_group": {
          "read_method": "dataSourceResourceGroupRead"
        },
        "azurerm_resource_group_template_deployment": {
          "read_method": "dataSourceResourceGroupTemplateDeploymentRead"
        },
        "azurerm_resources": {
          "read_method": "dataSourceResourcesRead"
        },
        "azurerm_subscription_template_deployment": {
          "read_method": "dataSourceSubscriptionTemplateDeploymentRead"
        },
        "azurerm_template_spec_version": {
          "read_method": "dataSourceTemplateSpecVersionRead"
        },
        "azurerm_tenant_template_deployment": {
          "read_method": "dataSourceTenantTemplateDeploymentRead"
        }
      },
      "resource_terraform_types": {
        "ResourceDeploymentScriptAzureCliResource": "azurerm_resource_deployment_script_azure_cli",
        "ResourceDeploymentScriptAzurePowerShellResource": "azurerm_resource_deployment_script_azure_power_shell",
        "ResourceManagementPrivateLinkAssociationResource": "azurerm_resource_management_private_link_association",
        "ResourceManagementPrivateLinkResource": "azurerm_resource_management_private_link",
        "ResourceProviderRegistrationResource": "azurerm_resource_provider_registration"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "search",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/search",
      "supported_resources": {
        "azurerm_search_service": "resourceSearchService"
      },
      "supported_data_sources": {
        "azurerm_search_service": "dataSourceSearchService"
      },
      "resources": [
        "SharedPrivateLinkServiceResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_search_service": {
          "create_method": "resourceSearchServiceCreate",
          "read_method": "resourceSearchServiceRead",
          "update_method": "resourceSearchServiceUpdate",
          "delete_method": "resourceSearchServiceDelete"
        }
      },
      "data_source_methods": {
        "azurerm_search_service": {
          "read_method": "dataSourceSearchServiceRead"
        }
      },
      "resource_terraform_types": {
        "SharedPrivateLinkServiceResource": "azurerm_search_shared_private_link_service"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "securitycenter",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/securitycenter",
      "supported_resources": {
        "azurerm_advanced_threat_protection": "resourceAdvancedThreatProtection",
        "azurerm_iot_security_device_group": "resourceIotSecurityDeviceGroup",
        "azurerm_iot_security_solution": "resourceIotSecuritySolution",
        "azurerm_security_center_assessment": "resourceSecurityCenterAssessment",
        "azurerm_security_center_assessment_policy": "resourceArmSecurityCenterAssessmentPolicy",
        "azurerm_security_center_automation": "resourceSecurityCenterAutomation",
        "azurerm_security_center_contact": "resourceSecurityCenterContact",
        "azurerm_security_center_server_vulnerability_assessment_virtual_machine": "resourceServerVulnerabilityAssessmentVirtualMachine",
        "azurerm_security_center_server_vulnerability_assessments_setting": "resourceSecurityCenterServerVulnerabilityAssessmentsSetting",
        "azurerm_security_center_setting": "resourceSecurityCenterSetting",
        "azurerm_security_center_subscription_pricing": "resourceSecurityCenterSubscriptionPricing",
        "azurerm_security_center_workspace": "resourceSecurityCenterWorkspace"
      },
      "supported_data_sources": {},
      "resources": [
        "StorageDefenderResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_advanced_threat_protection": {
          "create_method": "resourceAdvancedThreatProtectionCreateUpdate",
          "read_method": "resourceAdvancedThreatProtectionRead",
          "update_method": "resourceAdvancedThreatProtectionCreateUpdate",
          "delete_method": "resourceAdvancedThreatProtectionDelete"
        },
        "azurerm_iot_security_device_group": {
          "create_method": "resourceIotSecurityDeviceGroupCreateUpdate",
          "read_method": "resourceIotSecurityDeviceGroupRead",
          "update_method": "resourceIotSecurityDeviceGroupCreateUpdate",
          "delete_method": "resourceIotSecurityDeviceGroupDelete"
        },
        "azurerm_iot_security_solution": {
          "create_method": "resourceIotSecuritySolutionCreateUpdate",
          "read_method": "resourceIotSecuritySolutionRead",
          "update_method": "resourceIotSecuritySolutionCreateUpdate",
          "delete_method": "resourceIotSecuritySolutionDelete"
        },
        "azurerm_security_center_assessment": {
          "create_method": "resourceSecurityCenterAssessmentCreateUpdate",
          "read_method": "resourceSecurityCenterAssessmentRead",
          "update_method": "resourceSecurityCenterAssessmentCreateUpdate",
          "delete_method": "resourceSecurityCenterAssessmentDelete"
        },
        "azurerm_security_center_assessment_policy": {
          "create_method": "resourceArmSecurityCenterAssessmentPolicyCreate",
          "read_method": "resourceArmSecurityCenterAssessmentPolicyRead",
          "update_method": "resourceArmSecurityCenterAssessmentPolicyUpdate",
          "delete_method": "resourceArmSecurityCenterAssessmentPolicyDelete"
        },
        "azurerm_security_center_automation": {
          "create_method": "resourceSecurityCenterAutomationCreateUpdate",
          "read_method": "resourceSecurityCenterAutomationRead",
          "update_method": "resourceSecurityCenterAutomationCreateUpdate",
          "delete_method": "resourceSecurityCenterAutomationDelete"
        },
        "azurerm_security_center_contact": {
          "create_method": "resourceSecurityCenterContactCreateUpdate",
          "read_method": "resourceSecurityCenterContactRead",
          "update_method": "resourceSecurityCenterContactCreateUpdate",
          "delete_method": "resourceSecurityCenterContactDelete"
        },
        "azurerm_security_center_server_vulnerability_assessment_virtual_machine": {
          "create_method": "resourceServerVulnerabilityAssessmentVirtualMachineCreate",
          "read_method": "resourceServerVulnerabilityAssessmentVirtualMachineRead",
          "delete_method": "resourceServerVulnerabilityAssessmentVirtualMachineDelete"
        },
        "azurerm_security_center_server_vulnerability_assessments_setting": {
          "create_method": "resourceSecurityCenterServerVulnerabilityAssessmentsSettingCreateOrUpdate",
          "read_method": "resourceSecurityCenterServerVulnerabilityAssessmentsSettingRead",
          "update_method": "resourceSecurityCenterServerVulnerabilityAssessmentsSettingCreateOrUpdate",
          "delete_method": "resourceSecurityCenterServerVulnerabilityAssessmentsSettingDelete"
        },
        "azurerm_security_center_setting": {
          "create_method": "resourceSecurityCenterSettingUpdate",
          "read_method": "resourceSecurityCenterSettingRead",
          "update_method": "resourceSecurityCenterSettingUpdate",
          "delete_method": "resourceSecurityCenterSettingDelete"
        },
        "azurerm_security_center_subscription_pricing": {
          "create_method": "resourceSecurityCenterSubscriptionPricingCreate",
          "read_method": "resourceSecurityCenterSubscriptionPricingRead",
          "update_method": "resourceSecurityCenterSubscriptionPricingUpdate",
          "delete_method": "resourceSecurityCenterSubscriptionPricingDelete"
        },
        "azurerm_security_center_workspace": {
          "create_method": "resourceSecurityCenterWorkspaceCreateUpdate",
          "read_method": "resourceSecurityCenterWorkspaceRead",
          "update_method": "resourceSecurityCenterWorkspaceCreateUpdate",
          "delete_method": "resourceSecurityCenterWorkspaceDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {
        "StorageDefenderResource": "azurerm_security_center_storage_defender"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "sentinel",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/sentinel",
      "supported_resources": {
        "azurerm_sentinel_alert_rule_fusion": "resourceSentinelAlertRuleFusion",
        "azurerm_sentinel_alert_rule_machine_learning_behavior_analytics": "resourceSentinelAlertRuleMLBehaviorAnalytics",
        "azurerm_sentinel_alert_rule_ms_security_incident": "resourceSentinelAlertRuleMsSecurityIncident",
        "azurerm_sentinel_alert_rule_nrt": "resourceSentinelAlertRuleNrt",
        "azurerm_sentinel_alert_rule_scheduled": "resourceSentinelAlertRuleScheduled",
        "azurerm_sentinel_automation_rule": "resourceSentinelAutomationRule",
        "azurerm_sentinel_data_connector_aws_cloud_trail": "resourceSentinelDataConnectorAwsCloudTrail",
        "azurerm_sentinel_data_connector_azure_active_directory": "resourceSentinelDataConnectorAzureActiveDirectory",
        "azurerm_sentinel_data_connector_azure_advanced_threat_protection": "resourceSentinelDataConnectorAzureAdvancedThreatProtection",
        "azurerm_sentinel_data_connector_azure_security_center": "resourceSentinelDataConnectorAzureSecurityCenter",
        "azurerm_sentinel_data_connector_microsoft_cloud_app_security": "resourceSentinelDataConnectorMicrosoftCloudAppSecurity",
        "azurerm_sentinel_data_connector_microsoft_defender_advanced_threat_protection": "resourceSentinelDataConnectorMicrosoftDefenderAdvancedThreatProtection",
        "azurerm_sentinel_data_connector_office_365": "resourceSentinelDataConnectorOffice365",
        "azurerm_sentinel_data_connector_office_atp": "resourceSentinelDataConnectorOfficeATP",
        "azurerm_sentinel_data_connector_threat_intelligence": "resourceSentinelDataConnectorThreatIntelligence"
      },
      "supported_data_sources": {
        "azurerm_sentinel_alert_rule": "dataSourceSentinelAlertRule",
        "azurerm_sentinel_alert_rule_template": "dataSourceSentinelAlertRuleTemplate"
      },
      "resources": [
        "AlertRuleThreatIntelligenceResource",
        "WatchlistResource",
        "WatchlistItemResource",
        "DataConnectorAwsS3Resource",
        "DataConnectorMicrosoftThreatProtectionResource",
        "DataConnectorIOTResource",
        "DataConnectorDynamics365Resource",
        "DataConnectorOffice365ProjectResource",
        "DataConnectorOfficePowerBIResource",
        "DataConnectorOfficeIRMResource",
        "LogAnalyticsWorkspaceOnboardResource",
        "DataConnectorThreatIntelligenceTAXIIResource",
        "DataConnectorMicrosoftThreatIntelligenceResource",
        "AlertRuleAnomalyBuiltInResource",
        "MetadataResource",
        "AlertRuleAnomalyDuplicateResource",
        "ThreatIntelligenceIndicator"
      ],
      "data_sources": [
        "AlertRuleAnomalyDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_sentinel_alert_rule_fusion": {
          "create_method": "resourceSentinelAlertRuleFusionCreate",
          "read_method": "resourceSentinelAlertRuleFusionRead",
          "update_method": "resourceSentinelAlertRuleFusionUpdate",
          "delete_method": "resourceSentinelAlertRuleFusionDelete"
        },
        "azurerm_sentinel_alert_rule_machine_learning_behavior_analytics": {
          "create_method": "resourceSentinelAlertRuleMLBehaviorAnalyticsCreateUpdate",
          "read_method": "resourceSentinelAlertRuleMLBehaviorAnalyticsRead",
          "update_method": "resourceSentinelAlertRuleMLBehaviorAnalyticsCreateUpdate",
          "delete_method": "resourceSentinelAlertRuleMLBehaviorAnalyticsDelete"
        },
        "azurerm_sentinel_alert_rule_ms_security_incident": {
          "create_method": "resourceSentinelAlertRuleMsSecurityIncidentCreateUpdate",
          "read_method": "resourceSentinelAlertRuleMsSecurityIncidentRead",
          "update_method": "resourceSentinelAlertRuleMsSecurityIncidentCreateUpdate",
          "delete_method": "resourceSentinelAlertRuleMsSecurityIncidentDelete"
        },
        "azurerm_sentinel_alert_rule_nrt": {
          "create_method": "resourceSentinelAlertRuleNrtCreateUpdate",
          "read_method": "resourceSentinelAlertRuleNrtRead",
          "update_method": "resourceSentinelAlertRuleNrtCreateUpdate",
          "delete_method": "resourceSentinelAlertRuleNrtDelete"
        },
        "azurerm_sentinel_alert_rule_scheduled": {
          "create_method": "resourceSentinelAlertRuleScheduledCreateUpdate",
          "read_method": "resourceSentinelAlertRuleScheduledRead",
          "update_method": "resourceSentinelAlertRuleScheduledCreateUpdate",
          "delete_method": "resourceSentinelAlertRuleScheduledDelete"
        },
        "azurerm_sentinel_automation_rule": {
          "create_method": "resourceSentinelAutomationRuleCreateOrUpdate",
          "read_method": "resourceSentinelAutomationRuleRead",
          "update_method": "resourceSentinelAutomationRuleCreateOrUpdate",
          "delete_method": "resourceSentinelAutomationRuleDelete"
        },
        "azurerm_sentinel_data_connector_aws_cloud_trail": {
          "create_method": "resourceSentinelDataConnectorAwsCloudTrailCreateUpdate",
          "read_method": "resourceSentinelDataConnectorAwsCloudTrailRead",
          "update_method": "resourceSentinelDataConnectorAwsCloudTrailCreateUpdate",
          "delete_method": "resourceSentinelDataConnectorAwsCloudTrailDelete"
        },
        "azurerm_sentinel_data_connector_azure_active_directory": {
          "create_method": "resourceSentinelDataConnectorAzureActiveDirectoryCreate",
          "read_method": "resourceSentinelDataConnectorAzureActiveDirectoryRead",
          "delete_method": "resourceSentinelDataConnectorAzureActiveDirectoryDelete"
        },
        "azurerm_sentinel_data_connector_azure_advanced_threat_protection": {
          "create_method": "resourceSentinelDataConnectorAzureAdvancedThreatProtectionCreate",
          "read_method": "resourceSentinelDataConnectorAzureAdvancedThreatProtectionRead",
          "delete_method": "resourceSentinelDataConnectorAzureAdvancedThreatProtectionDelete"
        },
        "azurerm_sentinel_data_connector_azure_security_center": {
          "create_method": "resourceSentinelDataConnectorAzureSecurityCenterCreate",
          "read_method": "resourceSentinelDataConnectorAzureSecurityCenterRead",
          "delete_method": "resourceSentinelDataConnectorAzureSecurityCenterDelete"
        },
        "azurerm_sentinel_data_connector_microsoft_cloud_app_security": {
          "create_method": "resourceSentinelDataConnectorMicrosoftCloudAppSecurityCreateUpdate",
          "read_method": "resourceSentinelDataConnectorMicrosoftCloudAppSecurityRead",
          "update_method": "resourceSentinelDataConnectorMicrosoftCloudAppSecurityCreateUpdate",
          "delete_method": "resourceSentinelDataConnectorMicrosoftCloudAppSecurityDelete"
        },
        "azurerm_sentinel_data_connector_microsoft_defender_advanced_threat_protection": {
          "create_method": "resourceSentinelDataConnectorMicrosoftDefenderAdvancedThreatProtectionCreate",
          "read_method": "resourceSentinelDataConnectorMicrosoftDefenderAdvancedThreatProtectionRead",
          "delete_method": "resourceSentinelDataConnectorMicrosoftDefenderAdvancedThreatProtectionDelete"
        },
        "azurerm_sentinel_data_connector_office_365": {
          "create_method": "resourceSentinelDataConnectorOffice365CreateUpdate",
          "read_method": "resourceSentinelDataConnectorOffice365Read",
          "update_method": "resourceSentinelDataConnectorOffice365CreateUpdate",
          "delete_method": "resourceSentinelDataConnectorOffice365Delete"
        },
        "azurerm_sentinel_data_connector_office_atp": {
          "create_method": "resourceSentinelDataConnectorOfficeATPCreate",
          "read_method": "resourceSentinelDataConnectorOfficeATPRead",
          "delete_method": "resourceSentinelDataConnectorOfficeATPDelete"
        },
        "azurerm_sentinel_data_connector_threat_intelligence": {
          "create_method": "resourceSentinelDataConnectorThreatIntelligenceCreateUpdate",
          "read_method": "resourceSentinelDataConnectorThreatIntelligenceRead",
          "delete_method": "resourceSentinelDataConnectorThreatIntelligenceDelete"
        }
      },
      "data_source_methods": {
        "azurerm_sentinel_alert_rule": {
          "read_method": "dataSourceSentinelAlertRuleRead"
        },
        "azurerm_sentinel_alert_rule_template": {
          "read_method": "dataSourceSentinelAlertRuleTemplateRead"
        }
      },
      "resource_terraform_types": {
        "AlertRuleAnomalyBuiltInResource": "azurerm_sentinel_alert_rule_anomaly_built_in",
        "AlertRuleAnomalyDuplicateResource": "azurerm_sentinel_alert_rule_anomaly_duplicate",
        "AlertRuleThreatIntelligenceResource": "azurerm_sentinel_alert_rule_threat_intelligence",
        "DataConnectorAwsS3Resource": "azurerm_sentinel_data_connector_aws_s3",
        "DataConnectorDynamics365Resource": "azurerm_sentinel_data_connector_dynamics_365",
        "DataConnectorIOTResource": "azurerm_sentinel_data_connector_iot",
        "DataConnectorMicrosoftThreatIntelligenceResource": "azurerm_sentinel_data_connector_microsoft_threat_intelligence",
        "DataConnectorMicrosoftThreatProtectionResource": "azurerm_sentinel_data_connector_microsoft_threat_protection",
        "DataConnectorOffice365ProjectResource": "azurerm_sentinel_data_connector_office_365_project",
        "DataConnectorOfficeIRMResource": "azurerm_sentinel_data_connector_office_irm",
        "DataConnectorOfficePowerBIResource": "azurerm_sentinel_data_connector_office_power_bi",
        "DataConnectorThreatIntelligenceTAXIIResource": "azurerm_sentinel_data_connector_threat_intelligence_taxii",
        "LogAnalyticsWorkspaceOnboardResource": "azurerm_sentinel_log_analytics_workspace_onboarding",
        "MetadataResource": "azurerm_sentinel_metadata",
        "ThreatIntelligenceIndicator": "azurerm_sentinel_threat_intelligence_indicator",
        "WatchlistItemResource": "azurerm_sentinel_watchlist_item",
        "WatchlistResource": "azurerm_sentinel_watchlist"
      },
      "data_source_terraform_types": {
        "AlertRuleAnomalyDataSource": "azurerm_sentinel_alert_rule_anomaly"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "servicebus",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/servicebus",
      "supported_resources": {
        "azurerm_servicebus_namespace": "resourceServiceBusNamespace",
        "azurerm_servicebus_namespace_authorization_rule": "resourceServiceBusNamespaceAuthorizationRule",
        "azurerm_servicebus_namespace_disaster_recovery_config": "resourceServiceBusNamespaceDisasterRecoveryConfig",
        "azurerm_servicebus_queue": "resourceServiceBusQueue",
        "azurerm_servicebus_queue_authorization_rule": "resourceServiceBusQueueAuthorizationRule",
        "azurerm_servicebus_subscription": "resourceServiceBusSubscription",
        "azurerm_servicebus_subscription_rule": "resourceServiceBusSubscriptionRule",
        "azurerm_servicebus_topic": "resourceServiceBusTopic",
        "azurerm_servicebus_topic_authorization_rule": "resourceServiceBusTopicAuthorizationRule"
      },
      "supported_data_sources": {
        "azurerm_servicebus_namespace": "dataSourceServiceBusNamespace",
        "azurerm_servicebus_namespace_authorization_rule": "dataSourceServiceBusNamespaceAuthorizationRule",
        "azurerm_servicebus_namespace_disaster_recovery_config": "dataSourceServiceBusNamespaceDisasterRecoveryConfig",
        "azurerm_servicebus_queue": "dataSourceServiceBusQueue",
        "azurerm_servicebus_queue_authorization_rule": "dataSourceServiceBusQueueAuthorizationRule",
        "azurerm_servicebus_subscription": "dataSourceServiceBusSubscription",
        "azurerm_servicebus_topic": "dataSourceServiceBusTopic",
        "azurerm_servicebus_topic_authorization_rule": "dataSourceServiceBusTopicAuthorizationRule"
      },
      "resources": [
        "ServiceBusNamespaceCustomerManagedKeyResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_servicebus_namespace": {
          "create_method": "resourceServiceBusNamespaceCreate",
          "read_method": "resourceServiceBusNamespaceRead",
          "update_method": "resourceServiceBusNamespaceUpdate",
          "delete_method": "resourceServiceBusNamespaceDelete"
        },
        "azurerm_servicebus_namespace_authorization_rule": {
          "create_method": "resourceServiceBusNamespaceAuthorizationRuleCreateUpdate",
          "read_method": "resourceServiceBusNamespaceAuthorizationRuleRead",
          "update_method": "resourceServiceBusNamespaceAuthorizationRuleCreateUpdate",
          "delete_method": "resourceServiceBusNamespaceAuthorizationRuleDelete"
        },
        "azurerm_servicebus_namespace_disaster_recovery_config": {
          "create_method": "resourceServiceBusNamespaceDisasterRecoveryConfigCreate",
          "read_method": "resourceServiceBusNamespaceDisasterRecoveryConfigRead",
          "update_method": "resourceServiceBusNamespaceDisasterRecoveryConfigUpdate",
          "delete_method": "resourceServiceBusNamespaceDisasterRecoveryConfigDelete"
        },
        "azurerm_servicebus_queue": {
          "create_method": "resourceServiceBusQueueCreateUpdate",
          "read_method": "resourceServiceBusQueueRead",
          "update_method": "resourceServiceBusQueueCreateUpdate",
          "delete_method": "resourceServiceBusQueueDelete"
        },
        "azurerm_servicebus_queue_authorization_rule": {
          "create_method": "resourceServiceBusQueueAuthorizationRuleCreateUpdate",
          "read_method": "resourceServiceBusQueueAuthorizationRuleRead",
          "update_method": "resourceServiceBusQueueAuthorizationRuleCreateUpdate",
          "delete_method": "resourceServiceBusQueueAuthorizationRuleDelete"
        },
        "azurerm_servicebus_subscription": {
          "create_method": "resourceServiceBusSubscriptionCreateUpdate",
          "read_method": "resourceServiceBusSubscriptionRead",
          "update_method": "resourceServiceBusSubscriptionCreateUpdate",
          "delete_method": "resourceServiceBusSubscriptionDelete"
        },
        "azurerm_servicebus_subscription_rule": {
          "create_method": "resourceServiceBusSubscriptionRuleCreateUpdate",
          "read_method": "resourceServiceBusSubscriptionRuleRead",
          "update_method": "resourceServiceBusSubscriptionRuleCreateUpdate",
          "delete_method": "resourceServiceBusSubscriptionRuleDelete"
        },
        "azurerm_servicebus_topic": {
          "create_method": "resourceServiceBusTopicCreateUpdate",
          "read_method": "resourceServiceBusTopicRead",
          "update_method": "resourceServiceBusTopicCreateUpdate",
          "delete_method": "resourceServiceBusTopicDelete"
        },
        "azurerm_servicebus_topic_authorization_rule": {
          "create_method": "resourceServiceBusTopicAuthorizationRuleCreateUpdate",
          "read_method": "resourceServiceBusTopicAuthorizationRuleRead",
          "update_method": "resourceServiceBusTopicAuthorizationRuleCreateUpdate",
          "delete_method": "resourceServiceBusTopicAuthorizationRuleDelete"
        }
      },
      "data_source_methods": {
        "azurerm_servicebus_namespace": {
          "read_method": "dataSourceServiceBusNamespaceRead"
        },
        "azurerm_servicebus_namespace_authorization_rule": {
          "read_method": "dataSourceServiceBusNamespaceAuthorizationRuleRead"
        },
        "azurerm_servicebus_namespace_disaster_recovery_config": {
          "read_method": "dataSourceServiceBusNamespaceDisasterRecoveryConfigRead"
        },
        "azurerm_servicebus_queue": {
          "read_method": "dataSourceServiceBusQueueRead"
        },
        "azurerm_servicebus_queue_authorization_rule": {
          "read_method": "dataSourceServiceBusQueueAuthorizationRuleRead"
        },
        "azurerm_servicebus_subscription": {
          "read_method": "dataSourceServiceBusSubscriptionRead"
        },
        "azurerm_servicebus_topic": {
          "read_method": "dataSourceServiceBusTopicRead"
        },
        "azurerm_servicebus_topic_authorization_rule": {
          "read_method": "dataSourceServiceBusTopicAuthorizationRuleRead"
        }
      },
      "resource_terraform_types": {
        "ServiceBusNamespaceCustomerManagedKeyResource": "azurerm_servicebus_namespace_customer_managed_key"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "serviceconnector",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/serviceconnector",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "AppServiceConnectorResource",
        "SpringCloudConnectorResource",
        "FunctionAppConnectorResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "AppServiceConnectorResource": "azurerm_app_service_connection",
        "FunctionAppConnectorResource": "azurerm_function_app_connection",
        "SpringCloudConnectorResource": "azurerm_spring_cloud_connection"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "servicefabric",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/servicefabric",
      "supported_resources": {
        "azurerm_service_fabric_cluster": "resourceServiceFabricCluster"
      },
      "supported_data_sources": {},
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_service_fabric_cluster": {
          "create_method": "resourceServiceFabricClusterCreateUpdate",
          "read_method": "resourceServiceFabricClusterRead",
          "update_method": "resourceServiceFabricClusterCreateUpdate",
          "delete_method": "resourceServiceFabricClusterDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "servicenetworking",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/servicenetworking",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "ApplicationLoadBalancerResource",
        "FrontendsResource",
        "ApplicationLoadBalancerSubnetAssociationResource",
        "SecurityPoliciesResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "ApplicationLoadBalancerResource": "azurerm_application_load_balancer",
        "ApplicationLoadBalancerSubnetAssociationResource": "azurerm_application_load_balancer_subnet_association",
        "FrontendsResource": "azurerm_application_load_balancer_frontend",
        "SecurityPoliciesResource": "azurerm_application_load_balancer_security_policy"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "servicefabricmanaged",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/servicefabricmanaged",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "ClusterResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "ClusterResource": "azurerm_service_fabric_managed_cluster"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "signalr",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/signalr",
      "supported_resources": {
        "azurerm_signalr_service": "resourceArmSignalRService",
        "azurerm_signalr_service_network_acl": "resourceArmSignalRServiceNetworkACL",
        "azurerm_signalr_shared_private_link_resource": "resourceSignalRSharedPrivateLinkResource",
        "azurerm_web_pubsub": "resourceWebPubSub",
        "azurerm_web_pubsub_hub": "resourceWebPubSubHub",
        "azurerm_web_pubsub_network_acl": "resourceWebpubsubNetworkACL",
        "azurerm_web_pubsub_shared_private_link_resource": "resourceWebPubSubSharedPrivateLinkService"
      },
      "supported_data_sources": {
        "azurerm_signalr_service": "dataSourceArmSignalRService",
        "azurerm_web_pubsub": "dataSourceWebPubsub",
        "azurerm_web_pubsub_private_link_resource": "dataSourceWebPubsubPrivateLinkResource"
      },
      "resources": [
        "CustomDomainSignalrServiceResource",
        "CustomDomainWebPubsubResource",
        "CustomCertWebPubsubResource",
        "CustomCertSignalrServiceResource",
        "WebPubSubSocketIOResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_signalr_service": {
          "create_method": "resourceArmSignalRServiceCreate",
          "read_method": "resourceArmSignalRServiceRead",
          "update_method": "resourceArmSignalRServiceUpdate",
          "delete_method": "resourceArmSignalRServiceDelete"
        },
        "azurerm_signalr_service_network_acl": {
          "create_method": "resourceSignalRServiceNetworkACLCreateUpdate",
          "read_method": "resourceSignalRServiceNetworkACLRead",
          "update_method": "resourceSignalRServiceNetworkACLCreateUpdate",
          "delete_method": "resourceSignalRServiceNetworkACLDelete"
        },
        "azurerm_signalr_shared_private_link_resource": {
          "create_method": "resourceSignalRSharedPrivateLinkCreateUpdate",
          "read_method": "resourceSignalRSharedPrivateLinkRead",
          "update_method": "resourceSignalRSharedPrivateLinkCreateUpdate",
          "delete_method": "resourceSignalrSharedPrivateLinkDelete"
        },
        "azurerm_web_pubsub": {
          "create_method": "resourceWebPubSubCreateUpdate",
          "read_method": "resourceWebPubSubRead",
          "update_method": "resourceWebPubSubCreateUpdate",
          "delete_method": "resourceWebPubSubDelete"
        },
        "azurerm_web_pubsub_hub": {
          "create_method": "resourceWebPubSubHubCreateUpdate",
          "read_method": "resourceWebPubSubHubRead",
          "update_method": "resourceWebPubSubHubCreateUpdate",
          "delete_method": "resourceWebPubSubHubDelete"
        },
        "azurerm_web_pubsub_network_acl": {
          "create_method": "resourceWebPubsubNetworkACLCreateUpdate",
          "read_method": "resourceWebPubsubNetworkACLRead",
          "update_method": "resourceWebPubsubNetworkACLCreateUpdate",
          "delete_method": "resourceWebpubsubNetworkACLDelete"
        },
        "azurerm_web_pubsub_shared_private_link_resource": {
          "create_method": "resourceWebPubsubSharedPrivateLinkServiceCreateUpdate",
          "read_method": "resourceWebPubsubSharedPrivateLinkServiceRead",
          "update_method": "resourceWebPubsubSharedPrivateLinkServiceCreateUpdate",
          "delete_method": "resourceWebPubsubSharedPrivateLinkServiceDelete"
        }
      },
      "data_source_methods": {
        "azurerm_signalr_service": {
          "read_method": "dataSourceArmSignalRServiceRead"
        },
        "azurerm_web_pubsub": {
          "read_method": "dataSourceWebPubsubRead"
        },
        "azurerm_web_pubsub_private_link_resource": {
          "read_method": "dataSourceWebPubsubPrivateLinkResourceRead"
        }
      },
      "resource_terraform_types": {
        "CustomCertSignalrServiceResource": "azurerm_signalr_service_custom_certificate",
        "CustomCertWebPubsubResource": "azurerm_web_pubsub_custom_certificate",
        "CustomDomainSignalrServiceResource": "azurerm_signalr_service_custom_domain",
        "CustomDomainWebPubsubResource": "azurerm_web_pubsub_custom_domain",
        "WebPubSubSocketIOResource": "azurerm_web_pubsub_socketio"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "springcloud",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud",
      "supported_resources": {
        "azurerm_spring_cloud_active_deployment": "resourceSpringCloudActiveDeployment",
        "azurerm_spring_cloud_api_portal_custom_domain": "resourceSpringCloudAPIPortalCustomDomain",
        "azurerm_spring_cloud_app": "resourceSpringCloudApp",
        "azurerm_spring_cloud_app_cosmosdb_association": "resourceSpringCloudAppCosmosDBAssociation",
        "azurerm_spring_cloud_app_mysql_association": "resourceSpringCloudAppMysqlAssociation",
        "azurerm_spring_cloud_app_redis_association": "resourceSpringCloudAppRedisAssociation",
        "azurerm_spring_cloud_build_deployment": "resourceSpringCloudBuildDeployment",
        "azurerm_spring_cloud_build_pack_binding": "resourceSpringCloudBuildPackBinding",
        "azurerm_spring_cloud_builder": "resourceSpringCloudBuildServiceBuilder",
        "azurerm_spring_cloud_certificate": "resourceSpringCloudCertificate",
        "azurerm_spring_cloud_container_deployment": "resourceSpringCloudContainerDeployment",
        "azurerm_spring_cloud_custom_domain": "resourceSpringCloudCustomDomain",
        "azurerm_spring_cloud_gateway_custom_domain": "resourceSpringCloudGatewayCustomDomain",
        "azurerm_spring_cloud_gateway_route_config": "resourceSpringCloudGatewayRouteConfig",
        "azurerm_spring_cloud_java_deployment": "resourceSpringCloudJavaDeployment",
        "azurerm_spring_cloud_service": "resourceSpringCloudService",
        "azurerm_spring_cloud_storage": "resourceSpringCloudStorage"
      },
      "supported_data_sources": {
        "azurerm_spring_cloud_app": "dataSourceSpringCloudApp",
        "azurerm_spring_cloud_service": "dataSourceSpringCloudService"
      },
      "resources": [
        "SpringCloudAppDynamicsApplicationPerformanceMonitoringResource",
        "SpringCloudApplicationInsightsApplicationPerformanceMonitoringResource",
        "SpringCloudAPIPortalResource",
        "SpringCloudAcceleratorResource",
        "SpringCloudApplicationLiveViewResource",
        "SpringCloudConfigurationServiceResource",
        "SpringCloudCustomizedAcceleratorResource",
        "SpringCloudDevToolPortalResource",
        "SpringCloudDynatraceApplicationPerformanceMonitoringResource",
        "SpringCloudGatewayResource",
        "SpringCloudElasticApplicationPerformanceMonitoringResource",
        "SpringCloudNewRelicApplicationPerformanceMonitoringResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_spring_cloud_active_deployment": {
          "create_method": "resourceSpringCloudActiveDeploymentCreate",
          "read_method": "resourceSpringCloudActiveDeploymentRead",
          "update_method": "resourceSpringCloudActiveDeploymentUpdate",
          "delete_method": "resourceSpringCloudActiveDeploymentDelete"
        },
        "azurerm_spring_cloud_api_portal_custom_domain": {
          "create_method": "resourceSpringCloudAPIPortalCustomDomainCreateUpdate",
          "read_method": "resourceSpringCloudAPIPortalCustomDomainRead",
          "update_method": "resourceSpringCloudAPIPortalCustomDomainCreateUpdate",
          "delete_method": "resourceSpringCloudAPIPortalCustomDomainDelete"
        },
        "azurerm_spring_cloud_app": {
          "create_method": "resourceSpringCloudAppCreate",
          "read_method": "resourceSpringCloudAppRead",
          "update_method": "resourceSpringCloudAppUpdate",
          "delete_method": "resourceSpringCloudAppDelete"
        },
        "azurerm_spring_cloud_app_cosmosdb_association": {
          "create_method": "resourceSpringCloudAppCosmosDBAssociationCreateUpdate",
          "read_method": "resourceSpringCloudAppCosmosDBAssociationRead",
          "update_method": "resourceSpringCloudAppCosmosDBAssociationCreateUpdate",
          "delete_method": "resourceSpringCloudAppCosmosDBAssociationDelete"
        },
        "azurerm_spring_cloud_app_mysql_association": {
          "create_method": "resourceSpringCloudAppMysqlAssociationCreateUpdate",
          "read_method": "resourceSpringCloudAppMysqlAssociationRead",
          "update_method": "resourceSpringCloudAppMysqlAssociationCreateUpdate",
          "delete_method": "resourceSpringCloudAppMysqlAssociationDelete"
        },
        "azurerm_spring_cloud_app_redis_association": {
          "create_method": "resourceSpringCloudAppRedisAssociationCreateUpdate",
          "read_method": "resourceSpringCloudAppRedisAssociationRead",
          "update_method": "resourceSpringCloudAppRedisAssociationCreateUpdate",
          "delete_method": "resourceSpringCloudAppRedisAssociationDelete"
        },
        "azurerm_spring_cloud_build_deployment": {
          "create_method": "resourceSpringCloudBuildDeploymentCreateUpdate",
          "read_method": "resourceSpringCloudBuildDeploymentRead",
          "update_method": "resourceSpringCloudBuildDeploymentCreateUpdate",
          "delete_method": "resourceSpringCloudBuildDeploymentDelete"
        },
        "azurerm_spring_cloud_build_pack_binding": {
          "create_method": "resourceSpringCloudBuildPackBindingCreateUpdate",
          "read_method": "resourceSpringCloudBuildPackBindingRead",
          "update_method": "resourceSpringCloudBuildPackBindingCreateUpdate",
          "delete_method": "resourceSpringCloudBuildPackBindingDelete"
        },
        "azurerm_spring_cloud_builder": {
          "create_method": "resourceSpringCloudBuildServiceBuilderCreateUpdate",
          "read_method": "resourceSpringCloudBuildServiceBuilderRead",
          "update_method": "resourceSpringCloudBuildServiceBuilderCreateUpdate",
          "delete_method": "resourceSpringCloudBuildServiceBuilderDelete"
        },
        "azurerm_spring_cloud_certificate": {
          "create_method": "resourceSpringCloudCertificateCreate",
          "read_method": "resourceSpringCloudCertificateRead",
          "delete_method": "resourceSpringCloudCertificateDelete"
        },
        "azurerm_spring_cloud_container_deployment": {
          "create_method": "resourceSpringCloudContainerDeploymentCreateUpdate",
          "read_method": "resourceSpringCloudContainerDeploymentRead",
          "update_method": "resourceSpringCloudContainerDeploymentCreateUpdate",
          "delete_method": "resourceSpringCloudContainerDeploymentDelete"
        },
        "azurerm_spring_cloud_custom_domain": {
          "create_method": "resourceSpringCloudCustomDomainCreateUpdate",
          "read_method": "resourceSpringCloudCustomDomainRead",
          "update_method": "resourceSpringCloudCustomDomainCreateUpdate",
          "delete_method": "resourceSpringCloudCustomDomainDelete"
        },
        "azurerm_spring_cloud_gateway_custom_domain": {
          "create_method": "resourceSpringCloudGatewayCustomDomainCreateUpdate",
          "read_method": "resourceSpringCloudGatewayCustomDomainRead",
          "update_method": "resourceSpringCloudGatewayCustomDomainCreateUpdate",
          "delete_method": "resourceSpringCloudGatewayCustomDomainDelete"
        },
        "azurerm_spring_cloud_gateway_route_config": {
          "create_method": "resourceSpringCloudGatewayRouteConfigCreateUpdate",
          "read_method": "resourceSpringCloudGatewayRouteConfigRead",
          "update_method": "resourceSpringCloudGatewayRouteConfigCreateUpdate",
          "delete_method": "resourceSpringCloudGatewayRouteConfigDelete"
        },
        "azurerm_spring_cloud_java_deployment": {
          "create_method": "resourceSpringCloudJavaDeploymentCreate",
          "read_method": "resourceSpringCloudJavaDeploymentRead",
          "update_method": "resourceSpringCloudJavaDeploymentUpdate",
          "delete_method": "resourceSpringCloudJavaDeploymentDelete"
        },
        "azurerm_spring_cloud_service": {
          "create_method": "resourceSpringCloudServiceCreate",
          "read_method": "resourceSpringCloudServiceRead",
          "update_method": "resourceSpringCloudServiceUpdate",
          "delete_method": "resourceSpringCloudServiceDelete"
        },
        "azurerm_spring_cloud_storage": {
          "create_method": "resourceSpringCloudStorageCreateUpdate",
          "read_method": "resourceSpringCloudStorageRead",
          "update_method": "resourceSpringCloudStorageCreateUpdate",
          "delete_method": "resourceSpringCloudStorageDelete"
        }
      },
      "data_source_methods": {
        "azurerm_spring_cloud_app": {
          "read_method": "dataSourceSpringCloudAppRead"
        },
        "azurerm_spring_cloud_service": {
          "read_method": "dataSourceSpringCloudServiceRead"
        }
      },
      "resource_terraform_types": {
        "SpringCloudAPIPortalResource": "azurerm_spring_cloud_api_portal",
        "SpringCloudAcceleratorResource": "azurerm_spring_cloud_accelerator",
        "SpringCloudAppDynamicsApplicationPerformanceMonitoringResource": "azurerm_spring_cloud_app_dynamics_application_performance_monitoring",
        "SpringCloudApplicationInsightsApplicationPerformanceMonitoringResource": "azurerm_spring_cloud_application_insights_application_performance_monitoring",
        "SpringCloudApplicationLiveViewResource": "azurerm_spring_cloud_application_live_view",
        "SpringCloudConfigurationServiceResource": "azurerm_spring_cloud_configuration_service",
        "SpringCloudCustomizedAcceleratorResource": "azurerm_spring_cloud_customized_accelerator",
        "SpringCloudDevToolPortalResource": "azurerm_spring_cloud_dev_tool_portal",
        "SpringCloudDynatraceApplicationPerformanceMonitoringResource": "azurerm_spring_cloud_dynatrace_application_performance_monitoring",
        "SpringCloudElasticApplicationPerformanceMonitoringResource": "azurerm_spring_cloud_elastic_application_performance_monitoring",
        "SpringCloudGatewayResource": "azurerm_spring_cloud_gateway",
        "SpringCloudNewRelicApplicationPerformanceMonitoringResource": "azurerm_spring_cloud_new_relic_application_performance_monitoring"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "storagecache",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/storagecache",
      "supported_resources": {
        "azurerm_hpc_cache": "resourceHPCCache",
        "azurerm_hpc_cache_access_policy": "resourceHPCCacheAccessPolicy",
        "azurerm_hpc_cache_blob_nfs_target": "resourceHPCCacheBlobNFSTarget",
        "azurerm_hpc_cache_blob_target": "resourceHPCCacheBlobTarget",
        "azurerm_hpc_cache_nfs_target": "resourceHPCCacheNFSTarget"
      },
      "supported_data_sources": {},
      "resources": [
        "ManagedLustreFileSystemResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_hpc_cache": {
          "create_method": "resourceHPCCacheCreateOrUpdate",
          "read_method": "resourceHPCCacheRead",
          "update_method": "resourceHPCCacheCreateOrUpdate",
          "delete_method": "resourceHPCCacheDelete"
        },
        "azurerm_hpc_cache_access_policy": {
          "create_method": "resourceHPCCacheAccessPolicyCreateUpdate",
          "read_method": "resourceHPCCacheAccessPolicyRead",
          "update_method": "resourceHPCCacheAccessPolicyCreateUpdate",
          "delete_method": "resourceHPCCacheAccessPolicyDelete"
        },
        "azurerm_hpc_cache_blob_nfs_target": {
          "create_method": "resourceHPCCacheBlobNFSTargetCreateUpdate",
          "read_method": "resourceHPCCacheBlobNFSTargetRead",
          "update_method": "resourceHPCCacheBlobNFSTargetCreateUpdate",
          "delete_method": "resourceHPCCacheBlobNFSTargetDelete"
        },
        "azurerm_hpc_cache_blob_target": {
          "create_method": "resourceHPCCacheBlobTargetCreateOrUpdate",
          "read_method": "resourceHPCCacheBlobTargetRead",
          "update_method": "resourceHPCCacheBlobTargetCreateOrUpdate",
          "delete_method": "resourceHPCCacheBlobTargetDelete"
        },
        "azurerm_hpc_cache_nfs_target": {
          "create_method": "resourceHPCCacheNFSTargetCreateOrUpdate",
          "read_method": "resourceHPCCacheNFSTargetRead",
          "update_method": "resourceHPCCacheNFSTargetCreateOrUpdate",
          "delete_method": "resourceHPCCacheNFSTargetDelete"
        }
      },
      "data_source_methods": {},
      "resource_terraform_types": {
        "ManagedLustreFileSystemResource": "azurerm_managed_lustre_file_system"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "storagemover",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/storagemover",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "StorageMoverResource",
        "StorageMoverAgentResource",
        "StorageMoverSourceEndpointResource",
        "StorageMoverTargetEndpointResource",
        "StorageMoverProjectResource",
        "StorageMoverJobDefinitionResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "StorageMoverAgentResource": "azurerm_storage_mover_agent",
        "StorageMoverJobDefinitionResource": "azurerm_storage_mover_job_definition",
        "StorageMoverProjectResource": "azurerm_storage_mover_project",
        "StorageMoverResource": "azurerm_storage_mover",
        "StorageMoverSourceEndpointResource": "azurerm_storage_mover_source_endpoint",
        "StorageMoverTargetEndpointResource": "azurerm_storage_mover_target_endpoint"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "storage",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/storage",
      "supported_resources": {
        "azurerm_storage_account": "resourceStorageAccount",
        "azurerm_storage_account_customer_managed_key": "resourceStorageAccountCustomerManagedKey",
        "azurerm_storage_account_network_rules": "resourceStorageAccountNetworkRules",
        "azurerm_storage_blob": "resourceStorageBlob",
        "azurerm_storage_blob_inventory_policy": "resourceStorageBlobInventoryPolicy",
        "azurerm_storage_container": "resourceStorageContainer",
        "azurerm_storage_data_lake_gen2_filesystem": "resourceStorageDataLakeGen2FileSystem",
        "azurerm_storage_data_lake_gen2_path": "resourceStorageDataLakeGen2Path",
        "azurerm_storage_encryption_scope": "resourceStorageEncryptionScope",
        "azurerm_storage_management_policy": "resourceStorageManagementPolicy",
        "azurerm_storage_object_replication": "resourceStorageObjectReplication",
        "azurerm_storage_queue": "resourceStorageQueue",
        "azurerm_storage_share": "resourceStorageShare",
        "azurerm_storage_share_directory": "resourceStorageShareDirectory",
        "azurerm_storage_share_file": "resourceStorageShareFile",
        "azurerm_storage_sync": "resourceStorageSync",
        "azurerm_storage_sync_cloud_endpoint": "resourceStorageSyncCloudEndpoint",
        "azurerm_storage_sync_group": "resourceStorageSyncGroup",
        "azurerm_storage_table": "resourceStorageTable",
        "azurerm_storage_table_entity": "resourceStorageTableEntity"
      },
      "supported_data_sources": {
        "azurerm_storage_account": "dataSourceStorageAccount",
        "azurerm_storage_account_blob_container_sas": "dataSourceStorageAccountBlobContainerSharedAccessSignature",
        "azurerm_storage_account_sas": "dataSourceStorageAccountSharedAccessSignature",
        "azurerm_storage_blob": "dataSourceStorageBlob",
        "azurerm_storage_container": "dataSourceStorageContainer",
        "azurerm_storage_encryption_scope": "dataSourceStorageEncryptionScope",
        "azurerm_storage_management_policy": "dataSourceStorageManagementPolicy",
        "azurerm_storage_queue": "dataSourceStorageQueue",
        "azurerm_storage_share": "dataSourceStorageShare",
        "azurerm_storage_sync": "dataSourceStorageSync",
        "azurerm_storage_sync_group": "dataSourceStorageSyncGroup",
        "azurerm_storage_table_entity": "dataSourceStorageTableEntity"
      },
      "resources": [
        "AccountQueuePropertiesResource",
        "AccountStaticWebsiteResource",
        "LocalUserResource",
        "StorageContainerImmutabilityPolicyResource",
        "SyncServerEndpointResource"
      ],
      "data_sources": [
        "storageTableDataSource",
        "storageTableEntitiesDataSource",
        "storageContainersDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_storage_account": {
          "create_method": "resourceStorageAccountCreate",
          "read_method": "resourceStorageAccountRead",
          "update_method": "resourceStorageAccountUpdate",
          "delete_method": "resourceStorageAccountDelete"
        },
        "azurerm_storage_account_customer_managed_key": {
          "create_method": "resourceStorageAccountCustomerManagedKeyCreateUpdate",
          "read_method": "resourceStorageAccountCustomerManagedKeyRead",
          "update_method": "resourceStorageAccountCustomerManagedKeyCreateUpdate",
          "delete_method": "resourceStorageAccountCustomerManagedKeyDelete"
        },
        "azurerm_storage_account_network_rules": {
          "create_method": "resourceStorageAccountNetworkRulesCreate",
          "read_method": "resourceStorageAccountNetworkRulesRead",
          "update_method": "resourceStorageAccountNetworkRulesUpdate",
          "delete_method": "resourceStorageAccountNetworkRulesDelete"
        },
        "azurerm_storage_blob": {
          "create_method": "resourceStorageBlobCreate",
          "read_method": "resourceStorageBlobRead",
          "update_method": "resourceStorageBlobUpdate",
          "delete_method": "resourceStorageBlobDelete"
        },
        "azurerm_storage_blob_inventory_policy": {
          "create_method": "resourceStorageBlobInventoryPolicyCreateUpdate",
          "read_method": "resourceStorageBlobInventoryPolicyRead",
          "update_method": "resourceStorageBlobInventoryPolicyCreateUpdate",
          "delete_method": "resourceStorageBlobInventoryPolicyDelete"
        },
        "azurerm_storage_container": {
          "create_method": "resourceStorageContainerCreate",
          "read_method": "resourceStorageContainerRead",
          "update_method": "resourceStorageContainerUpdate",
          "delete_method": "resourceStorageContainerDelete"
        },
        "azurerm_storage_data_lake_gen2_filesystem": {
          "create_method": "resourceStorageDataLakeGen2FileSystemCreate",
          "read_method": "resourceStorageDataLakeGen2FileSystemRead",
          "update_method": "resourceStorageDataLakeGen2FileSystemUpdate",
          "delete_method": "resourceStorageDataLakeGen2FileSystemDelete"
        },
        "azurerm_storage_data_lake_gen2_path": {
          "create_method": "resourceStorageDataLakeGen2PathCreate",
          "read_method": "resourceStorageDataLakeGen2PathRead",
          "update_method": "resourceStorageDataLakeGen2PathUpdate",
          "delete_method": "resourceStorageDataLakeGen2PathDelete"
        },
        "azurerm_storage_encryption_scope": {
          "create_method": "resourceStorageEncryptionScopeCreate",
          "read_method": "resourceStorageEncryptionScopeRead",
          "update_method": "resourceStorageEncryptionScopeUpdate",
          "delete_method": "resourceStorageEncryptionScopeDelete"
        },
        "azurerm_storage_management_policy": {
          "create_method": "resourceStorageManagementPolicyCreateOrUpdate",
          "read_method": "resourceStorageManagementPolicyRead",
          "update_method": "resourceStorageManagementPolicyCreateOrUpdate",
          "delete_method": "resourceStorageManagementPolicyDelete"
        },
        "azurerm_storage_object_replication": {
          "create_method": "resourceStorageObjectReplicationCreate",
          "read_method": "resourceStorageObjectReplicationRead",
          "update_method": "resourceStorageObjectReplicationUpdate",
          "delete_method": "resourceStorageObjectReplicationDelete"
        },
        "azurerm_storage_queue": {
          "create_method": "resourceStorageQueueCreate",
          "read_method": "resourceStorageQueueRead",
          "update_method": "resourceStorageQueueUpdate",
          "delete_method": "resourceStorageQueueDelete"
        },
        "azurerm_storage_share": {
          "create_method": "resourceStorageShareCreate",
          "read_method": "resourceStorageShareRead",
          "update_method": "resourceStorageShareUpdate",
          "delete_method": "resourceStorageShareDelete"
        },
        "azurerm_storage_share_directory": {
          "create_method": "resourceStorageShareDirectoryCreate",
          "read_method": "resourceStorageShareDirectoryRead",
          "update_method": "resourceStorageShareDirectoryUpdate",
          "delete_method": "resourceStorageShareDirectoryDelete"
        },
        "azurerm_storage_share_file": {
          "create_method": "resourceStorageShareFileCreate",
          "read_method": "resourceStorageShareFileRead",
          "update_method": "resourceStorageShareFileUpdate",
          "delete_method": "resourceStorageShareFileDelete"
        },
        "azurerm_storage_sync": {
          "create_method": "resourceStorageSyncCreate",
          "read_method": "resourceStorageSyncRead",
          "update_method": "resourceStorageSyncUpdate",
          "delete_method": "resourceStorageSyncDelete"
        },
        "azurerm_storage_sync_cloud_endpoint": {
          "create_method": "resourceStorageSyncCloudEndpointCreate",
          "read_method": "resourceStorageSyncCloudEndpointRead",
          "delete_method": "resourceStorageSyncCloudEndpointDelete"
        },
        "azurerm_storage_sync_group": {
          "create_method": "resourceStorageSyncGroupCreate",
          "read_method": "resourceStorageSyncGroupRead",
          "delete_method": "resourceStorageSyncGroupDelete"
        },
        "azurerm_storage_table": {
          "create_method": "resourceStorageTableCreate",
          "read_method": "resourceStorageTableRead",
          "update_method": "resourceStorageTableUpdate",
          "delete_method": "resourceStorageTableDelete"
        },
        "azurerm_storage_table_entity": {
          "create_method": "resourceStorageTableEntityCreate",
          "read_method": "resourceStorageTableEntityRead",
          "update_method": "resourceStorageTableEntityUpdate",
          "delete_method": "resourceStorageTableEntityDelete"
        }
      },
      "data_source_methods": {
        "azurerm_storage_account": {
          "read_method": "dataSourceStorageAccountRead"
        },
        "azurerm_storage_account_blob_container_sas": {
          "read_method": "dataSourceStorageContainerSasRead"
        },
        "azurerm_storage_account_sas": {
          "read_method": "dataSourceStorageAccountSasRead"
        },
        "azurerm_storage_blob": {
          "read_method": "dataSourceStorageBlobRead"
        },
        "azurerm_storage_container": {
          "read_method": "dataSourceStorageContainerRead"
        },
        "azurerm_storage_encryption_scope": {
          "read_method": "dataSourceStorageEncryptionScopeRead"
        },
        "azurerm_storage_management_policy": {
          "read_method": "dataSourceStorageManagementPolicyRead"
        },
        "azurerm_storage_queue": {
          "read_method": "dataSourceStorageQueueRead"
        },
        "azurerm_storage_share": {
          "read_method": "dataSourceStorageShareRead"
        },
        "azurerm_storage_sync": {
          "read_method": "dataSourceStorageSyncRead"
        },
        "azurerm_storage_sync_group": {
          "read_method": "dataSourceStorageSyncGroupRead"
        },
        "azurerm_storage_table_entity": {
          "read_method": "dataSourceStorageTableEntityRead"
        }
      },
      "resource_terraform_types": {
        "AccountQueuePropertiesResource": "azurerm_storage_account_queue_properties",
        "AccountStaticWebsiteResource": "azurerm_storage_account_static_website",
        "LocalUserResource": "azurerm_storage_account_local_user",
        "StorageContainerImmutabilityPolicyResource": "azurerm_storage_container_immutability_policy",
        "SyncServerEndpointResource": "azurerm_storage_sync_server_endpoint"
      },
      "data_source_terraform_types": {
        "storageContainersDataSource": "azurerm_storage_containers",
        "storageTableDataSource": "azurerm_storage_table",
        "storageTableEntitiesDataSource": "azurerm_storage_table_entities"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "streamanalytics",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/streamanalytics",
      "supported_resources": {
        "azurerm_stream_analytics_function_javascript_uda": "resourceStreamAnalyticsFunctionUDA",
        "azurerm_stream_analytics_function_javascript_udf": "resourceStreamAnalyticsFunctionUDF",
        "azurerm_stream_analytics_job": "resourceStreamAnalyticsJob",
        "azurerm_stream_analytics_output_blob": "resourceStreamAnalyticsOutputBlob",
        "azurerm_stream_analytics_output_eventhub": "resourceStreamAnalyticsOutputEventHub",
        "azurerm_stream_analytics_output_mssql": "resourceStreamAnalyticsOutputSql",
        "azurerm_stream_analytics_output_servicebus_queue": "resourceStreamAnalyticsOutputServiceBusQueue",
        "azurerm_stream_analytics_output_servicebus_topic": "resourceStreamAnalyticsOutputServiceBusTopic",
        "azurerm_stream_analytics_output_synapse": "resourceStreamAnalyticsOutputSynapse",
        "azurerm_stream_analytics_reference_input_blob": "resourceStreamAnalyticsReferenceInputBlob",
        "azurerm_stream_analytics_reference_input_mssql": "resourceStreamAnalyticsReferenceMsSql",
        "azurerm_stream_analytics_stream_input_blob": "resourceStreamAnalyticsStreamInputBlob",
        "azurerm_stream_analytics_stream_input_eventhub": "resourceStreamAnalyticsStreamInputEventHub",
        "azurerm_stream_analytics_stream_input_iothub": "resourceStreamAnalyticsStreamInputIoTHub"
      },
      "supported_data_sources": {
        "azurerm_stream_analytics_job": "dataSourceStreamAnalyticsJob"
      },
      "resources": [
        "ClusterResource",
        "JobScheduleResource",
        "JobStorageAccountResource",
        "ManagedPrivateEndpointResource",
        "OutputFunctionResource",
        "OutputTableResource",
        "OutputPowerBIResource",
        "OutputCosmosDBResource",
        "StreamInputEventHubV2Resource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_stream_analytics_function_javascript_uda": {
          "create_method": "resourceStreamAnalyticsFunctionUDACreate",
          "read_method": "resourceStreamAnalyticsFunctionUDARead",
          "update_method": "resourceStreamAnalyticsFunctionUDAUpdate",
          "delete_method": "resourceStreamAnalyticsFunctionUDADelete"
        },
        "azurerm_stream_analytics_function_javascript_udf": {
          "create_method": "resourceStreamAnalyticsFunctionUDFCreateUpdate",
          "read_method": "resourceStreamAnalyticsFunctionUDFRead",
          "update_method": "resourceStreamAnalyticsFunctionUDFCreateUpdate",
          "delete_method": "resourceStreamAnalyticsFunctionUDFDelete"
        },
        "azurerm_stream_analytics_job": {
          "create_method": "resourceStreamAnalyticsJobCreate",
          "read_method": "resourceStreamAnalyticsJobRead",
          "update_method": "resourceStreamAnalyticsJobUpdate",
          "delete_method": "resourceStreamAnalyticsJobDelete"
        },
        "azurerm_stream_analytics_output_blob": {
          "create_method": "resourceStreamAnalyticsOutputBlobCreateUpdate",
          "read_method": "resourceStreamAnalyticsOutputBlobRead",
          "update_method": "resourceStreamAnalyticsOutputBlobCreateUpdate",
          "delete_method": "resourceStreamAnalyticsOutputBlobDelete"
        },
        "azurerm_stream_analytics_output_eventhub": {
          "create_method": "resourceStreamAnalyticsOutputEventHubCreateUpdate",
          "read_method": "resourceStreamAnalyticsOutputEventHubRead",
          "update_method": "resourceStreamAnalyticsOutputEventHubCreateUpdate",
          "delete_method": "resourceStreamAnalyticsOutputEventHubDelete"
        },
        "azurerm_stream_analytics_output_mssql": {
          "create_method": "resourceStreamAnalyticsOutputSqlCreateUpdate",
          "read_method": "resourceStreamAnalyticsOutputSqlRead",
          "update_method": "resourceStreamAnalyticsOutputSqlCreateUpdate",
          "delete_method": "resourceStreamAnalyticsOutputSqlDelete"
        },
        "azurerm_stream_analytics_output_servicebus_queue": {
          "create_method": "resourceStreamAnalyticsOutputServiceBusQueueCreateUpdate",
          "read_method": "resourceStreamAnalyticsOutputServiceBusQueueRead",
          "update_method": "resourceStreamAnalyticsOutputServiceBusQueueCreateUpdate",
          "delete_method": "resourceStreamAnalyticsOutputServiceBusQueueDelete"
        },
        "azurerm_stream_analytics_output_servicebus_topic": {
          "create_method": "resourceStreamAnalyticsOutputServiceBusTopicCreateUpdate",
          "read_method": "resourceStreamAnalyticsOutputServiceBusTopicRead",
          "update_method": "resourceStreamAnalyticsOutputServiceBusTopicCreateUpdate",
          "delete_method": "resourceStreamAnalyticsOutputServiceBusTopicDelete"
        },
        "azurerm_stream_analytics_output_synapse": {
          "create_method": "resourceStreamAnalyticsOutputSynapseCreateUpdate",
          "read_method": "resourceStreamAnalyticsOutputSynapseRead",
          "update_method": "resourceStreamAnalyticsOutputSynapseCreateUpdate",
          "delete_method": "resourceStreamAnalyticsOutputSynapseDelete"
        },
        "azurerm_stream_analytics_reference_input_blob": {
          "create_method": "resourceStreamAnalyticsReferenceInputBlobCreate",
          "read_method": "resourceStreamAnalyticsReferenceInputBlobRead",
          "update_method": "resourceStreamAnalyticsReferenceInputBlobUpdate",
          "delete_method": "resourceStreamAnalyticsReferenceInputBlobDelete"
        },
        "azurerm_stream_analytics_reference_input_mssql": {
          "create_method": "resourceStreamAnalyticsReferenceInputMsSqlCreateUpdate",
          "read_method": "resourceStreamAnalyticsReferenceInputMsSqlRead",
          "update_method": "resourceStreamAnalyticsReferenceInputMsSqlCreateUpdate",
          "delete_method": "resourceStreamAnalyticsReferenceInputMsSqlDelete"
        },
        "azurerm_stream_analytics_stream_input_blob": {
          "create_method": "resourceStreamAnalyticsStreamInputBlobCreateUpdate",
          "read_method": "resourceStreamAnalyticsStreamInputBlobRead",
          "update_method": "resourceStreamAnalyticsStreamInputBlobCreateUpdate",
          "delete_method": "resourceStreamAnalyticsStreamInputBlobDelete"
        },
        "azurerm_stream_analytics_stream_input_eventhub": {
          "create_method": "resourceStreamAnalyticsStreamInputEventHubCreateUpdate",
          "read_method": "resourceStreamAnalyticsStreamInputEventHubRead",
          "update_method": "resourceStreamAnalyticsStreamInputEventHubCreateUpdate",
          "delete_method": "resourceStreamAnalyticsStreamInputEventHubDelete"
        },
        "azurerm_stream_analytics_stream_input_iothub": {
          "create_method": "resourceStreamAnalyticsStreamInputIoTHubCreateUpdate",
          "read_method": "resourceStreamAnalyticsStreamInputIoTHubRead",
          "update_method": "resourceStreamAnalyticsStreamInputIoTHubCreateUpdate",
          "delete_method": "resourceStreamAnalyticsStreamInputIoTHubDelete"
        }
      },
      "data_source_methods": {
        "azurerm_stream_analytics_job": {
          "read_method": "dataSourceStreamAnalyticsJobRead"
        }
      },
      "resource_terraform_types": {
        "ClusterResource": "azurerm_stream_analytics_cluster",
        "JobScheduleResource": "azurerm_stream_analytics_job_schedule",
        "JobStorageAccountResource": "azurerm_stream_analytics_job_storage_account",
        "ManagedPrivateEndpointResource": "azurerm_stream_analytics_managed_private_endpoint",
        "OutputCosmosDBResource": "azurerm_stream_analytics_output_cosmosdb",
        "OutputFunctionResource": "azurerm_stream_analytics_output_function",
        "OutputPowerBIResource": "azurerm_stream_analytics_output_powerbi",
        "OutputTableResource": "azurerm_stream_analytics_output_table",
        "StreamInputEventHubV2Resource": "azurerm_stream_analytics_stream_input_eventhub_v2"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "subscription",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/subscription",
      "supported_resources": {
        "azurerm_subscription": "resourceSubscription"
      },
      "supported_data_sources": {
        "azurerm_extended_locations": "dataSourceExtendedLocations",
        "azurerm_subscription": "dataSourceSubscription",
        "azurerm_subscriptions": "dataSourceSubscriptions"
      },
      "resources": [],
      "data_sources": [
        "LocationDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_subscription": {
          "create_method": "resourceSubscriptionCreate",
          "read_method": "resourceSubscriptionRead",
          "update_method": "resourceSubscriptionUpdate",
          "delete_method": "resourceSubscriptionDelete"
        }
      },
      "data_source_methods": {
        "azurerm_extended_locations": {
          "read_method": "dataSourceExtendedLocationsRead"
        },
        "azurerm_subscription": {
          "read_method": "dataSourceSubscriptionRead"
        },
        "azurerm_subscriptions": {
          "read_method": "dataSourceSubscriptionsRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {
        "LocationDataSource": "azurerm_location"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "systemcentervirtualmachinemanager",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/systemcentervirtualmachinemanager",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "SystemCenterVirtualMachineManagerCloudResource",
        "SystemCenterVirtualMachineManagerServerResource",
        "SystemCenterVirtualMachineManagerAvailabilitySetResource",
        "SystemCenterVirtualMachineManagerVirtualMachineInstanceResource",
        "SystemCenterVirtualMachineManagerVirtualNetworkResource",
        "SystemCenterVirtualMachineManagerVirtualMachineTemplateResource",
        "SystemCenterVirtualMachineManagerVirtualMachineInstanceGuestAgentResource"
      ],
      "data_sources": [
        "SystemCenterVirtualMachineManagerInventoryItemsDataSource"
      ],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "SystemCenterVirtualMachineManagerAvailabilitySetResource": "azurerm_system_center_virtual_machine_manager_availability_set",
        "SystemCenterVirtualMachineManagerCloudResource": "azurerm_system_center_virtual_machine_manager_cloud",
        "SystemCenterVirtualMachineManagerServerResource": "azurerm_system_center_virtual_machine_manager_server",
        "SystemCenterVirtualMachineManagerVirtualMachineInstanceGuestAgentResource": "azurerm_system_center_virtual_machine_manager_virtual_machine_instance_guest_agent",
        "SystemCenterVirtualMachineManagerVirtualMachineInstanceResource": "azurerm_system_center_virtual_machine_manager_virtual_machine_instance",
        "SystemCenterVirtualMachineManagerVirtualMachineTemplateResource": "azurerm_system_center_virtual_machine_manager_virtual_machine_template",
        "SystemCenterVirtualMachineManagerVirtualNetworkResource": "azurerm_system_center_virtual_machine_manager_virtual_network"
      },
      "data_source_terraform_types": {
        "SystemCenterVirtualMachineManagerInventoryItemsDataSource": "azurerm_system_center_virtual_machine_manager_inventory_items"
      },
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "synapse",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/synapse",
      "supported_resources": {
        "azurerm_synapse_firewall_rule": "resourceSynapseFirewallRule",
        "azurerm_synapse_integration_runtime_azure": "resourceSynapseIntegrationRuntimeAzure",
        "azurerm_synapse_integration_runtime_self_hosted": "resourceSynapseIntegrationRuntimeSelfHosted",
        "azurerm_synapse_linked_service": "resourceSynapseLinkedService",
        "azurerm_synapse_managed_private_endpoint": "resourceSynapseManagedPrivateEndpoint",
        "azurerm_synapse_private_link_hub": "resourceSynapsePrivateLinkHub",
        "azurerm_synapse_role_assignment": "resourceSynapseRoleAssignment",
        "azurerm_synapse_spark_pool": "resourceSynapseSparkPool",
        "azurerm_synapse_sql_pool": "resourceSynapseSqlPool",
        "azurerm_synapse_sql_pool_extended_auditing_policy": "resourceSynapseSqlPoolExtendedAuditingPolicy",
        "azurerm_synapse_sql_pool_security_alert_policy": "resourceSynapseSqlPoolSecurityAlertPolicy",
        "azurerm_synapse_sql_pool_vulnerability_assessment": "resourceSynapseSqlPoolVulnerabilityAssessment",
        "azurerm_synapse_sql_pool_vulnerability_assessment_baseline": "resourceSynapseSqlPoolVulnerabilityAssessmentBaseline",
        "azurerm_synapse_sql_pool_workload_classifier": "resourceSynapseSQLPoolWorkloadClassifier",
        "azurerm_synapse_sql_pool_workload_group": "resourceSynapseSQLPoolWorkloadGroup",
        "azurerm_synapse_workspace": "resourceSynapseWorkspace",
        "azurerm_synapse_workspace_aad_admin": "resourceSynapseWorkspaceAADAdmin",
        "azurerm_synapse_workspace_extended_auditing_policy": "resourceSynapseWorkspaceExtendedAuditingPolicy",
        "azurerm_synapse_workspace_key": "resourceSynapseWorkspaceKey",
        "azurerm_synapse_workspace_security_alert_policy": "resourceSynapseWorkspaceSecurityAlertPolicy",
        "azurerm_synapse_workspace_sql_aad_admin": "resourceSynapseWorkspaceSqlAADAdmin",
        "azurerm_synapse_workspace_vulnerability_assessment": "resourceSynapseWorkspaceVulnerabilityAssessment"
      },
      "supported_data_sources": {
        "azurerm_synapse_workspace": "dataSourceSynapseWorkspace"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_synapse_firewall_rule": {
          "create_method": "resourceSynapseFirewallRuleCreateUpdate",
          "read_method": "resourceSynapseFirewallRuleRead",
          "update_method": "resourceSynapseFirewallRuleCreateUpdate",
          "delete_method": "resourceSynapseFirewallRuleDelete"
        },
        "azurerm_synapse_integration_runtime_azure": {
          "create_method": "resourceSynapseIntegrationRuntimeAzureCreateUpdate",
          "read_method": "resourceSynapseIntegrationRuntimeAzureRead",
          "update_method": "resourceSynapseIntegrationRuntimeAzureCreateUpdate",
          "delete_method": "resourceSynapseIntegrationRuntimeAzureDelete"
        },
        "azurerm_synapse_integration_runtime_self_hosted": {
          "create_method": "resourceSynapseIntegrationRuntimeSelfHostedCreateUpdate",
          "read_method": "resourceSynapseIntegrationRuntimeSelfHostedRead",
          "update_method": "resourceSynapseIntegrationRuntimeSelfHostedCreateUpdate",
          "delete_method": "resourceSynapseIntegrationRuntimeSelfHostedDelete"
        },
        "azurerm_synapse_linked_service": {
          "create_method": "resourceSynapseLinkedServiceCreateUpdate",
          "read_method": "resourceSynapseLinkedServiceRead",
          "update_method": "resourceSynapseLinkedServiceCreateUpdate",
          "delete_method": "resourceSynapseLinkedServiceDelete"
        },
        "azurerm_synapse_managed_private_endpoint": {
          "create_method": "resourceSynapseManagedPrivateEndpointCreate",
          "read_method": "resourceSynapseManagedPrivateEndpointRead",
          "delete_method": "resourceSynapseManagedPrivateEndpointDelete"
        },
        "azurerm_synapse_private_link_hub": {
          "create_method": "resourceSynapsePrivateLinkHubCreate",
          "read_method": "resourceSynapsePrivateLinkHubRead",
          "update_method": "resourceSynapsePrivateLinkHubUpdate",
          "delete_method": "resourceSynapsePrivateLinkHubDelete"
        },
        "azurerm_synapse_role_assignment": {
          "create_method": "resourceSynapseRoleAssignmentCreate",
          "read_method": "resourceSynapseRoleAssignmentRead",
          "delete_method": "resourceSynapseRoleAssignmentDelete"
        },
        "azurerm_synapse_spark_pool": {
          "create_method": "resourceSynapseSparkPoolCreate",
          "read_method": "resourceSynapseSparkPoolRead",
          "update_method": "resourceSynapseSparkPoolUpdate",
          "delete_method": "resourceSynapseSparkPoolDelete"
        },
        "azurerm_synapse_sql_pool": {
          "create_method": "resourceSynapseSqlPoolCreate",
          "read_method": "resourceSynapseSqlPoolRead",
          "update_method": "resourceSynapseSqlPoolUpdate",
          "delete_method": "resourceSynapseSqlPoolDelete"
        },
        "azurerm_synapse_sql_pool_extended_auditing_policy": {
          "create_method": "resourceSynapseSqlPoolExtendedAuditingPolicyCreateUpdate",
          "read_method": "resourceSynapseSqlPoolExtendedAuditingPolicyRead",
          "update_method": "resourceSynapseSqlPoolExtendedAuditingPolicyCreateUpdate",
          "delete_method": "resourceSynapseSqlPoolExtendedAuditingPolicyDelete"
        },
        "azurerm_synapse_sql_pool_security_alert_policy": {
          "create_method": "resourceSynapseSqlPoolSecurityAlertPolicyCreateUpdate",
          "read_method": "resourceSynapseSqlPoolSecurityAlertPolicyRead",
          "update_method": "resourceSynapseSqlPoolSecurityAlertPolicyCreateUpdate",
          "delete_method": "resourceSynapseSqlPoolSecurityAlertPolicyDelete"
        },
        "azurerm_synapse_sql_pool_vulnerability_assessment": {
          "create_method": "resourceSynapseSqlPoolVulnerabilityAssessmentCreateUpdate",
          "read_method": "resourceSynapseSqlPoolVulnerabilityAssessmentRead",
          "update_method": "resourceSynapseSqlPoolVulnerabilityAssessmentCreateUpdate",
          "delete_method": "resourceSynapseSqlPoolVulnerabilityAssessmentDelete"
        },
        "azurerm_synapse_sql_pool_vulnerability_assessment_baseline": {
          "create_method": "resourceSynapseSqlPoolVulnerabilityAssessmentBaselineCreateUpdate",
          "read_method": "resourceSynapseSqlPoolVulnerabilityAssessmentBaselineRead",
          "update_method": "resourceSynapseSqlPoolVulnerabilityAssessmentBaselineCreateUpdate",
          "delete_method": "resourceSynapseSqlPoolVulnerabilityAssessmentBaselineDelete"
        },
        "azurerm_synapse_sql_pool_workload_classifier": {
          "create_method": "resourceSynapseSQLPoolWorkloadClassifierCreateUpdate",
          "read_method": "resourceSynapseSQLPoolWorkloadClassifierRead",
          "update_method": "resourceSynapseSQLPoolWorkloadClassifierCreateUpdate",
          "delete_method": "resourceSynapseSQLPoolWorkloadClassifierDelete"
        },
        "azurerm_synapse_sql_pool_workload_group": {
          "create_method": "resourceSynapseSQLPoolWorkloadGroupCreateUpdate",
          "read_method": "resourceSynapseSQLPoolWorkloadGroupRead",
          "update_method": "resourceSynapseSQLPoolWorkloadGroupCreateUpdate",
          "delete_method": "resourceSynapseSQLPoolWorkloadGroupDelete"
        },
        "azurerm_synapse_workspace": {
          "create_method": "resourceSynapseWorkspaceCreate",
          "read_method": "resourceSynapseWorkspaceRead",
          "update_method": "resourceSynapseWorkspaceUpdate",
          "delete_method": "resourceSynapseWorkspaceDelete"
        },
        "azurerm_synapse_workspace_aad_admin": {
          "create_method": "resourceSynapseWorkspaceAADAdminCreateUpdate",
          "read_method": "resourceSynapseWorkspaceAADAdminRead",
          "update_method": "resourceSynapseWorkspaceAADAdminCreateUpdate",
          "delete_method": "resourceSynapseWorkspaceAADAdminDelete"
        },
        "azurerm_synapse_workspace_extended_auditing_policy": {
          "create_method": "resourceSynapseWorkspaceExtendedAuditingPolicyCreateUpdate",
          "read_method": "resourceSynapseWorkspaceExtendedAuditingPolicyRead",
          "update_method": "resourceSynapseWorkspaceExtendedAuditingPolicyCreateUpdate",
          "delete_method": "resourceSynapseWorkspaceExtendedAuditingPolicyDelete"
        },
        "azurerm_synapse_workspace_key": {
          "create_method": "resourceSynapseWorkspaceKeysCreateUpdate",
          "read_method": "resourceSynapseWorkspaceKeyRead",
          "update_method": "resourceSynapseWorkspaceKeysCreateUpdate",
          "delete_method": "resourceSynapseWorkspaceKeysDelete"
        },
        "azurerm_synapse_workspace_security_alert_policy": {
          "create_method": "resourceSynapseWorkspaceSecurityAlertPolicyCreateUpdate",
          "read_method": "resourceSynapseWorkspaceSecurityAlertPolicyRead",
          "update_method": "resourceSynapseWorkspaceSecurityAlertPolicyCreateUpdate",
          "delete_method": "resourceSynapseWorkspaceSecurityAlertPolicyDelete"
        },
        "azurerm_synapse_workspace_sql_aad_admin": {
          "create_method": "resourceSynapseWorkspaceSqlAADAdminCreateUpdate",
          "read_method": "resourceSynapseWorkspaceSqlAADAdminRead",
          "update_method": "resourceSynapseWorkspaceSqlAADAdminCreateUpdate",
          "delete_method": "resourceSynapseWorkspaceSqlAADAdminDelete"
        },
        "azurerm_synapse_workspace_vulnerability_assessment": {
          "create_method": "resourceSynapseWorkspaceVulnerabilityAssessmentCreateUpdate",
          "read_method": "resourceSynapseWorkspaceVulnerabilityAssessmentRead",
          "update_method": "resourceSynapseWorkspaceVulnerabilityAssessmentCreateUpdate",
          "delete_method": "resourceSynapseWorkspaceVulnerabilityAssessmentDelete"
        }
      },
      "data_source_methods": {
        "azurerm_synapse_workspace": {
          "read_method": "dataSourceSynapseWorkspaceRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "trafficmanager",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/trafficmanager",
      "supported_resources": {
        "azurerm_traffic_manager_azure_endpoint": "resourceAzureEndpoint",
        "azurerm_traffic_manager_external_endpoint": "resourceExternalEndpoint",
        "azurerm_traffic_manager_nested_endpoint": "resourceNestedEndpoint",
        "azurerm_traffic_manager_profile": "resourceArmTrafficManagerProfile"
      },
      "supported_data_sources": {
        "azurerm_traffic_manager_geographical_location": "dataSourceArmTrafficManagerGeographicalLocation",
        "azurerm_traffic_manager_profile": "dataSourceArmTrafficManagerProfile"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_traffic_manager_azure_endpoint": {
          "create_method": "resourceAzureEndpointCreate",
          "read_method": "resourceAzureEndpointRead",
          "update_method": "resourceAzureEndpointUpdate",
          "delete_method": "resourceAzureEndpointDelete"
        },
        "azurerm_traffic_manager_external_endpoint": {
          "create_method": "resourceExternalEndpointCreate",
          "read_method": "resourceExternalEndpointRead",
          "update_method": "resourceExternalEndpointUpdate",
          "delete_method": "resourceExternalEndpointDelete"
        },
        "azurerm_traffic_manager_nested_endpoint": {
          "create_method": "resourceNestedEndpointCreateUpdate",
          "read_method": "resourceNestedEndpointRead",
          "update_method": "resourceNestedEndpointCreateUpdate",
          "delete_method": "resourceNestedEndpointDelete"
        },
        "azurerm_traffic_manager_profile": {
          "create_method": "resourceArmTrafficManagerProfileCreate",
          "read_method": "resourceArmTrafficManagerProfileRead",
          "update_method": "resourceArmTrafficManagerProfileUpdate",
          "delete_method": "resourceArmTrafficManagerProfileDelete"
        }
      },
      "data_source_methods": {
        "azurerm_traffic_manager_geographical_location": {
          "read_method": "dataSourceArmTrafficManagerGeographicalLocationRead"
        },
        "azurerm_traffic_manager_profile": {
          "read_method": "dataSourceArmTrafficManagerProfileRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "videoindexer",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/videoindexer",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "AccountResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "AccountResource": "azurerm_video_indexer_account"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "vmware",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/vmware",
      "supported_resources": {
        "azurerm_vmware_cluster": "resourceVmwareCluster",
        "azurerm_vmware_express_route_authorization": "resourceVmwareExpressRouteAuthorization",
        "azurerm_vmware_private_cloud": "resourceVmwarePrivateCloud"
      },
      "supported_data_sources": {
        "azurerm_vmware_private_cloud": "dataSourceVmwarePrivateCloud"
      },
      "resources": [
        "NetappFileVolumeAttachmentResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_vmware_cluster": {
          "create_method": "resourceVmwareClusterCreate",
          "read_method": "resourceVmwareClusterRead",
          "update_method": "resourceVmwareClusterUpdate",
          "delete_method": "resourceVmwareClusterDelete"
        },
        "azurerm_vmware_express_route_authorization": {
          "create_method": "resourceVmwareExpressRouteAuthorizationCreate",
          "read_method": "resourceVmwareExpressRouteAuthorizationRead",
          "delete_method": "resourceVmwareExpressRouteAuthorizationDelete"
        },
        "azurerm_vmware_private_cloud": {
          "create_method": "resourceVmwarePrivateCloudCreate",
          "read_method": "resourceVmwarePrivateCloudRead",
          "update_method": "resourceVmwarePrivateCloudUpdate",
          "delete_method": "resourceVmwarePrivateCloudDelete"
        }
      },
      "data_source_methods": {
        "azurerm_vmware_private_cloud": {
          "read_method": "dataSourceVmwarePrivateCloudRead"
        }
      },
      "resource_terraform_types": {
        "NetappFileVolumeAttachmentResource": "azurerm_vmware_netapp_volume_attachment"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "voiceservices",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/voiceservices",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "CommunicationsGatewayResource",
        "CommunicationsGatewayTestLineResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "CommunicationsGatewayResource": "azurerm_voice_services_communications_gateway",
        "CommunicationsGatewayTestLineResource": "azurerm_voice_services_communications_gateway_test_line"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "web",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/web",
      "supported_resources": {
        "azurerm_app_service": "resourceAppService",
        "azurerm_app_service_active_slot": "resourceAppServiceActiveSlot",
        "azurerm_app_service_certificate": "resourceAppServiceCertificate",
        "azurerm_app_service_certificate_binding": "resourceAppServiceCertificateBinding",
        "azurerm_app_service_certificate_order": "resourceAppServiceCertificateOrder",
        "azurerm_app_service_custom_hostname_binding": "resourceAppServiceCustomHostnameBinding",
        "azurerm_app_service_hybrid_connection": "resourceAppServiceHybridConnection",
        "azurerm_app_service_managed_certificate": "resourceAppServiceManagedCertificate",
        "azurerm_app_service_plan": "resourceAppServicePlan",
        "azurerm_app_service_public_certificate": "resourceAppServicePublicCertificate",
        "azurerm_app_service_slot": "resourceAppServiceSlot",
        "azurerm_app_service_slot_custom_hostname_binding": "resourceAppServiceSlotCustomHostnameBinding",
        "azurerm_app_service_slot_virtual_network_swift_connection": "resourceAppServiceSlotVirtualNetworkSwiftConnection",
        "azurerm_app_service_source_control_token": "resourceAppServiceSourceControlToken",
        "azurerm_app_service_virtual_network_swift_connection": "resourceAppServiceVirtualNetworkSwiftConnection",
        "azurerm_function_app": "resourceFunctionApp",
        "azurerm_function_app_slot": "resourceFunctionAppSlot",
        "azurerm_static_site": "resourceStaticSite",
        "azurerm_static_site_custom_domain": "resourceStaticSiteCustomDomain"
      },
      "supported_data_sources": {
        "azurerm_app_service": "dataSourceAppService",
        "azurerm_app_service_certificate": "dataSourceAppServiceCertificate",
        "azurerm_app_service_certificate_order": "dataSourceAppServiceCertificateOrder",
        "azurerm_app_service_plan": "dataSourceAppServicePlan",
        "azurerm_function_app": "dataSourceFunctionApp",
        "azurerm_function_app_host_keys": "dataSourceFunctionAppHostKeys"
      },
      "resources": [],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {
        "azurerm_app_service": {
          "create_method": "resourceAppServiceCreate",
          "read_method": "resourceAppServiceRead",
          "update_method": "resourceAppServiceUpdate",
          "delete_method": "resourceAppServiceDelete"
        },
        "azurerm_app_service_active_slot": {
          "create_method": "resourceAppServiceActiveSlotCreateUpdate",
          "read_method": "resourceAppServiceActiveSlotRead",
          "update_method": "resourceAppServiceActiveSlotCreateUpdate",
          "delete_method": "resourceAppServiceActiveSlotDelete"
        },
        "azurerm_app_service_certificate": {
          "create_method": "resourceAppServiceCertificateCreateUpdate",
          "read_method": "resourceAppServiceCertificateRead",
          "update_method": "resourceAppServiceCertificateCreateUpdate",
          "delete_method": "resourceAppServiceCertificateDelete"
        },
        "azurerm_app_service_certificate_binding": {
          "create_method": "resourceAppServiceCertificateBindingCreate",
          "read_method": "resourceAppServiceCertificateBindingRead",
          "delete_method": "resourceAppServiceCertificateBindingDelete"
        },
        "azurerm_app_service_certificate_order": {
          "create_method": "resourceAppServiceCertificateOrderCreateUpdate",
          "read_method": "resourceAppServiceCertificateOrderRead",
          "update_method": "resourceAppServiceCertificateOrderCreateUpdate",
          "delete_method": "resourceAppServiceCertificateOrderDelete"
        },
        "azurerm_app_service_custom_hostname_binding": {
          "create_method": "resourceAppServiceCustomHostnameBindingCreate",
          "read_method": "resourceAppServiceCustomHostnameBindingRead",
          "delete_method": "resourceAppServiceCustomHostnameBindingDelete"
        },
        "azurerm_app_service_hybrid_connection": {
          "create_method": "resourceAppServiceHybridConnectionCreateUpdate",
          "read_method": "resourceAppServiceHybridConnectionRead",
          "update_method": "resourceAppServiceHybridConnectionCreateUpdate",
          "delete_method": "resourceAppServiceHybridConnectionDelete"
        },
        "azurerm_app_service_managed_certificate": {
          "create_method": "resourceAppServiceManagedCertificateCreateUpdate",
          "read_method": "resourceAppServiceManagedCertificateRead",
          "update_method": "resourceAppServiceManagedCertificateCreateUpdate",
          "delete_method": "resourceAppServiceManagedCertificateDelete"
        },
        "azurerm_app_service_plan": {
          "create_method": "resourceAppServicePlanCreateUpdate",
          "read_method": "resourceAppServicePlanRead",
          "update_method": "resourceAppServicePlanCreateUpdate",
          "delete_method": "resourceAppServicePlanDelete"
        },
        "azurerm_app_service_public_certificate": {
          "create_method": "resourceAppServicePublicCertificateCreate",
          "read_method": "resourceAppServicePublicCertificateRead",
          "delete_method": "resourceAppServicePublicCertificateDelete"
        },
        "azurerm_app_service_slot": {
          "create_method": "resourceAppServiceSlotCreateUpdate",
          "read_method": "resourceAppServiceSlotRead",
          "update_method": "resourceAppServiceSlotCreateUpdate",
          "delete_method": "resourceAppServiceSlotDelete"
        },
        "azurerm_app_service_slot_custom_hostname_binding": {
          "create_method": "resourceAppServiceSlotCustomHostnameBindingCreate",
          "read_method": "resourceAppServiceSlotCustomHostnameBindingRead",
          "delete_method": "resourceAppServiceSlotCustomHostnameBindingDelete"
        },
        "azurerm_app_service_slot_virtual_network_swift_connection": {
          "create_method": "resourceAppServiceSlotVirtualNetworkSwiftConnectionCreateUpdate",
          "read_method": "resourceAppServiceSlotVirtualNetworkSwiftConnectionRead",
          "update_method": "resourceAppServiceSlotVirtualNetworkSwiftConnectionCreateUpdate",
          "delete_method": "resourceAppServiceSlotVirtualNetworkSwiftConnectionDelete"
        },
        "azurerm_app_service_source_control_token": {
          "create_method": "resourceAppServiceSourceControlTokenCreateUpdate",
          "read_method": "resourceAppServiceSourceControlTokenRead",
          "update_method": "resourceAppServiceSourceControlTokenCreateUpdate",
          "delete_method": "resourceAppServiceSourceControlTokenDelete"
        },
        "azurerm_app_service_virtual_network_swift_connection": {
          "create_method": "resourceAppServiceVirtualNetworkSwiftConnectionCreateUpdate",
          "read_method": "resourceAppServiceVirtualNetworkSwiftConnectionRead",
          "update_method": "resourceAppServiceVirtualNetworkSwiftConnectionCreateUpdate",
          "delete_method": "resourceAppServiceVirtualNetworkSwiftConnectionDelete"
        },
        "azurerm_function_app": {
          "create_method": "resourceFunctionAppCreate",
          "read_method": "resourceFunctionAppRead",
          "update_method": "resourceFunctionAppUpdate",
          "delete_method": "resourceFunctionAppDelete"
        },
        "azurerm_function_app_slot": {
          "create_method": "resourceFunctionAppSlotCreate",
          "read_method": "resourceFunctionAppSlotRead",
          "update_method": "resourceFunctionAppSlotUpdate",
          "delete_method": "resourceFunctionAppSlotDelete"
        },
        "azurerm_static_site": {
          "create_method": "resourceStaticSiteCreateOrUpdate",
          "read_method": "resourceStaticSiteRead",
          "update_method": "resourceStaticSiteCreateOrUpdate",
          "delete_method": "resourceStaticSiteDelete"
        },
        "azurerm_static_site_custom_domain": {
          "create_method": "resourceStaticSiteCustomDomainCreate",
          "read_method": "resourceStaticSiteCustomDomainRead",
          "delete_method": "resourceStaticSiteCustomDomainDelete"
        }
      },
      "data_source_methods": {
        "azurerm_app_service": {
          "read_method": "dataSourceAppServiceRead"
        },
        "azurerm_app_service_certificate": {
          "read_method": "dataSourceAppServiceCertificateRead"
        },
        "azurerm_app_service_certificate_order": {
          "read_method": "dataSourceAppServiceCertificateOrderRead"
        },
        "azurerm_app_service_plan": {
          "read_method": "AppServicePlanDataSourceRead"
        },
        "azurerm_function_app": {
          "read_method": "dataSourceFunctionAppRead"
        },
        "azurerm_function_app_host_keys": {
          "read_method": "dataSourceFunctionAppHostKeysRead"
        }
      },
      "resource_terraform_types": {},
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    },
    {
      "service_name": "workloads",
      "package_path": "github.com/hashicorp/terraform-provider-azurerm/internal/services/workloads",
      "supported_resources": {},
      "supported_data_sources": {},
      "resources": [
        "WorkloadsSAPDiscoveryVirtualInstanceResource",
        "WorkloadsSAPSingleNodeVirtualInstanceResource",
        "WorkloadsSAPThreeTierVirtualInstanceResource"
      ],
      "data_sources": [],
      "ephemeral_functions": [],
      "resource_crud_methods": {},
      "data_source_methods": {},
      "resource_terraform_types": {
        "WorkloadsSAPDiscoveryVirtualInstanceResource": "azurerm_workloads_sap_discovery_virtual_instance",
        "WorkloadsSAPSingleNodeVirtualInstanceResource": "azurerm_workloads_sap_single_node_virtual_instance",
        "WorkloadsSAPThreeTierVirtualInstanceResource": "azurerm_workloads_sap_three_tier_virtual_instance"
      },
      "data_source_terraform_types": {},
      "ephemeral_terraform_types": {}
    }
  ],
  "statistics": {
    "service_count": 130,
    "total_data_sources": 388,
    "total_resources": 1097,
    "legacy_resources": 699,
    "modern_resources": 396,
    "ephemeral_resources": 2
  }
}