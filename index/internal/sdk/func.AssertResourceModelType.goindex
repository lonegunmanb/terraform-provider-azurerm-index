package github.com/hashicorp/terraform-provider-azurerm/internal/sdk
import (
	"context"
	"fmt"

	"github.com/hashicorp/go-azure-helpers/framework/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/resourceids"
	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/list"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)
func AssertResourceModelType[T any](model any, response any) *T {
	result, ok := model.(*T)
	if !ok {
		switch v := response.(type) {
		case *resource.CreateResponse:
			v.Diagnostics.AddError("resource had wrong model type", fmt.Sprintf("got %T", model))
		case *resource.ReadResponse:
			v.Diagnostics.AddError("resource had wrong model type", fmt.Sprintf("got %T", model))
		case *resource.UpdateResponse:
			v.Diagnostics.AddError("resource had wrong model type, ", fmt.Sprintf("got %T", model))
		case *resource.DeleteResponse:
			v.Diagnostics.AddError("resource had wrong model type", fmt.Sprintf("got %T", model))

		case *datasource.ReadResponse:
			v.Diagnostics.AddError("data source had wrong model type", fmt.Sprintf("got %T", model))
		}

		return nil
	}

	return result
}
