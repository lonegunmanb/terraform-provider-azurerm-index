package github.com/hashicorp/terraform-provider-azurerm/internal/customermanagedkeys
import (
	"fmt"

	"github.com/hashicorp/go-azure-sdk/sdk/environments"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/parse"
	hsmParse "github.com/hashicorp/terraform-provider-azurerm/internal/services/managedhsm/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func FlattenKeyVaultOrManagedHSMID(id string, hsmEnv environments.Api) (*KeyVaultOrManagedHSMKey, error) {
	if id == "" {
		return nil, nil
	}

	key := &KeyVaultOrManagedHSMKey{}
	var err error
	key.KeyVaultKeyId, err = parse.ParseOptionallyVersionedNestedKeyID(id)
	if err == nil {
		return key, nil
	}

	var domainSuffix *string
	if hsmEnv != nil {
		domainSuffix, _ = hsmEnv.DomainSuffix()
	}
	if key.ManagedHSMKeyId, err = hsmParse.ManagedHSMDataPlaneVersionedKeyID(id, domainSuffix); err == nil {
		return key, nil
	}

	if key.ManagedHSMKeyVersionlessId, err = hsmParse.ManagedHSMDataPlaneVersionlessKeyID(id, domainSuffix); err == nil {
		return key, nil
	}

	return nil, fmt.Errorf("cannot parse given id to key vault key nor managed hsm key: %s", id)
}
