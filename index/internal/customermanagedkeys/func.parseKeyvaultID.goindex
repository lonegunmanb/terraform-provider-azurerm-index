package github.com/hashicorp/terraform-provider-azurerm/internal/customermanagedkeys
import (
	"fmt"

	"github.com/hashicorp/go-azure-sdk/sdk/environments"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/parse"
	hsmParse "github.com/hashicorp/terraform-provider-azurerm/internal/services/managedhsm/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func parseKeyvaultID(keyRaw string, requireVersion VersionType, _ environments.Api) (*parse.NestedItemId, error) {
	keyID, err := parse.ParseOptionallyVersionedNestedKeyID(keyRaw)
	if err != nil {
		return nil, err
	}

	if requireVersion == VersionTypeVersioned && keyID.Version == "" {
		return nil, fmt.Errorf("expected a key vault versioned ID but no version information was found in: %q", keyRaw)
	}

	if requireVersion == VersionTypeVersionless && keyID.Version != "" {
		return nil, fmt.Errorf("expected a key vault versionless ID but version information was found in: %q", keyRaw)
	}

	return keyID, nil
}
