package github.com/hashicorp/terraform-provider-azurerm/internal/provider/framework
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/ephemeral"
	"github.com/hashicorp/terraform-plugin-framework/function"
	"github.com/hashicorp/terraform-plugin-framework/provider"
	"github.com/hashicorp/terraform-plugin-framework/provider/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
	providerfunction "github.com/hashicorp/terraform-provider-azurerm/internal/provider/function"
	"github.com/hashicorp/terraform-provider-azurerm/internal/resourceproviders"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk/frameworkhelpers"

	pluginsdkprovider "github.com/hashicorp/terraform-provider-azurerm/internal/provider"
)
func (p *azureRmFrameworkProvider) DataSources(_ context.Context) []func() datasource.DataSource {
	var output []func() datasource.DataSource

	for _, service := range pluginsdkprovider.SupportedFrameworkServices() {
		output = append(output, service.FrameworkDataSources()...)
	}

	return output
}
