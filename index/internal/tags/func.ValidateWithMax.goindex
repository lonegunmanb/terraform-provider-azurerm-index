package github.com/hashicorp/terraform-provider-azurerm/internal/tags
import (
	"fmt"
	"strings"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)
func ValidateWithMax(max int) schema.SchemaValidateFunc {
	return func(v interface{}, _ string) (warnings []string, errors []error) {
		tagsMap := v.(map[string]interface{})

		if len(tagsMap) > max {
			errors = append(errors, fmt.Errorf("a maximum of %d tags can be applied to each ARM resource", max))
		}

		for k, v := range tagsMap {
			if len(k) > 512 {
				errors = append(errors, fmt.Errorf("the maximum length for a tag key is 512 characters: %q is %d characters", k, len(k)))
			}

			value, err := TagValueToString(v)
			if err != nil {
				errors = append(errors, err)
			} else if len(value) > 256 {
				errors = append(errors, fmt.Errorf("the maximum length for a tag value is 256 characters: the value for %q is %d characters", k, len(value)))
			}
		}

		return warnings, errors
	}
}
