package github.com/hashicorp/terraform-provider-azurerm/internal/services/mobilenetwork
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/datanetwork"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/mobilenetwork"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/service"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/simpolicy"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/slice"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandSliceConfigurationResourceModel(inputList []SliceConfigurationResourceModel) []simpolicy.SliceConfiguration {
	outputList := make([]simpolicy.SliceConfiguration, 0, len(inputList))
	for _, v := range inputList {
		input := v
		output := simpolicy.SliceConfiguration{
			Slice: simpolicy.SliceResourceId{
				Id: input.SliceId,
			},
		}

		output.DataNetworkConfigurations = expandDataNetworkConfigurationResourceModel(input.DataNetworkConfigurations)

		if input.DefaultDataNetworkId != "" {
			output.DefaultDataNetwork = simpolicy.DataNetworkResourceId{
				Id: input.DefaultDataNetworkId,
			}
		}

		outputList = append(outputList, output)
	}

	return outputList
}
