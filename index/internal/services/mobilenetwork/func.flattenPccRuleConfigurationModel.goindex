package github.com/hashicorp/terraform-provider-azurerm/internal/services/mobilenetwork
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/mobilenetwork"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/service"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenPccRuleConfigurationModel(inputList []service.PccRuleConfiguration) []ServiceResourcePccRuleConfigurationModel {
	outputList := make([]ServiceResourcePccRuleConfigurationModel, 0, len(inputList))
	for _, input := range inputList {
		output := ServiceResourcePccRuleConfigurationModel{
			RuleName:       input.RuleName,
			RulePrecedence: input.RulePrecedence,
		}

		output.RuleQosPolicy = flattenPccRuleQosPolicyResourceModel(input.RuleQosPolicy)

		output.ServiceDataFlowTemplates = flattenServiceDataFlowTemplateResourceModel(&input.ServiceDataFlowTemplates)

		if input.TrafficControl != nil {
			output.TrafficControlEnabled = *input.TrafficControl == service.TrafficControlPermissionEnabled
		}

		outputList = append(outputList, output)
	}

	return outputList
}
