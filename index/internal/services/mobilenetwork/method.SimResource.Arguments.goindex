package github.com/hashicorp/terraform-provider-azurerm/internal/services/mobilenetwork
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/attacheddatanetwork"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/sim"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/simgroup"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/simpolicy"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/slice"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func (r SimResource) Arguments() map[string]*pluginsdk.Schema {
	return map[string]*pluginsdk.Schema{
		"name": {
			Type:         pluginsdk.TypeString,
			Required:     true,
			ForceNew:     true,
			ValidateFunc: validation.StringIsNotEmpty,
		},

		"mobile_network_sim_group_id": {
			Type:         pluginsdk.TypeString,
			Required:     true,
			ForceNew:     true,
			ValidateFunc: simgroup.ValidateSimGroupID,
		},

		"authentication_key": {
			Type:      pluginsdk.TypeString,
			Required:  true,
			Sensitive: true,
			ValidateFunc: validation.StringMatch(
				regexp.MustCompile(`^[0-9a-fA-F]{32}$`),
				"The authentication key must be a 32 character hexadecimal string.",
			),
		},

		"integrated_circuit_card_identifier": {
			Type:     pluginsdk.TypeString,
			Required: true,
			ForceNew: true,
			ValidateFunc: validation.StringMatch(
				regexp.MustCompile(`^89[0-9]{17,18}$`),
				`The integrated circuit card ID (ICCID) must be a 19/20 digit number starts with "89".`,
			),
		},

		"international_mobile_subscriber_identity": {
			Type:     pluginsdk.TypeString,
			Required: true,
			ForceNew: true,
			ValidateFunc: validation.StringMatch(
				regexp.MustCompile(`^[0-9]{15}$`),
				"The international mobile subscriber identity (IMSI) must be a 15 digit number.",
			),
		},

		"operator_key_code": {
			Type:      pluginsdk.TypeString,
			Required:  true,
			Sensitive: true,
			ValidateFunc: validation.StringMatch(
				regexp.MustCompile(`^[0-9a-fA-F]{32}$`),
				"The operator key code (OPC) must be a 32 hexadecimal number.",
			),
		},

		"device_type": {
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: validation.StringIsNotEmpty,
		},

		"sim_policy_id": {
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: simpolicy.ValidateSimPolicyID,
		},

		"static_ip_configuration": {
			Type:     pluginsdk.TypeList,
			Optional: true,
			MinItems: 1,
			Elem: &pluginsdk.Resource{
				Schema: map[string]*pluginsdk.Schema{
					"attached_data_network_id": {
						Type:         pluginsdk.TypeString,
						Required:     true,
						ValidateFunc: attacheddatanetwork.ValidateAttachedDataNetworkID,
					},

					"slice_id": {
						Type:         pluginsdk.TypeString,
						Required:     true,
						ValidateFunc: slice.ValidateSliceID,
					},

					"static_ipv4_address": {
						Type:         pluginsdk.TypeString,
						Optional:     true,
						ValidateFunc: validate.IPv4Address,
					},
				},
			},
		},
	}
}
