package github.com/hashicorp/terraform-provider-azurerm/internal/services/mobilenetwork
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/attacheddatanetwork"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/sim"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/simgroup"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/simpolicy"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/slice"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandSimStaticIPPropertiesModel(inputList []SimStaticIPPropertiesModel) *[]sim.SimStaticIPProperties {
	if len(inputList) == 0 {
		// the service does not accept empty array, it has to be nil if it's not specified.
		return nil
	}
	outputList := make([]sim.SimStaticIPProperties, 0)
	for _, v := range inputList {
		input := v
		output := sim.SimStaticIPProperties{
			AttachedDataNetwork: &sim.AttachedDataNetworkResourceId{
				Id: input.AttachedDataNetworkId,
			},
			Slice: &sim.SliceResourceId{
				Id: input.SliceId,
			},
			StaticIP: &sim.SimStaticIPPropertiesStaticIP{
				IPv4Address: &input.StaticIP,
			},
		}
		outputList = append(outputList, output)
	}

	return &outputList
}
