package github.com/hashicorp/terraform-provider-azurerm/internal/services/mobilenetwork
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/attacheddatanetwork"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/packetcoredataplane"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandNaptConfiguration(inputList []NaptConfigurationModel) *attacheddatanetwork.NaptConfiguration {
	if len(inputList) == 0 {
		return nil
	}

	input := inputList[0]
	output := attacheddatanetwork.NaptConfiguration{
		PinholeLimits: &input.PinholeLimits,
	}

	output.Enabled = pointer.To(attacheddatanetwork.NaptEnabledEnabled)

	output.PinholeTimeouts = &attacheddatanetwork.PinholeTimeouts{
		Icmp: &input.IcmpPinholeTimeout,
		Tcp:  &input.TcpPinholeTimeout,
		Udp:  &input.UdpPinholeTimeout,
	}

	output.PortRange = expandPortRange(input.PortRange)

	output.PortReuseHoldTime = &attacheddatanetwork.PortReuseHoldTimes{
		Tcp: &input.TcpReuseMinimumHoldTime,
		Udp: &input.UdpReuseMinimumHoldTime,
	}

	return &output
}
