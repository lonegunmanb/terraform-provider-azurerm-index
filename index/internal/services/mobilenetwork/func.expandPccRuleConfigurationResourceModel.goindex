package github.com/hashicorp/terraform-provider-azurerm/internal/services/mobilenetwork
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/mobilenetwork"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/service"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandPccRuleConfigurationResourceModel(inputList []ServiceResourcePccRuleConfigurationModel) []service.PccRuleConfiguration {
	outputList := make([]service.PccRuleConfiguration, 0, len(inputList))
	for _, v := range inputList {
		input := v
		output := service.PccRuleConfiguration{
			RuleName:       input.RuleName,
			RulePrecedence: input.RulePrecedence,
		}

		trafficControlValue := service.TrafficControlPermissionBlocked
		if input.TrafficControlEnabled {
			trafficControlValue = service.TrafficControlPermissionEnabled
		}
		output.TrafficControl = &trafficControlValue
		output.RuleQosPolicy = expandPccRuleQosPolicyResourceModel(input.RuleQosPolicy)
		output.ServiceDataFlowTemplates = expandServiceDataFlowTemplateResourceModel(input.ServiceDataFlowTemplates)
		outputList = append(outputList, output)
	}

	return outputList
}
