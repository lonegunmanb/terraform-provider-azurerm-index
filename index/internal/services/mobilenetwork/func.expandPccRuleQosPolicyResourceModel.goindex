package github.com/hashicorp/terraform-provider-azurerm/internal/services/mobilenetwork
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/mobilenetwork"
	"github.com/hashicorp/go-azure-sdk/resource-manager/mobilenetwork/2022-11-01/service"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandPccRuleQosPolicyResourceModel(inputList []ServiceResourcePccRuleQosPolicyModel) *service.PccRuleQosPolicy {
	if len(inputList) == 0 {
		return nil
	}

	input := &inputList[0]
	capability := service.PreemptionCapability(input.PreemptionCapability)
	vulnerability := service.PreemptionVulnerability(input.PreemptionVulnerability)
	output := service.PccRuleQosPolicy{
		AllocationAndRetentionPriorityLevel: &input.AllocationAndRetentionPriorityLevel,
		Fiveqi:                              &input.QosIdentifier,
		PreemptionCapability:                &capability,
		PreemptionVulnerability:             &vulnerability,
	}

	output.GuaranteedBitRate = expandBitRateResourceModel(input.GuaranteedBitRate)

	if v := expandBitRateResourceModel(input.MaximumBitRate); v != nil {
		output.MaximumBitRate = *v
	}

	return &output
}
