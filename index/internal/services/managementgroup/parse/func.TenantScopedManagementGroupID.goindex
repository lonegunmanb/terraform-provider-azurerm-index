package github.com/hashicorp/terraform-provider-azurerm/internal/services/managementgroup/parse
import (
	"fmt"
	"regexp"
	"strings"
)
func TenantScopedManagementGroupID(input string) (*ManagementGroupId, error) {
	regex := regexp.MustCompile(`^/tenants/.*-.*-.*-.*-.*/providers/Microsoft\.Management/managementGroups/`)
	if !regex.MatchString(input) {
		return nil, fmt.Errorf("unable to parse Management Group ID for System Topic %q, format should look like '/tenants/<tenantID>/providers/Microsoft.Management/managementGroups/<management_group_name>'", input)
	}

	segments := strings.Split(input, "/")
	if len(segments) != 7 {
		return nil, fmt.Errorf("unable to parse Management Group ID %q: expected id to have seven segments after splitting", input)
	}

	groupID := segments[len(segments)-1]
	if groupID == "" {
		return nil, fmt.Errorf("unable to parse Management Group ID %q: management group name is empty", input)
	}

	tenantID := segments[2]
	if tenantID == "" {
		return nil, fmt.Errorf("unable to parse Management Group ID %q: tenant id is empty", input)
	}

	id := ManagementGroupId{
		Name:     groupID,
		TenantID: tenantID,
	}

	return &id, nil
}
