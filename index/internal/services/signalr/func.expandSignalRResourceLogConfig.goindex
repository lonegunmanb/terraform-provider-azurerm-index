package github.com/hashicorp/terraform-provider-azurerm/internal/services/signalr
import (
	"context"
	"fmt"
	"log"
	"strconv"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/signalr/2023-02-01/signalr"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/signalr/migration"
	signalrValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/signalr/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandSignalRResourceLogConfig(connectivityLogEnabled bool, messagingLogEnabled bool, httpLogEnabled bool) *signalr.ResourceLogConfiguration {
	resourceLogCategories := make([]signalr.ResourceLogCategory, 0)

	messagingLog := "false"
	if messagingLogEnabled {
		messagingLog = "true"
	}
	resourceLogCategories = append(resourceLogCategories, signalr.ResourceLogCategory{
		Name:    utils.String("MessagingLogs"),
		Enabled: utils.String(messagingLog),
	})

	connectivityLog := "false"
	if connectivityLogEnabled {
		connectivityLog = "true"
	}
	resourceLogCategories = append(resourceLogCategories, signalr.ResourceLogCategory{
		Name:    utils.String("ConnectivityLogs"),
		Enabled: utils.String(connectivityLog),
	})

	httpLog := "false"
	if httpLogEnabled {
		httpLog = "true"
	}
	resourceLogCategories = append(resourceLogCategories, signalr.ResourceLogCategory{
		Name:    utils.String("HttpRequestLogs"),
		Enabled: utils.String(httpLog),
	})

	return &signalr.ResourceLogConfiguration{
		Categories: &resourceLogCategories,
	}
}
