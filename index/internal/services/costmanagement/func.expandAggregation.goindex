package github.com/hashicorp/terraform-provider-azurerm/internal/services/costmanagement
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/costmanagement/2023-08-01/views"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandAggregation(input []interface{}) *map[string]views.ReportConfigAggregation {
	outputSorting := map[string]views.ReportConfigAggregation{}
	if len(input) == 0 || input[0] == nil {
		return &outputSorting
	}

	for _, item := range input {
		v := item.(map[string]interface{})
		name := v["name"].(string)
		outputSorting[name] = views.ReportConfigAggregation{
			Name:     v["column_name"].(string),
			Function: views.FunctionTypeSum,
		}
	}

	return &outputSorting
}
