package github.com/hashicorp/terraform-provider-azurerm/internal/services/costmanagement
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/costmanagement/2023-08-01/views"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenAggregation(input *map[string]views.ReportConfigAggregation) []interface{} {
	outputAggregations := []interface{}{}
	if input == nil || len(*input) == 0 {
		return outputAggregations
	}

	for name, item := range *input {
		outputAggregations = append(outputAggregations, map[string]interface{}{
			"name":        name,
			"column_name": item.Name,
		})
	}

	return outputAggregations
}
