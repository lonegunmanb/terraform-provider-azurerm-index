package github.com/hashicorp/terraform-provider-azurerm/internal/services/costmanagement
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/costmanagement/2023-08-01/views"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenDataset(input *views.ReportConfigDataset) []interface{} {
	outputDataset := map[string]interface{}{
		"aggregation": flattenAggregation(input.Aggregation),
		"sorting":     flattenSorting(input.Sorting),
		"grouping":    flattenGrouping(input.Grouping),
	}

	if input.Granularity != nil {
		outputDataset["granularity"] = string(*input.Granularity)
	}

	return []interface{}{outputDataset}
}
