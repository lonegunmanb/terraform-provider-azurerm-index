package github.com/hashicorp/terraform-provider-azurerm/internal/services/voiceservices
import (
	"context"
	"encoding/json"
	"fmt"
	"log"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/voiceservices/2023-04-03/communicationsgateways"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func (r CommunicationsGatewayResource) Read() sdk.ResourceFunc {
	return sdk.ResourceFunc{
		Timeout: 5 * time.Minute,
		Func: func(ctx context.Context, metadata sdk.ResourceMetaData) error {
			client := metadata.Client.VoiceServices.CommunicationsGatewaysClient

			id, err := communicationsgateways.ParseCommunicationsGatewayID(metadata.ResourceData.Id())
			if err != nil {
				return err
			}

			resp, err := client.Get(ctx, *id)
			if err != nil {
				if response.WasNotFound(resp.HttpResponse) {
					return metadata.MarkAsGone(id)
				}

				return fmt.Errorf("retrieving %s: %+v", *id, err)
			}

			model := resp.Model
			if model == nil {
				return fmt.Errorf("retrieving %s: model was nil", id)
			}

			state := CommunicationsGatewayModel{
				Name:              id.CommunicationsGatewayName,
				ResourceGroupName: id.ResourceGroupName,
				Location:          location.Normalize(model.Location),
			}

			if properties := model.Properties; properties != nil {
				state.Connectivity = string(properties.Connectivity)

				codecsValue := ""
				if len(properties.Codecs) > 0 {
					codecsValue = string(properties.Codecs[0])
				}
				state.Codecs = codecsValue

				state.E911Type = properties.E911Type

				state.Platforms = flattenCommunicationsPlatformModel(properties.Platforms)

				state.ServiceLocation = flattenServiceRegionPropertiesModel(&properties.ServiceLocations)

				if properties.AutoGeneratedDomainNameLabelScope != nil {
					state.AutoGeneratedDomainNameLabelScope = *properties.AutoGeneratedDomainNameLabelScope
				}

				if properties.ApiBridge != nil && *properties.ApiBridge != nil {
					apiBridgeValue, err := json.Marshal(*properties.ApiBridge)
					if err != nil {
						return fmt.Errorf("marshalling value for ApiBridge: %+v", err)
					}
					state.ApiBridge = string(apiBridgeValue)
				}

				if properties.EmergencyDialStrings != nil {
					state.EmergencyDialStrings = *properties.EmergencyDialStrings
				}

				onPremMcpEnabled := false
				if properties.OnPremMcpEnabled != nil {
					onPremMcpEnabled = *properties.OnPremMcpEnabled
				}
				state.OnPremMcpEnabled = onPremMcpEnabled

				v := ""
				if properties.TeamsVoicemailPilotNumber != nil {
					v = *properties.TeamsVoicemailPilotNumber
				}
				state.MicrosoftTeamsVoicemailPilotNumber = v
			}

			if model.Tags != nil {
				state.Tags = *model.Tags
			}

			return metadata.Encode(&state)
		},
	}
}
