package github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory
import (
	"log"
	"sort"
	"strings"

	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/datafactory/2018-06-01/datafactory" // nolint: staticcheck
)
func expandDataFactoryDatasetSnowflakeSchema(input []interface{}) interface{} {
	columns := make([]DatasetSnowflakeSchemaColumn, 0)
	for _, column := range input {
		attrs := column.(map[string]interface{})

		datasetSnowflakeSchemaColumn := DatasetSnowflakeSchemaColumn{
			Name: attrs["name"].(string),
		}
		if attrs["type"] != nil {
			datasetSnowflakeSchemaColumn.Type = attrs["type"].(string)
		}

		if attrs["precision"] != nil {
			datasetSnowflakeSchemaColumn.Precision = attrs["precision"].(int)
		}

		if attrs["scale"] != nil {
			datasetSnowflakeSchemaColumn.Scale = attrs["scale"].(int)
		}

		columns = append(columns, datasetSnowflakeSchemaColumn)
	}
	return columns
}
