package github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory
import (
	"log"
	"sort"
	"strings"

	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/datafactory/2018-06-01/datafactory" // nolint: staticcheck
)
func expandDataFactoryDatasetAzureBlobStorageLocation(d *pluginsdk.ResourceData) datafactory.BasicDatasetLocation {
	azureBlobStorageLocations := d.Get("azure_blob_storage_location").([]interface{})
	if len(azureBlobStorageLocations) == 0 || azureBlobStorageLocations[0] == nil {
		return nil
	}

	props := azureBlobStorageLocations[0].(map[string]interface{})

	blobStorageLocation := datafactory.AzureBlobStorageLocation{
		Container:  expandDataFactoryExpressionResultType(props["container"].(string), props["dynamic_container_enabled"].(bool)),
		FolderPath: expandDataFactoryExpressionResultType(props["path"].(string), props["dynamic_path_enabled"].(bool)),
		FileName:   expandDataFactoryExpressionResultType(props["filename"].(string), props["dynamic_filename_enabled"].(bool)),
	}

	return blobStorageLocation
}
