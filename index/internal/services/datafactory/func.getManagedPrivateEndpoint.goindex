package github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory
import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/datafactory/2018-06-01/factories"
	"github.com/hashicorp/go-azure-sdk/resource-manager/datafactory/2018-06-01/managedprivateendpoints"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2023-11-01/privatelinkservices"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory/validate"
	networkValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/network/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func getManagedPrivateEndpoint(ctx context.Context, client *managedprivateendpoints.ManagedPrivateEndpointsClient, subscriptionId, resourceGroupName, factoryName, managedVirtualNetworkName, privateEndpointName string) (*managedprivateendpoints.ManagedPrivateEndpointResource, error) {
	managedVirtualNetworkId := managedprivateendpoints.NewManagedVirtualNetworkID(subscriptionId, resourceGroupName, factoryName, managedVirtualNetworkName)
	iter, err := client.ListByFactoryComplete(ctx, managedVirtualNetworkId)
	if err != nil {
		return nil, err
	}

	for _, item := range iter.Items {
		if item.Name != nil && *item.Name == privateEndpointName {
			return &item, nil
		}
	}
	return nil, nil
}
