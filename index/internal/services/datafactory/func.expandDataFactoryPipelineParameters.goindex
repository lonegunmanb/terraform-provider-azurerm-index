package github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory
import (
	"encoding/json"
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/datafactory/2018-06-01/factories"
	"github.com/hashicorp/go-azure-sdk/resource-manager/datafactory/2018-06-01/pipelines"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandDataFactoryPipelineParameters(input map[string]interface{}) *map[string]pipelines.ParameterSpecification {
	output := make(map[string]pipelines.ParameterSpecification)

	for k, v := range input {
		output[k] = pipelines.ParameterSpecification{
			Type:         pipelines.ParameterTypeString,
			DefaultValue: pointer.To(v),
		}
	}

	return &output
}
