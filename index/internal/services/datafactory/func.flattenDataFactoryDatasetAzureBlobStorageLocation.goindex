package github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory
import (
	"log"
	"sort"
	"strings"

	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/datafactory/2018-06-01/datafactory" // nolint: staticcheck
)
func flattenDataFactoryDatasetAzureBlobStorageLocation(input *datafactory.AzureBlobStorageLocation) []interface{} {
	if input == nil {
		return nil
	}
	result := make(map[string]interface{})

	if input.Container != nil {
		container, dynamicContainerEnabled := flattenDataFactoryExpressionResultType(input.Container)
		result["container"] = container
		result["dynamic_container_enabled"] = dynamicContainerEnabled
	}
	if input.FolderPath != nil {
		path, dynamicPathEnabled := flattenDataFactoryExpressionResultType(input.FolderPath)
		result["path"] = path
		result["dynamic_path_enabled"] = dynamicPathEnabled
	}
	if input.FileName != nil {
		filename, dynamicFilenameEnabled := flattenDataFactoryExpressionResultType(input.FileName)
		result["filename"] = filename
		result["dynamic_filename_enabled"] = dynamicFilenameEnabled
	}

	return []interface{}{result}
}
