package github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory
import (
	"log"
	"sort"
	"strings"

	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/datafactory/2018-06-01/datafactory" // nolint: staticcheck
)
func expandDataFactoryDatasetAzureBlobFSLocation(d *pluginsdk.ResourceData) datafactory.BasicDatasetLocation {
	azureBlobFsLocations := d.Get("azure_blob_fs_location").([]interface{})
	if len(azureBlobFsLocations) == 0 || azureBlobFsLocations[0] == nil {
		return nil
	}

	props := azureBlobFsLocations[0].(map[string]interface{})

	blobFSLocation := datafactory.AzureBlobFSLocation{
		Type:       datafactory.TypeBasicDatasetLocationTypeAzureBlobFSLocation,
		FileSystem: expandDataFactoryExpressionResultType(props["file_system"].(string), props["dynamic_file_system_enabled"].(bool)),
		FolderPath: expandDataFactoryExpressionResultType(props["path"].(string), props["dynamic_path_enabled"].(bool)),
		FileName:   expandDataFactoryExpressionResultType(props["filename"].(string), props["dynamic_filename_enabled"].(bool)),
	}

	return blobFSLocation
}
