package github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory
import (
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/datafactory/2018-06-01/factories"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory/parse"
	sqlValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/datafactory/2018-06-01/datafactory" // nolint: staticcheck
)
func flattenDataFactoryIntegrationRuntimeAzureSsisKeyVaultSecretReference(input *datafactory.AzureKeyVaultSecretReference) []interface{} {
	if input == nil {
		return []interface{}{}
	}
	var linkedServiceName, secretName, secretVersion string
	var parameters map[string]interface{}
	if input.SecretName != nil {
		if v, ok := input.SecretName.(string); ok {
			secretName = v
		}
	}
	if input.SecretVersion != nil {
		if v, ok := input.SecretVersion.(string); ok {
			secretVersion = v
		}
	}
	if input.Store != nil {
		if input.Store.ReferenceName != nil {
			linkedServiceName = *input.Store.ReferenceName
		}
		if input.Store.Parameters != nil {
			parameters = input.Store.Parameters
		}
	}
	return []interface{}{
		map[string]interface{}{
			"linked_service_name": linkedServiceName,
			"parameters":          parameters,
			"secret_name":         secretName,
			"secret_version":      secretVersion,
		},
	}
}
