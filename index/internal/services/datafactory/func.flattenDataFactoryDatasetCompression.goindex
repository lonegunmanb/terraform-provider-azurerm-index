package github.com/hashicorp/terraform-provider-azurerm/internal/services/datafactory
import (
	"log"
	"sort"
	"strings"

	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/datafactory/2018-06-01/datafactory" // nolint: staticcheck
)
func flattenDataFactoryDatasetCompression(input *datafactory.DatasetCompression) []interface{} {
	if input == nil {
		return []interface{}{}
	}

	// the Azure API returns these in a different case to what we're expecting, so we need to convert these
	compressionTypes := []string{
		TypeBasicDatasetCompressionTypeBZip2,
		TypeBasicDatasetCompressionTypeDeflate,
		TypeBasicDatasetCompressionTypeGZip,
		TypeBasicDatasetCompressionTypeTar,
		TypeBasicDatasetCompressionTypeTarGZip,
		TypeBasicDatasetCompressionTypeZipDeflate,
	}

	compressionType := ""
	if t, ok := input.Type.(string); ok {
		for _, v := range compressionTypes {
			if strings.EqualFold(v, t) {
				compressionType = v
			}
		}
	}

	level := ""
	if v, ok := input.Level.(string); ok {
		level = v
	}

	return []interface{}{
		map[string]interface{}{
			"type":  compressionType,
			"level": level,
		},
	}
}
