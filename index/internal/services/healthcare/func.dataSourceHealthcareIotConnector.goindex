package github.com/hashicorp/terraform-provider-azurerm/internal/services/healthcare
import (
	"encoding/json"
	"fmt"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-sdk/resource-manager/healthcareapis/2022-12-01/iotconnectors"
	"github.com/hashicorp/go-azure-sdk/resource-manager/healthcareapis/2024-03-31/workspaces"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/healthcare/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func dataSourceHealthcareIotConnector() *pluginsdk.Resource {
	return &pluginsdk.Resource{
		Read: dataSourceHealthcareIotConnectorRead,

		Timeouts: &pluginsdk.ResourceTimeout{
			Read: pluginsdk.DefaultTimeout(5 * time.Minute),
		},

		Schema: map[string]*pluginsdk.Schema{
			"name": {
				Type:         pluginsdk.TypeString,
				Required:     true,
				ValidateFunc: validate.MedTechServiceName(),
			},

			"workspace_id": {
				Type:         pluginsdk.TypeString,
				Required:     true,
				ValidateFunc: workspaces.ValidateWorkspaceID,
			},

			"identity": commonschema.SystemOrUserAssignedIdentityComputed(),

			"eventhub_namespace_name": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"eventhub_name": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"eventhub_consumer_group_name": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"device_mapping_json": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},
		},
	}
}
