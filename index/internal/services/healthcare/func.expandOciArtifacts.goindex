package github.com/hashicorp/terraform-provider-azurerm/internal/services/healthcare
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/healthcareapis/2022-12-01/fhirservices"
	"github.com/hashicorp/go-azure-sdk/resource-manager/healthcareapis/2024-03-31/workspaces"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/healthcare/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/healthcare/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandOciArtifacts(input []interface{}) *[]fhirservices.ServiceOciArtifactEntry {
	output := make([]fhirservices.ServiceOciArtifactEntry, 0)

	for _, artifactSet := range input {
		artifactRaw := artifactSet.(map[string]interface{})

		loginServer := artifactRaw["login_server"].(string)
		artifact := fhirservices.ServiceOciArtifactEntry{
			LoginServer: &loginServer,
			ImageName:   nil,
			Digest:      nil,
		}
		if image := artifactRaw["image_name"].(string); image != "" {
			artifact.ImageName = &image
		}
		if digest := artifactRaw["digest"].(string); digest != "" {
			artifact.Digest = &digest
		}

		output = append(output, artifact)
	}

	return &output
}
