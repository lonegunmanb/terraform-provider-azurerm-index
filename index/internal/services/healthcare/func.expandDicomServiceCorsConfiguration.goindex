package github.com/hashicorp/terraform-provider-azurerm/internal/services/healthcare
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/healthcareapis/2024-03-31/dicomservices"
	"github.com/hashicorp/go-azure-sdk/resource-manager/healthcareapis/2024-03-31/workspaces"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/healthcare/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/healthcare/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandDicomServiceCorsConfiguration(inputList []interface{}) *dicomservices.CorsConfiguration {
	if len(inputList) == 0 {
		return nil
	}

	input := inputList[0].(map[string]interface{})
	output := dicomservices.CorsConfiguration{}

	if v, ok := input["allowed_origins"]; ok {
		output.Origins = utils.ExpandStringSlice(v.([]interface{}))
	}

	if v, ok := input["allowed_headers"]; ok {
		output.Headers = utils.ExpandStringSlice(v.([]interface{}))
	}

	if v, ok := input["allowed_methods"]; ok {
		output.Methods = utils.ExpandStringSlice(v.([]interface{}))
	}

	if v, ok := input["max_age_in_seconds"]; ok {
		output.MaxAge = pointer.To(int64(v.(int)))
	}

	if v, ok := input["allow_credentials"]; ok {
		output.AllowCredentials = pointer.To(v.(bool))
	}

	return &output
}
