package github.com/hashicorp/terraform-provider-azurerm/internal/services/maps
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/maps/2023-06-01/accounts"
	"github.com/hashicorp/go-azure-sdk/sdk/client/pollers"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/maps/custompollers"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/maps/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandDataStore(input []interface{}) (*[]accounts.LinkedResource, error) {
	if len(input) == 0 {
		return nil, nil
	}

	linkedResources := make([]accounts.LinkedResource, 0)

	for _, i := range input {
		dataStore := i.(map[string]interface{})

		storageAccountId, err := commonids.ParseStorageAccountID(dataStore["storage_account_id"].(string))
		if err != nil {
			return nil, err
		}

		linkedResources = append(linkedResources, accounts.LinkedResource{
			Id:         storageAccountId.ID(),
			UniqueName: dataStore["unique_name"].(string),
		})
	}

	return &linkedResources, nil
}
