package github.com/hashicorp/terraform-provider-azurerm/internal/services/servicebus
import (
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/servicebus/2024-01-01/subscriptions"
	"github.com/hashicorp/go-azure-sdk/resource-manager/servicebus/2024-01-01/topics"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/servicebus/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/servicebus/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenServiceBusNamespaceClientScopedSubscription(clientScopedSubsProps *subscriptions.SBClientAffineProperties) []interface{} {
	if clientScopedSubsProps == nil {
		return []interface{}{}
	}

	var clientId string
	var isShareable, isDurable bool

	if clientScopedSubsProps.ClientId != nil {
		clientId = *clientScopedSubsProps.ClientId
	}

	if clientScopedSubsProps.IsShared != nil {
		isShareable = *clientScopedSubsProps.IsShared
	}

	if clientScopedSubsProps.IsDurable != nil {
		isDurable = *clientScopedSubsProps.IsDurable
	}

	return []interface{}{
		map[string]interface{}{
			"client_id": clientId,
			"is_client_scoped_subscription_shareable": isShareable,
			"is_client_scoped_subscription_durable":   isDurable,
		},
	}
}
