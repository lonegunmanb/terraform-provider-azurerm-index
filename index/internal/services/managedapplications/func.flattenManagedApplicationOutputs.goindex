package github.com/hashicorp/terraform-provider-azurerm/internal/services/managedapplications
import (
	"bytes"
	"encoding/json"
	"fmt"
	"log"
	"strconv"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/managedapplications/2021-07-01/applicationdefinitions"
	"github.com/hashicorp/go-azure-sdk/resource-manager/managedapplications/2021-07-01/applications"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/managedapplications/validate"
	resourcesParse "github.com/hashicorp/terraform-provider-azurerm/internal/services/resource/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func flattenManagedApplicationOutputs(input *interface{}) (map[string]interface{}, error) {
	results := make(map[string]interface{})
	if input == nil {
		return results, nil
	}

	attrs := *input
	if _, ok := attrs.(map[string]interface{}); ok {
		for k, val := range attrs.(map[string]interface{}) {
			mapVal, ok := val.(map[string]interface{})
			if !ok {
				return nil, fmt.Errorf("unexpected managed application output type: %+v", mapVal)
			}
			if mapVal != nil {
				v, ok := mapVal["value"]
				if !ok {
					return nil, fmt.Errorf("missing key 'value' in output map %+v", mapVal)
				}

				value, err := extractParameterOrOutputValue(v)
				if err != nil {
					return nil, fmt.Errorf("extracting outputs: %+v", err)
				}
				results[k] = value
			}
		}
	}

	return results, nil
}
