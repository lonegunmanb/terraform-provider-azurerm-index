package github.com/hashicorp/terraform-provider-azurerm/internal/services/managedapplications
import (
	"bytes"
	"encoding/json"
	"fmt"
	"log"
	"strconv"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/managedapplications/2021-07-01/applicationdefinitions"
	"github.com/hashicorp/go-azure-sdk/resource-manager/managedapplications/2021-07-01/applications"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/managedapplications/validate"
	resourcesParse "github.com/hashicorp/terraform-provider-azurerm/internal/services/resource/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func extractParameterOrOutputValue(v interface{}) (string, error) {
	switch t := v.(type) {
	case bool:
		return strconv.FormatBool(v.(bool)), nil
	case float64:
		// use precision 0 since this comes from an int
		return fmt.Sprintf("%.f", v.(float64)), nil
	case string:
		return v.(string), nil
	case map[string]interface{}:
		return compactParameterOrOutputValue(v)
	case []interface{}:
		return compactParameterOrOutputValue(v)
	default:
		return "", fmt.Errorf("unexpected type %T", t)
	}
}
