package github.com/hashicorp/terraform-provider-azurerm/internal/services/batch
import (
	"encoding/json"
	"errors"
	"fmt"
	"log"
	"strconv"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/batch/2024-07-01/pool"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandBatchPoolAzureFileShareConfiguration(list []interface{}) (*pool.AzureFileShareConfiguration, interface{}) {
	if len(list) == 0 || list[0] == nil {
		return nil, fmt.Errorf("azure_file_share is empty")
	}

	configMap := list[0].(map[string]interface{})
	result := pool.AzureFileShareConfiguration{
		AccountName:       configMap["account_name"].(string),
		AccountKey:        configMap["account_key"].(string),
		AzureFileURL:      configMap["azure_file_url"].(string),
		RelativeMountPath: configMap["relative_mount_path"].(string),
	}

	if mountOptions, ok := configMap["mount_options"]; ok {
		result.MountOptions = utils.String(mountOptions.(string))
	}

	return &result, nil
}
