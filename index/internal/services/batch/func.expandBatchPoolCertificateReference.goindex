package github.com/hashicorp/terraform-provider-azurerm/internal/services/batch
import (
	"encoding/json"
	"errors"
	"fmt"
	"log"
	"strconv"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/batch/2024-07-01/pool"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandBatchPoolCertificateReference(ref map[string]interface{}) (*pool.CertificateReference, error) {
	if len(ref) == 0 {
		return nil, errors.New("storage image reference should be defined")
	}

	id := ref["id"].(string)
	storeLocation := ref["store_location"].(string)
	storeName := ref["store_name"].(string)
	visibilityRefs := ref["visibility"].(*pluginsdk.Set)
	var visibility []pool.CertificateVisibility
	if visibilityRefs != nil {
		for _, visibilityRef := range visibilityRefs.List() {
			visibility = append(visibility, pool.CertificateVisibility(visibilityRef.(string)))
		}
	}

	certificateReference := &pool.CertificateReference{
		Id:            id,
		StoreLocation: pointer.To(pool.CertificateStoreLocation(storeLocation)),
		StoreName:     &storeName,
		Visibility:    &visibility,
	}
	return certificateReference, nil
}
