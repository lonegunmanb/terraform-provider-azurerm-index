package github.com/hashicorp/terraform-provider-azurerm/internal/services/batch
import (
	"encoding/json"
	"fmt"
	"log"
	"strconv"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/batch/2024-07-01/pool"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandBatchPoolContainerRegistry(ref map[string]interface{}) (*pool.ContainerRegistry, error) {
	if len(ref) == 0 {
		return nil, fmt.Errorf("container registry reference should be defined")
	}

	containerRegistry := pool.ContainerRegistry{}

	if v := ref["registry_server"]; v != nil && v != "" {
		containerRegistry.RegistryServer = pointer.To(v.(string))
	}
	if v := ref["user_name"]; v != nil && v != "" {
		containerRegistry.Username = pointer.To(v.(string))
	}
	if v := ref["password"]; v != nil && v != "" {
		containerRegistry.Password = pointer.To(v.(string))
	}
	if v := ref["user_assigned_identity_id"]; v != nil && v != "" {
		containerRegistry.IdentityReference = &pool.ComputeNodeIdentityReference{
			ResourceId: pointer.To(v.(string)),
		}
	}

	return &containerRegistry, nil
}
