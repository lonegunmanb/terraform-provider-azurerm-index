package github.com/hashicorp/terraform-provider-azurerm/internal/services/batch
import (
	"encoding/json"
	"errors"
	"fmt"
	"log"
	"strconv"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/batch/2024-07-01/pool"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func ExpandBatchPoolTaskSchedulingPolicy(d *pluginsdk.ResourceData) (*pool.TaskSchedulingPolicy, error) {
	var result pool.TaskSchedulingPolicy

	if taskSchedulingPolicyString, ok := d.GetOk("task_scheduling_policy"); ok {
		taskSchedulingPolicy := taskSchedulingPolicyString.([]interface{})
		if len(taskSchedulingPolicy) > 0 {
			item := taskSchedulingPolicy[0].(map[string]interface{})
			result.NodeFillType = pool.ComputeNodeFillType(item["node_fill_type"].(string))
		}
		return &result, nil
	}
	return nil, fmt.Errorf("task_scheduling_policy either is empty or contains parsing errors")
}
