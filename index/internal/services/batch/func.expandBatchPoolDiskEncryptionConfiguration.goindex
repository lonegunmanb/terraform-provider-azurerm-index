package github.com/hashicorp/terraform-provider-azurerm/internal/services/batch
import (
	"encoding/json"
	"fmt"
	"log"
	"strconv"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/batch/2024-07-01/pool"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandBatchPoolDiskEncryptionConfiguration(list []interface{}) (*pool.DiskEncryptionConfiguration, error) {
	if len(list) == 0 || list[0] == nil {
		return nil, nil
	}
	var result pool.DiskEncryptionConfiguration

	var targetList []pool.DiskEncryptionTarget

	for _, tempItem := range list {
		item := tempItem.(map[string]interface{})
		if dataDiskEncryptionTarget, ok := item["disk_encryption_target"]; ok {
			targetList = append(targetList, pool.DiskEncryptionTarget(dataDiskEncryptionTarget.(string)))
		} else {
			return nil, fmt.Errorf("disk_encryption_target either is empty or contains parsing errors")
		}
	}

	result.Targets = &targetList
	return &result, nil
}
