package github.com/hashicorp/terraform-provider-azurerm/internal/services/batch
import (
	"encoding/json"
	"errors"
	"fmt"
	"log"
	"strconv"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/batch/2024-07-01/pool"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func ExpandBatchPoolMountConfigurations(d *pluginsdk.ResourceData) (*[]pool.MountConfiguration, error) {
	var result []pool.MountConfiguration

	if mountConfigs, ok := d.GetOk("mount"); ok {
		mountConfigList := mountConfigs.([]interface{})
		for _, tempItem := range mountConfigList {
			item := tempItem.(map[string]interface{})
			result = append(result, expandBatchPoolMountConfiguration(item))
		}
		return &result, nil
	}

	return nil, fmt.Errorf("mount either is empty or contains parsing errors")
}
