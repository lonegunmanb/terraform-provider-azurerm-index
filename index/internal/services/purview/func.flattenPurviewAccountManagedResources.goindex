package github.com/hashicorp/terraform-provider-azurerm/internal/services/purview
import (
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/resourcegroups"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/purview/2021-07-01/account"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenPurviewAccountManagedResources(managedResources *account.ManagedResources) interface{} {
	if managedResources == nil {
		return make([]interface{}, 0)
	}

	resourceGroup := ""
	if managedResources.ResourceGroup != nil {
		resourceGroup = *managedResources.ResourceGroup
	}
	storageAccount := ""
	if managedResources.StorageAccount != nil {
		storageAccount = *managedResources.StorageAccount
	}
	eventHubNamespace := ""
	if managedResources.EventHubNamespace != nil {
		eventHubNamespace = *managedResources.EventHubNamespace
	}
	return []interface{}{
		map[string]interface{}{
			"resource_group_id":      resourceGroup,
			"storage_account_id":     storageAccount,
			"event_hub_namespace_id": eventHubNamespace,
		},
	}
}
