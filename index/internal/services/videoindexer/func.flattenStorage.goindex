package github.com/hashicorp/terraform-provider-azurerm/internal/services/videoindexer
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/videoindexer/2025-04-01/accounts"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/appservice/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenStorage(input *accounts.StorageServicesForPutRequest) ([]StorageModel, error) {
	if input == nil {
		return []StorageModel{}, nil
	}

	storage := StorageModel{}
	if v := pointer.From(input.ResourceId); v != "" {
		id, err := commonids.ParseStorageAccountID(v)
		if err != nil {
			return []StorageModel{}, err
		}
		storage.StorageAccountId = id.ID()
	}

	if v := pointer.From(input.UserAssignedIdentity); v != "" {
		id, err := commonids.ParseUserAssignedIdentityID(v)
		if err != nil {
			return []StorageModel{}, err
		}
		storage.UserAssignedIdentityId = id.ID()
	}

	return []StorageModel{storage}, nil
}
