package github.com/hashicorp/terraform-provider-azurerm/internal/services/recoveryservices/azuresdkhacks
import (
	"context"
	"fmt"
	"net/http"
	"net/url"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	vmwaremachines "github.com/hashicorp/go-azure-sdk/resource-manager/migrate/2020-01-01/machines"
	"github.com/hashicorp/go-azure-sdk/sdk/client"
	"github.com/hashicorp/go-azure-sdk/sdk/client/resourcemanager"
)
func wrapExecutePaged(ctx context.Context, req *client.Request) (result vmwaremachines.GetAllMachinesInSiteOperationResponse, err error) {
	resp, err := req.ExecutePaged(ctx)
	if resp != nil {
		result.OData = resp.OData
		result.HttpResponse = resp.Response
	}
	if err != nil {
		return
	}

	var values Values

	if err = resp.Unmarshal(&values); err != nil {
		return
	}
	result.Model = values.Values

	if values.NextLink != nil {
		nextReq := req
		u, err := url.Parse(*values.NextLink)
		if err != nil {
			return result, err
		}
		nextReq.URL = u
		nextResp, err := wrapExecutePaged(ctx, nextReq)
		if err != nil {
			return result, err
		}
		if nextResp.Model != nil {
			result.Model = pointer.To(append(*result.Model, *nextResp.Model...))
		}
	}

	return
}
