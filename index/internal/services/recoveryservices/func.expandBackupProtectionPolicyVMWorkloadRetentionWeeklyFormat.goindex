package github.com/hashicorp/terraform-provider-azurerm/internal/services/recoveryservices
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/Azure/go-autorest/autorest/date"
	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/recoveryservicesbackup/2024-10-01/protectionpolicies"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/recoveryservices/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/set"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandBackupProtectionPolicyVMWorkloadRetentionWeeklyFormat(weekdays, weeks []string) *protectionpolicies.WeeklyRetentionFormat {
	if len(weekdays) == 0 && len(weeks) == 0 {
		return nil
	}

	weekly := protectionpolicies.WeeklyRetentionFormat{}

	if len(weekdays) > 0 {
		weekdaysBlock := make([]protectionpolicies.DayOfWeek, 0)
		for _, day := range weekdays {
			weekdaysBlock = append(weekdaysBlock, protectionpolicies.DayOfWeek(day))
		}
		weekly.DaysOfTheWeek = &weekdaysBlock
	}

	if len(weeks) > 0 {
		weeksBlock := make([]protectionpolicies.WeekOfMonth, 0)
		for _, week := range weeks {
			weeksBlock = append(weeksBlock, protectionpolicies.WeekOfMonth(week))
		}
		weekly.WeeksOfTheMonth = &weeksBlock
	}

	return &weekly
}
