package github.com/hashicorp/terraform-provider-azurerm/internal/services/recoveryservices
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/recoveryservicessiterecovery/2024-04-01/replicationrecoveryplans"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenDataSourceRecoveryGroups(input []replicationrecoveryplans.RecoveryPlanGroup) []RecoveryGroupDataSourceModel {
	output := make([]RecoveryGroupDataSourceModel, 0)
	for _, groupItem := range input {
		recoveryGroupOutput := RecoveryGroupDataSourceModel{}
		recoveryGroupOutput.GroupType = string(groupItem.GroupType)
		if groupItem.ReplicationProtectedItems != nil {
			recoveryGroupOutput.ReplicatedProtectedItems = flattenRecoveryPlanProtectedItems(groupItem.ReplicationProtectedItems)
		}
		if groupItem.StartGroupActions != nil {
			recoveryGroupOutput.PreAction = flattenDataSourceRecoveryPlanActions(groupItem.StartGroupActions)
		}
		if groupItem.EndGroupActions != nil {
			recoveryGroupOutput.PostAction = flattenDataSourceRecoveryPlanActions(groupItem.EndGroupActions)
		}
		output = append(output, recoveryGroupOutput)
	}
	return output
}
