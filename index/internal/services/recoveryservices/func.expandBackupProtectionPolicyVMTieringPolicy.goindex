package github.com/hashicorp/terraform-provider-azurerm/internal/services/recoveryservices
import (
	"context"
	"fmt"
	"log"
	"regexp"
	"time"

	"github.com/Azure/go-autorest/autorest/date"
	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/recoveryservicesbackup/2024-10-01/protectionpolicies"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/recoveryservices/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/set"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandBackupProtectionPolicyVMTieringPolicy(input []interface{}) *map[string]protectionpolicies.TieringPolicy {
	result := make(map[string]protectionpolicies.TieringPolicy)
	if len(input) == 0 {
		result["ArchivedRP"] = protectionpolicies.TieringPolicy{
			TieringMode:  pointer.To(protectionpolicies.TieringModeDoNotTier),
			DurationType: pointer.To(protectionpolicies.RetentionDurationTypeInvalid),
			Duration:     pointer.To(int64(0)),
		}

		return &result
	}

	tieringPolicy := input[0].(map[string]interface{})
	archivedRP := tieringPolicy["archived_restore_point"].([]interface{})
	result["ArchivedRP"] = expandBackupProtectionPolicyVMArchivedRP(archivedRP)

	return &result
}
