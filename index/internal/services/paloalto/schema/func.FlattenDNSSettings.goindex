package github.com/hashicorp/terraform-provider-azurerm/internal/services/paloalto/schema
import (
	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/paloaltonetworks/2025-05-23/firewalls"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func FlattenDNSSettings(input firewalls.DNSSettings) []DNSSettings {
	result := DNSSettings{}
	if pointer.From(input.EnableDnsProxy) == firewalls.DNSProxyDISABLED {
		return []DNSSettings{}
	}

	useAzureDNS := pointer.From(input.EnabledDnsType) == firewalls.EnabledDNSTypeAZURE

	if !useAzureDNS {
		dnsServers := make([]string, 0)
		for _, v := range pointer.From(input.DnsServers) {
			dnsServers = append(dnsServers, pointer.From(v.Address))
		}
		result.DnsServers = dnsServers
	} else {
		dnsServers := make([]string, 0)
		for _, v := range pointer.From(input.DnsServers) {
			dnsServers = append(dnsServers, pointer.From(v.Address))
		}
		result.AzureDNSServers = dnsServers
	}

	result.AzureDNS = useAzureDNS

	return []DNSSettings{result}
}
