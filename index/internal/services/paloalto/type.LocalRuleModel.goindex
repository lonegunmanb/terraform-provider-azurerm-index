package github.com/hashicorp/terraform-provider-azurerm/internal/services/paloalto
import (
	"context"
	"fmt"
	"strconv"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	certificates "github.com/hashicorp/go-azure-sdk/resource-manager/paloaltonetworks/2022-08-29/certificateobjectlocalrulestack"
	"github.com/hashicorp/go-azure-sdk/resource-manager/paloaltonetworks/2022-08-29/localrules"
	"github.com/hashicorp/go-azure-sdk/resource-manager/paloaltonetworks/2022-08-29/localrulestacks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/paloalto/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/paloalto/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
type LocalRuleModel struct {
	Name        string `tfschema:"name"`
	RuleStackID string `tfschema:"rulestack_id"`
	Priority    int64  `tfschema:"priority"`

	Action                  string                 `tfschema:"action"`
	Applications            []string               `tfschema:"applications"`
	AuditComment            string                 `tfschema:"audit_comment"`
	Category                []schema.Category      `tfschema:"category"`
	DecryptionRuleType      string                 `tfschema:"decryption_rule_type"`
	Description             string                 `tfschema:"description"`
	Destination             []schema.Destination   `tfschema:"destination"`
	LoggingEnabled          bool                   `tfschema:"logging_enabled"`
	InspectionCertificateID string                 `tfschema:"inspection_certificate_id"` // This is the name of a Certificate resource belonging to the SAME LocalRuleStack as this rule
	NegateDestination       bool                   `tfschema:"negate_destination"`
	NegateSource            bool                   `tfschema:"negate_source"`
	Protocol                string                 `tfschema:"protocol"`
	ProtocolPorts           []string               `tfschema:"protocol_ports"`
	RuleEnabled             bool                   `tfschema:"enabled"`
	Source                  []schema.Source        `tfschema:"source"`
	Tags                    map[string]interface{} `tfschema:"tags"`
}
