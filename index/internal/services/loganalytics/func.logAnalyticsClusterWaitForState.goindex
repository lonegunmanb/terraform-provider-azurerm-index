package github.com/hashicorp/terraform-provider-azurerm/internal/services/loganalytics
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2022-10-01/clusters"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func logAnalyticsClusterWaitForState(ctx context.Context, client *clusters.ClustersClient, clusterId clusters.ClusterId) (*pluginsdk.StateChangeConf, error) {
	deadline, ok := ctx.Deadline()
	if !ok {
		return nil, fmt.Errorf("context had no deadline")
	}
	return &pluginsdk.StateChangeConf{
		Pending:    []string{string(clusters.ClusterEntityStatusUpdating)},
		Target:     []string{string(clusters.ClusterEntityStatusSucceeded)},
		MinTimeout: 1 * time.Minute,
		Timeout:    time.Until(deadline),
		Refresh:    logAnalyticsClusterRefresh(ctx, client, clusterId),
	}, nil
}
