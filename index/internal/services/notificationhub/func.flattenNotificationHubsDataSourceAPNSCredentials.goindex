package github.com/hashicorp/terraform-provider-azurerm/internal/services/notificationhub
import (
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/notificationhubs/2023-09-01/hubs"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func flattenNotificationHubsDataSourceAPNSCredentials(input *hubs.ApnsCredential) []interface{} {
	if input == nil {
		return make([]interface{}, 0)
	}

	output := make(map[string]interface{})

	if bundleId := input.Properties.AppName; bundleId != nil {
		output["bundle_id"] = *bundleId
	}

	applicationEndpoints := map[string]string{
		"https://api.push.apple.com:443/3/device":             "Production",
		"https://api.development.push.apple.com:443/3/device": "Sandbox",
	}
	applicationMode := applicationEndpoints[input.Properties.Endpoint]
	output["application_mode"] = applicationMode

	if keyId := input.Properties.KeyId; keyId != nil {
		output["key_id"] = *keyId
	}

	if teamId := input.Properties.AppId; teamId != nil {
		output["team_id"] = *teamId
	}

	if token := input.Properties.Token; token != nil {
		output["token"] = *token
	}

	return []interface{}{output}
}
