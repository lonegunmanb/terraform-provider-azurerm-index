package github.com/hashicorp/terraform-provider-azurerm/internal/services/storagecache
import (
	"context"
	"fmt"
	"log"
	"regexp"
	"strconv"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/storagecache/2023-05-01/caches"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/client"
	keyVaultParse "github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/parse"
	keyVaultValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandStorageCacheNfsAccessRules(input []interface{}) []caches.NfsAccessRule {
	out := make([]caches.NfsAccessRule, 0, len(input))
	for _, accessRuleRaw := range input {
		b := accessRuleRaw.(map[string]interface{})
		out = append(out, caches.NfsAccessRule{
			Scope:          caches.NfsAccessRuleScope(b["scope"].(string)),
			Access:         caches.NfsAccessRuleAccess(b["access"].(string)),
			Filter:         pointer.To(b["filter"].(string)),
			Suid:           pointer.To(b["suid_enabled"].(bool)),
			SubmountAccess: pointer.To(b["submount_access_enabled"].(bool)),
			RootSquash:     pointer.To(b["root_squash_enabled"].(bool)),
			AnonymousUID:   pointer.To(strconv.Itoa(b["anonymous_uid"].(int))),
			AnonymousGID:   pointer.To(strconv.Itoa(b["anonymous_gid"].(int))),
		})
	}
	return out
}
