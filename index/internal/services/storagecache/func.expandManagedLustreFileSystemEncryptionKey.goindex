package github.com/hashicorp/terraform-provider-azurerm/internal/services/storagecache
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/storagecache/2024-07-01/amlfilesystems"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	keyVaultValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storagecache/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandManagedLustreFileSystemEncryptionKey(input []EncryptionKey) *amlfilesystems.AmlFilesystemEncryptionSettings {
	if len(input) == 0 {
		return nil
	}

	encryptionKey := &input[0]

	result := &amlfilesystems.KeyVaultKeyReference{
		KeyURL: encryptionKey.KeyURL,
		SourceVault: amlfilesystems.KeyVaultKeyReferenceSourceVault{
			Id: pointer.To(encryptionKey.SourceVaultId),
		},
	}

	return &amlfilesystems.AmlFilesystemEncryptionSettings{
		KeyEncryptionKey: result,
	}
}
