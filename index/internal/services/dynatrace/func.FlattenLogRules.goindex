package github.com/hashicorp/terraform-provider-azurerm/internal/services/dynatrace
import (
	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dynatrace/2023-04-27/monitors"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dynatrace/2023-04-27/tagrules"
)
func FlattenLogRules(input *tagrules.LogRules) []LogRule {
	if input == nil {
		return []LogRule{}
	}

	var logRule LogRule
	var sendAadLogs bool
	var sendActivityLogs bool
	var sendSubscriptionLogs bool

	if input.FilteringTags != nil {
		filteringTags := FlattenFilteringTags(input.FilteringTags)
		logRule.FilteringTags = filteringTags
	}

	if input.SendActivityLogs != nil {
		if pointer.From(input.SendActivityLogs) == tagrules.SendActivityLogsStatusEnabled {
			sendActivityLogs = true
		} else {
			sendActivityLogs = false
		}
		logRule.SendActivityLogs = sendActivityLogs
	}

	if input.SendAadLogs != nil {
		if pointer.From(input.SendAadLogs) == tagrules.SendAadLogsStatusEnabled {
			sendAadLogs = true
		} else {
			sendAadLogs = false
		}
		logRule.SendAadLogs = sendAadLogs
	}

	if input.SendSubscriptionLogs != nil {
		if pointer.From(input.SendSubscriptionLogs) == tagrules.SendSubscriptionLogsStatusEnabled {
			sendSubscriptionLogs = true
		} else {
			sendSubscriptionLogs = false
		}
		logRule.SendSubscriptionLogs = sendSubscriptionLogs
	}

	return []LogRule{logRule}
}
