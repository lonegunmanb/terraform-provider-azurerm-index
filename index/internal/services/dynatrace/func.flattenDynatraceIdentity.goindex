package github.com/hashicorp/terraform-provider-azurerm/internal/services/dynatrace
import (
	"context"
	"errors"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dynatrace/2023-04-27/monitors"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tags"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenDynatraceIdentity(input *monitors.IdentityProperties) ([]identity.ModelSystemAssigned, error) {
	if input == nil {
		return nil, errors.New("flattening Dynatrace identity: input is nil")
	}
	var identityProp identity.ModelSystemAssigned

	identityProp.Type = identity.Type(input.Type)

	if input.PrincipalId != nil {
		identityProp.PrincipalId = pointer.From(input.PrincipalId)
	}

	if input.TenantId != nil {
		identityProp.TenantId = pointer.From(input.TenantId)
	}

	return []identity.ModelSystemAssigned{
		identityProp,
	}, nil
}
