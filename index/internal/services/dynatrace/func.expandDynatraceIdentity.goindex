package github.com/hashicorp/terraform-provider-azurerm/internal/services/dynatrace
import (
	"context"
	"errors"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dynatrace/2023-04-27/monitors"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandDynatraceIdentity(input []identity.ModelSystemAssigned) (*monitors.IdentityProperties, error) {
	config, err := identity.ExpandSystemAssignedFromModel(input)
	if err != nil {
		return nil, err
	}

	if config.Type == identity.TypeNone {
		return pointer.To(monitors.IdentityProperties{}), nil
	}

	dynatraceIdentity := monitors.IdentityProperties{
		Type: monitors.ManagedIdentityType(config.Type),
	}

	return pointer.To(dynatraceIdentity), nil
}
