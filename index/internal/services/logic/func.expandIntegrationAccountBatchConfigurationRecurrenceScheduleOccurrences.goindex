package github.com/hashicorp/terraform-provider-azurerm/internal/services/logic
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/logic/2019-05-01/integrationaccountbatchconfigurations"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/logic/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandIntegrationAccountBatchConfigurationRecurrenceScheduleOccurrences(input []interface{}) *[]integrationaccountbatchconfigurations.RecurrenceScheduleOccurrence {
	results := make([]integrationaccountbatchconfigurations.RecurrenceScheduleOccurrence, 0)

	for _, item := range input {
		v := item.(map[string]interface{})

		day := integrationaccountbatchconfigurations.DayOfWeek(v["weekday"].(string))
		results = append(results, integrationaccountbatchconfigurations.RecurrenceScheduleOccurrence{
			Day:        &day,
			Occurrence: utils.Int64(int64(v["week"].(int))),
		})
	}

	return &results
}
