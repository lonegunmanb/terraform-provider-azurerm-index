package github.com/hashicorp/terraform-provider-azurerm/internal/services/lighthouse
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/managedservices/2022-10-01/registrationdefinitions"
	"github.com/hashicorp/go-uuid"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	azValidate "github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandLighthouseDefinitionApprover(input []interface{}) *[]registrationdefinitions.EligibleApprover {
	if len(input) == 0 || input[0] == nil {
		return nil
	}

	results := make([]registrationdefinitions.EligibleApprover, 0)
	for _, v := range input {
		eligibleApprover := v.(map[string]interface{})

		result := registrationdefinitions.EligibleApprover{
			PrincipalId: eligibleApprover["principal_id"].(string),
		}

		if principalDisplayName := eligibleApprover["principal_display_name"].(string); principalDisplayName != "" {
			result.PrincipalIdDisplayName = utils.String(principalDisplayName)
		}

		results = append(results, result)
	}

	return &results
}
