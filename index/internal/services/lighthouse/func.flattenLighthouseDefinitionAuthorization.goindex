package github.com/hashicorp/terraform-provider-azurerm/internal/services/lighthouse
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/managedservices/2022-10-01/registrationdefinitions"
	"github.com/hashicorp/go-uuid"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	azValidate "github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenLighthouseDefinitionAuthorization(input []registrationdefinitions.Authorization) []interface{} {
	results := make([]interface{}, 0)
	for _, item := range input {
		principalIDDisplayName := ""
		if item.PrincipalIdDisplayName != nil {
			principalIDDisplayName = *item.PrincipalIdDisplayName
		}

		results = append(results, map[string]interface{}{
			"role_definition_id":            item.RoleDefinitionId,
			"principal_id":                  item.PrincipalId,
			"principal_display_name":        principalIDDisplayName,
			"delegated_role_definition_ids": utils.FlattenStringSlice(item.DelegatedRoleDefinitionIds),
		})
	}

	return results
}
