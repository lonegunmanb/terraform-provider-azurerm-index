package github.com/hashicorp/terraform-provider-azurerm/internal/services/hdinsight
import (
	"fmt"
	"net/url"
	"regexp"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-sdk/resource-manager/hdinsight/2021-06-01/clusters"
	"github.com/hashicorp/go-azure-sdk/resource-manager/hdinsight/2021-06-01/extensions"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	azValidate "github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/hdinsight/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/parse"
	keyVault "github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func ExpandHDInsightsNetwork(input []interface{}) *clusters.NetworkProperties {
	if len(input) == 0 {
		return nil
	}

	vs := input[0].(map[string]interface{})

	connDir := clusters.ResourceProviderConnectionOutbound
	if v, exists := vs["connection_direction"]; exists && v != string(clusters.ResourceProviderConnectionOutbound) {
		connDir = clusters.ResourceProviderConnectionInbound
	}

	privateLink := clusters.PrivateLinkDisabled
	if v, exists := vs["private_link_enabled"]; exists && v != false {
		privateLink = clusters.PrivateLinkEnabled
	}

	return &clusters.NetworkProperties{
		ResourceProviderConnection: pointer.To(connDir),
		PrivateLink:                pointer.To(privateLink),
	}
}
