package github.com/hashicorp/terraform-provider-azurerm/internal/services/hdinsight
import (
	"fmt"
	"net/url"
	"regexp"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-sdk/resource-manager/hdinsight/2021-06-01/clusters"
	"github.com/hashicorp/go-azure-sdk/resource-manager/hdinsight/2021-06-01/extensions"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	azValidate "github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/hdinsight/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/parse"
	keyVault "github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenHDInsightSecurityProfile(input *clusters.SecurityProfile, d *pluginsdk.ResourceData) []interface{} {
	if input == nil {
		return make([]interface{}, 0)
	}

	var aaddsResourceId string
	if input.AaddsResourceId != nil {
		aaddsResourceId = *input.AaddsResourceId
	}

	var domain string
	if input.Domain != nil {
		domain = *input.Domain
	}

	var domainUsername string
	if input.DomainUsername != nil {
		domainUsername = *input.DomainUsername
	}

	var msiResourceId string
	if input.MsiResourceId != nil {
		msiResourceId = *input.MsiResourceId
	}

	return []interface{}{
		map[string]interface{}{
			"aadds_resource_id":       aaddsResourceId,
			"cluster_users_group_dns": utils.FlattenStringSlice(input.ClusterUsersGroupDNs),
			"domain_name":             domain,
			"domain_username":         domainUsername,
			"domain_user_password":    d.Get("security_profile.0.domain_user_password"),
			"ldaps_urls":              utils.FlattenStringSlice(input.LdapsURLs),
			"msi_resource_id":         msiResourceId,
		},
	}
}
