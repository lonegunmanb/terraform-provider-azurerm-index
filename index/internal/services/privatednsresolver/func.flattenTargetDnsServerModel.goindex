package github.com/hashicorp/terraform-provider-azurerm/internal/services/privatednsresolver
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dnsresolver/2022-07-01/dnsforwardingrulesets"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dnsresolver/2022-07-01/forwardingrules"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenTargetDnsServerModel(inputList *[]forwardingrules.TargetDnsServer) []TargetDnsServerModel {
	if inputList == nil {
		return []TargetDnsServerModel{}
	}

	outputList := make([]TargetDnsServerModel, 0, len(*inputList))
	for _, input := range *inputList {
		output := TargetDnsServerModel{
			IPAddress: input.IPAddress,
		}

		if input.Port != nil {
			output.Port = *input.Port
		}

		outputList = append(outputList, output)
	}

	return outputList
}
