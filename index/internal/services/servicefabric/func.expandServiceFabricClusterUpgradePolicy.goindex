package github.com/hashicorp/terraform-provider-azurerm/internal/services/servicefabric
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/servicefabric/2021-06-01/cluster"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	serviceFabricValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/servicefabric/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandServiceFabricClusterUpgradePolicy(input []interface{}) *cluster.ClusterUpgradePolicy {
	if len(input) == 0 || input[0] == nil {
		return nil
	}

	policy := &cluster.ClusterUpgradePolicy{}
	v := input[0].(map[string]interface{})

	policy.ForceRestart = utils.Bool(v["force_restart_enabled"].(bool))
	policy.HealthCheckStableDuration = v["health_check_stable_duration"].(string)
	policy.UpgradeDomainTimeout = v["upgrade_domain_timeout"].(string)
	policy.UpgradeReplicaSetCheckTimeout = v["upgrade_replica_set_check_timeout"].(string)
	policy.UpgradeTimeout = v["upgrade_timeout"].(string)
	policy.HealthCheckRetryTimeout = v["health_check_retry_timeout"].(string)
	policy.HealthCheckWaitDuration = v["health_check_wait_duration"].(string)

	if v["health_policy"] != nil {
		policy.HealthPolicy = expandServiceFabricClusterUpgradePolicyHealthPolicy(v["health_policy"].([]interface{}))
	}
	if v["delta_health_policy"] != nil {
		policy.DeltaHealthPolicy = expandServiceFabricClusterUpgradePolicyDeltaHealthPolicy(v["delta_health_policy"].([]interface{}))
	}

	return policy
}
