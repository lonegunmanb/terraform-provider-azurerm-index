package github.com/hashicorp/terraform-provider-azurerm/internal/services/desktopvirtualization
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/desktopvirtualization/2022-02-10-preview/hostpool"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/desktopvirtualization/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandAgentUpdatePatch(input []interface{}) *hostpool.AgentUpdatePatchProperties {
	if len(input) == 0 || input[0] == nil {
		return nil
	}

	raw := input[0].(map[string]interface{})

	props := hostpool.AgentUpdatePatchProperties{}
	updatesScheduled := hostpool.SessionHostComponentUpdateTypeScheduled
	updatesDefault := hostpool.SessionHostComponentUpdateTypeDefault

	useSessionHostLocalTime := *utils.Bool(raw["use_session_host_timezone"].(bool))
	updateScheduleTimeZone := utils.String(raw["timezone"].(string))
	props.MaintenanceWindowTimeZone = updateScheduleTimeZone
	props.UseSessionHostLocalTime = &useSessionHostLocalTime

	if raw["enabled"].(bool) {
		props.Type = &updatesScheduled
		props.MaintenanceWindows = expandAgentUpdateSchedulePatch(raw["schedule"].([]interface{}))
	} else {
		props.Type = &updatesDefault
		props.MaintenanceWindows = &[]hostpool.MaintenanceWindowPatchProperties{}
	}

	return &props
}
