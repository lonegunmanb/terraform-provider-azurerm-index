package github.com/hashicorp/terraform-provider-azurerm/internal/services/desktopvirtualization
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/desktopvirtualization/2024-04-03/hostpool"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/desktopvirtualization/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenAgentUpdate(input *hostpool.AgentUpdateProperties) []interface{} {
	if input == nil {
		return []interface{}{}
	}
	enabled := false
	if input.Type != nil {
		if *input.Type == hostpool.SessionHostComponentUpdateTypeScheduled {
			enabled = true
		}
	}

	return []interface{}{
		map[string]interface{}{
			"enabled":                   enabled,
			"timezone":                  input.MaintenanceWindowTimeZone,
			"use_session_host_timezone": input.UseSessionHostLocalTime,
			"schedule":                  flattenAgentUpdateSchedule(input.MaintenanceWindows),
		},
	}
}
