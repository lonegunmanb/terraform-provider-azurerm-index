package github.com/hashicorp/terraform-provider-azurerm/internal/services/desktopvirtualization
import (
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/desktopvirtualization/2024-04-03/hostpool"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func dataSourceVirtualDesktopHostPool() *pluginsdk.Resource {
	return &pluginsdk.Resource{
		Read: dataSourceVirtualDesktopHostPoolRead,

		Timeouts: &pluginsdk.ResourceTimeout{
			Read: pluginsdk.DefaultTimeout(5 * time.Minute),
		},

		Schema: map[string]*pluginsdk.Schema{
			"name": {
				Type:         pluginsdk.TypeString,
				Required:     true,
				ValidateFunc: validation.StringIsNotEmpty,
			},

			"location": commonschema.LocationComputed(),

			"resource_group_name": commonschema.ResourceGroupNameForDataSource(),

			"type": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"load_balancer_type": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"friendly_name": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"description": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"validate_environment": {
				Type:     pluginsdk.TypeBool,
				Computed: true,
			},

			"custom_rdp_properties": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"personal_desktop_assignment_type": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"maximum_sessions_allowed": {
				Type:     pluginsdk.TypeInt,
				Computed: true,
			},

			"start_vm_on_connect": {
				Type:     pluginsdk.TypeBool,
				Computed: true,
			},

			"preferred_app_group_type": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"scheduled_agent_updates": {
				Type:     pluginsdk.TypeList,
				Computed: true,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"enabled": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},

						"timezone": {
							Type:     pluginsdk.TypeString,
							Computed: true,
						},

						"use_session_host_timezone": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},

						"schedule": {
							Type:     pluginsdk.TypeList,
							Computed: true,
							Elem: &pluginsdk.Resource{
								Schema: map[string]*pluginsdk.Schema{
									"day_of_week": {
										Type:     pluginsdk.TypeString,
										Computed: true,
									},

									"hour_of_day": {
										Type:     pluginsdk.TypeInt,
										Computed: true,
									},
								},
							},
						},
					},
				},
			},

			"tags": commonschema.TagsDataSource(),
		},
	}
}
