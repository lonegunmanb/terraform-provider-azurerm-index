package github.com/hashicorp/terraform-provider-azurerm/internal/services/desktopvirtualization/migration
import (
	"context"
	"log"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/desktopvirtualization/2024-04-03/hostpool"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func (HostPoolV0ToV1) Schema() map[string]*pluginsdk.Schema {
	return map[string]*pluginsdk.Schema{
		"name": {
			Type:     pluginsdk.TypeString,
			Required: true,
			ForceNew: true,
		},

		"location": commonschema.Location(),

		"resource_group_name": commonschema.ResourceGroupName(),

		"type": {
			Type:     pluginsdk.TypeString,
			Required: true,
			ForceNew: true,
		},

		"load_balancer_type": {
			Type:     pluginsdk.TypeString,
			Required: true,
			ForceNew: true,
		},

		"friendly_name": {
			Type:     pluginsdk.TypeString,
			Optional: true,
		},

		"description": {
			Type:     pluginsdk.TypeString,
			Optional: true,
		},

		"validate_environment": {
			Type:     pluginsdk.TypeBool,
			Optional: true,
			Default:  false,
		},

		"personal_desktop_assignment_type": {
			Type:     pluginsdk.TypeString,
			Optional: true,
			ForceNew: true,
		},

		"maximum_sessions_allowed": {
			Type:     pluginsdk.TypeInt,
			Optional: true,
			Default:  999999,
		},

		"preferred_app_group_type": {
			Type:        pluginsdk.TypeString,
			Optional:    true,
			ForceNew:    true,
			Description: "Preferred App Group type to display",
		},

		"registration_info": {
			Type:     pluginsdk.TypeList,
			Optional: true,
			MaxItems: 1,
			Elem: &pluginsdk.Resource{
				Schema: map[string]*pluginsdk.Schema{
					"expiration_date": {
						Type:     pluginsdk.TypeString,
						Required: true,
					},

					"reset_token": {
						Type:     pluginsdk.TypeBool,
						Computed: true,
					},

					"token": {
						Type:      pluginsdk.TypeString,
						Sensitive: true,
						Computed:  true,
					},
				},
			},
		},

		"tags": commonschema.Tags(),
	}
}
