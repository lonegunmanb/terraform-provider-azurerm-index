package github.com/hashicorp/terraform-provider-azurerm/internal/services/containerapps/helpers
import (
	"reflect"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerapps/2024-02-02-preview/jobs"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenContainerAppJobScaleRules(input *[]jobs.JobScaleRule) []ScaleRule {
	if input == nil || len(*input) == 0 {
		return []ScaleRule{}
	}

	result := make([]ScaleRule, 0)

	for _, v := range *input {
		rule := ScaleRule{
			Name: pointer.From(v.Name),
			Type: pointer.From(v.Type),
		}

		if v.Metadata != nil {
			metadata := pointer.From(v.Metadata)
			if reflect.TypeOf(metadata).Kind() == reflect.Map {
				rule.Metadata = metadata.(map[string]interface{})
			}
		}

		if v.Auth != nil {
			auth := flattenContainerAppJobScaleRulesAuth(v.Auth)
			rule.Auth = auth
		}

		result = append(result, rule)
	}

	return result
}
