package github.com/hashicorp/terraform-provider-azurerm/internal/services/containerapps/helpers
import (
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerapps/2025-01-01/containerapps"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerapps/2025-01-01/daprcomponents"
	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containerapps/validate"
	keyVaultValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandIpSecurityRestrictions(input []IpSecurityRestriction) *[]containerapps.IPSecurityRestrictionRule {
	if input == nil {
		return &[]containerapps.IPSecurityRestrictionRule{}
	}

	result := make([]containerapps.IPSecurityRestrictionRule, 0)
	for _, v := range input {
		ipSecurityRestrictionRule := containerapps.IPSecurityRestrictionRule{
			Action:         containerapps.Action(v.Action),
			Name:           v.Name,
			IPAddressRange: v.IpAddressRange,
			Description:    pointer.To(v.Description),
		}
		result = append(result, ipSecurityRestrictionRule)
	}

	return &result
}
