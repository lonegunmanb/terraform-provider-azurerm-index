package github.com/hashicorp/terraform-provider-azurerm/internal/services/containerapps/helpers
import (
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerapps/2025-07-01/containerapps"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerapps/2025-07-01/daprcomponents"
	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containerapps/validate"
	keyVaultValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenCorsPolicy(input *containerapps.CorsPolicy) []Cors {
	outputList := make([]Cors, 0)
	if input == nil {
		return outputList
	}

	output := Cors{
		AllowCredentialsEnabled: pointer.From(input.AllowCredentials),
		AllowedHeaders:          pointer.From(input.AllowedHeaders),
		AllowedMethods:          pointer.From(input.AllowedMethods),
		AllowedOrigins:          input.AllowedOrigins,
		ExposedHeaders:          pointer.From(input.ExposeHeaders),
		MaxAgeInSeconds:         pointer.From(input.MaxAge),
	}

	return append(outputList, output)
}
