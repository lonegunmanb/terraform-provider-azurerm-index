package github.com/hashicorp/terraform-provider-azurerm/internal/services/containerapps/helpers
import (
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerapps/2025-07-01/containerapps"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerapps/2025-07-01/daprcomponents"
	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containerapps/validate"
	keyVaultValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func ContainerTemplateSchemaComputed() *pluginsdk.Schema {
	return &pluginsdk.Schema{
		Type:     pluginsdk.TypeList,
		Computed: true,
		Elem: &pluginsdk.Resource{
			Schema: map[string]*pluginsdk.Schema{
				"container": ContainerAppContainerSchemaComputed(),

				"init_container": InitContainerAppContainerSchemaComputed(),

				"min_replicas": {
					Type:        pluginsdk.TypeInt,
					Computed:    true,
					Description: "The minimum number of replicas for this container.",
				},

				"max_replicas": {
					Type:        pluginsdk.TypeInt,
					Computed:    true,
					Description: "The maximum number of replicas for this container.",
				},

				"azure_queue_scale_rule": AzureQueueScaleRuleSchemaComputed(),

				"custom_scale_rule": CustomScaleRuleSchemaComputed(),

				"http_scale_rule": HTTPScaleRuleSchemaComputed(),

				"tcp_scale_rule": TCPScaleRuleSchemaComputed(),

				"volume": ContainerVolumeSchemaComputed(),

				"revision_suffix": {
					Type:     pluginsdk.TypeString,
					Computed: true,
				},

				"termination_grace_period_seconds": {
					Type:     pluginsdk.TypeInt,
					Computed: true,
				},
			},
		},
	}
}
