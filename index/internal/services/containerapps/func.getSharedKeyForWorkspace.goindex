package github.com/hashicorp/terraform-provider-azurerm/internal/services/containerapps
import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/resourcegroups"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerapps/2025-01-01/managedenvironments"
	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2020-08-01/workspaces"
	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containerapps/azuresdkhacks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containerapps/helpers"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containerapps/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func getSharedKeyForWorkspace(ctx context.Context, meta sdk.ResourceMetaData, workspaceID string) (*string, *string, error) {
	logAnalyticsClient := meta.Client.LogAnalytics.SharedKeyWorkspacesClient

	logAnalyticsId, err := workspaces.ParseWorkspaceID(workspaceID)
	if err != nil {
		return nil, nil, err
	}

	workspace, err := logAnalyticsClient.Get(ctx, *logAnalyticsId)
	if err != nil {
		return nil, nil, fmt.Errorf("retrieving %s: %+v", logAnalyticsId, err)
	}

	if workspace.Model == nil || workspace.Model.Properties == nil {
		return nil, nil, fmt.Errorf("reading customer ID from %s", logAnalyticsId)
	}

	if workspace.Model.Properties.CustomerId == nil {
		return nil, nil, fmt.Errorf("reading customer ID from %s, `customer_id` is nil", logAnalyticsId)
	}

	keys, err := logAnalyticsClient.SharedKeysGetSharedKeys(ctx, *logAnalyticsId)
	if err != nil {
		return nil, nil, fmt.Errorf("retrieving access keys to %s: %+v", logAnalyticsId, err)
	}
	if keys.Model.PrimarySharedKey == nil {
		return nil, nil, fmt.Errorf("reading shared key for %s", logAnalyticsId)
	}

	return workspace.Model.Properties.CustomerId, keys.Model.PrimarySharedKey, nil
}
