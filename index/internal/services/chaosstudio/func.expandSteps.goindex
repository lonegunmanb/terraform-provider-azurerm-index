package github.com/hashicorp/terraform-provider-azurerm/internal/services/chaosstudio
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/chaosstudio/2023-11-01/experiments"
	"github.com/hashicorp/go-azure-sdk/sdk/client/pollers"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/chaosstudio/custompollers"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandSteps(input []StepSchema) (*[]experiments.Step, error) {
	output := make([]experiments.Step, 0)

	for _, step := range input {
		branches := make([]experiments.Branch, 0)
		for _, branch := range step.Branch {
			actions, err := expandActions(branch.Actions)
			if err != nil {
				return nil, fmt.Errorf("expanding `actions`: %+v", err)
			}
			branches = append(branches, experiments.Branch{
				Actions: *actions,
				Name:    branch.Name,
			})
		}
		output = append(output, experiments.Step{
			Name:     step.Name,
			Branches: branches,
		})
	}

	return &output, nil
}
