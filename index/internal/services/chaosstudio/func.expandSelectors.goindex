package github.com/hashicorp/terraform-provider-azurerm/internal/services/chaosstudio
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/chaosstudio/2023-11-01/experiments"
	"github.com/hashicorp/go-azure-sdk/sdk/client/pollers"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/chaosstudio/custompollers"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandSelectors(input []SelectorSchema) (*[]experiments.Selector, error) {
	output := make([]experiments.Selector, 0)

	for _, v := range input {
		targetsOutput := make([]experiments.TargetReference, 0)
		for _, t := range v.TargetIds {
			targetId, err := commonids.ParseChaosStudioTargetID(t)
			if err != nil {
				return nil, err
			}
			targetsOutput = append(targetsOutput, experiments.TargetReference{
				Id:   targetId.ID(),
				Type: experiments.TargetReferenceTypeChaosTarget,
			})
		}
		output = append(output, experiments.ListSelector{
			Targets: targetsOutput,
			Filter:  nil,
			Id:      v.Name,
		})
	}
	return &output, nil
}
