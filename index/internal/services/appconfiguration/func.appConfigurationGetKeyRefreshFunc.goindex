package github.com/hashicorp/terraform-provider-azurerm/internal/services/appconfiguration
import (
	"bytes"
	"context"
	"fmt"

	"github.com/Azure/go-autorest/autorest"
	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/appconfiguration/2024-05-01/configurationstores"
	"github.com/hashicorp/go-azure-sdk/resource-manager/appconfiguration/2024-05-01/replicas"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/jackofallops/kermit/sdk/appconfiguration/1.0/appconfiguration"
)
func appConfigurationGetKeyRefreshFunc(ctx context.Context, client *appconfiguration.BaseClient, key, label string) pluginsdk.StateRefreshFunc {
	return func() (interface{}, string, error) {
		res, err := client.GetKeyValue(ctx, key, label, "", "", "", []appconfiguration.KeyValueFields{})
		if err != nil {
			if v, ok := err.(autorest.DetailedError); ok {
				if response.WasForbidden(v.Response) {
					return "Forbidden", "Forbidden", nil
				}
				if response.WasNotFound(v.Response) {
					return "NotFound", "NotFound", nil
				}
			}
			return res, "Error", nil
		}

		return res, "Exists", nil
	}
}
