package github.com/hashicorp/terraform-provider-azurerm/internal/services/appconfiguration/migration
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/hashicorp/go-azure-sdk/resource-manager/appconfiguration/2024-05-01/configurationstores"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/appconfiguration/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func (FeatureResourceV0ToV1) Schema() map[string]*pluginsdk.Schema {
	return map[string]*pluginsdk.Schema{
		"configuration_store_id": {
			ForceNew: true,
			Required: true,
			Type:     pluginsdk.TypeString,
		},
		"description": {
			Optional: true,
			Type:     pluginsdk.TypeString,
		},
		"enabled": {
			Optional: true,
			Type:     pluginsdk.TypeBool,
		},
		"etag": {
			Computed: true,
			Optional: true,
			Type:     pluginsdk.TypeString,
		},
		"label": {
			ForceNew: true,
			Optional: true,
			Type:     pluginsdk.TypeString,
		},
		"locked": {
			Optional: true,
			Type:     pluginsdk.TypeBool,
		},
		"name": {
			ForceNew: true,
			Required: true,
			Type:     pluginsdk.TypeString,
		},
		"percentage_filter_value": {
			Optional: true,
			Type:     pluginsdk.TypeInt,
		},
		"tags": {
			Elem:     &pluginsdk.Schema{Type: pluginsdk.TypeString},
			Optional: true,
			Type:     pluginsdk.TypeMap,
		},
		"targeting_filter": {
			Elem: &pluginsdk.Resource{Schema: map[string]*pluginsdk.Schema{
				"default_rollout_percentage": {
					Required: true,
					Type:     pluginsdk.TypeInt,
				},
				"groups": {
					Elem: &pluginsdk.Resource{Schema: map[string]*pluginsdk.Schema{
						"name": {
							Required: true,
							Type:     pluginsdk.TypeString,
						},
						"rollout_percentage": {
							Required: true,
							Type:     pluginsdk.TypeInt,
						},
					}},
					Optional: true,
					Type:     pluginsdk.TypeList,
				},
				"users": {
					Elem:     &pluginsdk.Schema{Type: pluginsdk.TypeString},
					Optional: true,
					Type:     pluginsdk.TypeList,
				},
			}},
			Optional: true,
			Type:     pluginsdk.TypeList,
		},
		"timewindow_filter": {
			Elem: &pluginsdk.Resource{Schema: map[string]*pluginsdk.Schema{
				"end": {
					Optional: true,
					Type:     pluginsdk.TypeString,
				},
				"start": {
					Optional: true,
					Type:     pluginsdk.TypeString,
				},
			}},
			Optional: true,
			Type:     pluginsdk.TypeList,
		},
	}
}
