package github.com/hashicorp/terraform-provider-azurerm/internal/services/domainservices
import (
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/aad/2021-05-01/domainservices"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func dataSourceActiveDirectoryDomainService() *pluginsdk.Resource {
	return &pluginsdk.Resource{
		Read: dataSourceActiveDirectoryDomainServiceRead,

		Timeouts: &pluginsdk.ResourceTimeout{
			Read: pluginsdk.DefaultTimeout(5 * time.Minute),
		},

		Schema: map[string]*pluginsdk.Schema{
			"name": {
				Type:         pluginsdk.TypeString,
				Required:     true,
				ValidateFunc: validation.StringIsNotWhiteSpace,
			},

			"resource_group_name": commonschema.ResourceGroupNameForDataSource(),

			"deployment_id": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"domain_configuration_type": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"domain_name": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"filtered_sync_enabled": {
				Type:     pluginsdk.TypeBool,
				Computed: true,
			},

			"location": commonschema.LocationComputed(),

			"notifications": {
				Type:     pluginsdk.TypeList,
				Computed: true,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"additional_recipients": {
							Type:     pluginsdk.TypeList,
							Computed: true,
							Elem: &pluginsdk.Schema{
								Type: pluginsdk.TypeString,
							},
						},
						"notify_dc_admins": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},
						"notify_global_admins": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},
					},
				},
			},

			"replica_sets": {
				Type:     pluginsdk.TypeList,
				Computed: true,
				Elem: &pluginsdk.Resource{
					Schema: dataSourceActiveDirectoryDomainServiceReplicaSetSchema(),
				},
			},

			"resource_id": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"secure_ldap": {
				Type:     pluginsdk.TypeList,
				Computed: true,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"enabled": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},

						"external_access_enabled": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},

						"certificate_expiry": {
							Type:     pluginsdk.TypeString,
							Computed: true,
						},

						"certificate_thumbprint": {
							Type:     pluginsdk.TypeString,
							Computed: true,
						},

						"public_certificate": {
							Type:     pluginsdk.TypeString,
							Computed: true,
						},
					},
				},
			},

			"security": {
				Type:     pluginsdk.TypeList,
				Computed: true,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"kerberos_armoring_enabled": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},

						"kerberos_rc4_encryption_enabled": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},

						"ntlm_v1_enabled": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},

						"sync_kerberos_passwords": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},

						"sync_ntlm_passwords": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},

						"sync_on_prem_passwords": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},

						"tls_v1_enabled": {
							Type:     pluginsdk.TypeBool,
							Computed: true,
						},
					},
				},
			},

			"sku": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"sync_owner": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"tags": commonschema.Tags(),

			"tenant_id": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"version": {
				Type:     pluginsdk.TypeInt,
				Computed: true,
			},
		},
	}
}
