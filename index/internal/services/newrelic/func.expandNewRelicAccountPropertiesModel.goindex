package github.com/hashicorp/terraform-provider-azurerm/internal/services/newrelic
import (
	"context"
	"fmt"
	"regexp"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/newrelic/2024-03-01/monitors"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandNewRelicAccountPropertiesModel(model *NewRelicMonitorModel) *monitors.NewRelicAccountProperties {
	output := monitors.NewRelicAccountProperties{}
	containsValue := false

	accountInfo := expandAccountInfoModel(model)
	if accountInfo != nil {
		output.AccountInfo = accountInfo
		containsValue = true
	}

	organizationInfo := expandOrganizationInfoModel(model)
	if organizationInfo != nil {
		output.OrganizationInfo = organizationInfo
		containsValue = true
	}

	if model.UserId != "" {
		output.UserId = &model.UserId
		containsValue = true
	}

	if !containsValue {
		return nil
	}

	return &output
}
