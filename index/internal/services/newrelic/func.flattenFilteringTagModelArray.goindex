package github.com/hashicorp/terraform-provider-azurerm/internal/services/newrelic
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/newrelic/2024-03-01/monitors"
	"github.com/hashicorp/go-azure-sdk/resource-manager/newrelic/2024-03-01/tagrules"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenFilteringTagModelArray(inputList *[]tagrules.FilteringTag) []FilteringTagModel {
	outputList := make([]FilteringTagModel, 0)
	if inputList == nil {
		return outputList
	}

	for _, input := range *inputList {
		outputList = append(outputList, FilteringTagModel{
			Action: pointer.From(input.Action),
			Name:   pointer.From(input.Name),
			Value:  pointer.From(input.Value),
		})
	}

	return outputList
}
