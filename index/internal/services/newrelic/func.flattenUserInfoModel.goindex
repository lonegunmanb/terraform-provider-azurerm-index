package github.com/hashicorp/terraform-provider-azurerm/internal/services/newrelic
import (
	"context"
	"fmt"
	"regexp"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/newrelic/2024-03-01/monitors"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenUserInfoModel(input *monitors.UserInfo) []UserInfoModel {
	var outputList []UserInfoModel
	if input == nil {
		return outputList
	}
	output := UserInfoModel{}

	if input.EmailAddress != nil {
		output.EmailAddress = *input.EmailAddress
	}

	if input.FirstName != nil {
		output.FirstName = *input.FirstName
	}

	if input.LastName != nil {
		output.LastName = *input.LastName
	}

	if input.PhoneNumber != nil {
		output.PhoneNumber = *input.PhoneNumber
	}

	return append(outputList, output)
}
