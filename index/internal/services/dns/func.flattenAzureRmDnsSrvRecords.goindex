package github.com/hashicorp/terraform-provider-azurerm/internal/services/dns
import (
	"bytes"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dns/2018-05-01/recordsets"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/dns/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func flattenAzureRmDnsSrvRecords(records *[]recordsets.SrvRecord) []map[string]interface{} {
	results := make([]map[string]interface{}, 0)

	if records != nil {
		for _, record := range *records {
			port := int64(0)
			if record.Port != nil {
				port = *record.Port
			}

			priority := int64(0)
			if record.Priority != nil {
				priority = *record.Priority
			}

			target := ""
			if record.Target != nil {
				target = *record.Target
			}

			weight := int64(0)
			if record.Weight != nil {
				weight = *record.Weight
			}

			results = append(results, map[string]interface{}{
				"port":     port,
				"priority": priority,
				"target":   target,
				"weight":   weight,
			})
		}
	}

	return results
}
