package github.com/hashicorp/terraform-provider-azurerm/internal/services/dns
import (
	"bytes"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dns/2018-05-01/recordsets"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/dns/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func flattenAzureRmDnsCaaRecords(records *[]recordsets.CaaRecord) []map[string]interface{} {
	results := make([]map[string]interface{}, 0)

	if records != nil {
		for _, record := range *records {
			flags := int64(0)
			if record.Flags != nil {
				flags = *record.Flags
			}

			tag := ""
			if record.Tag != nil {
				tag = *record.Tag
			}

			value := ""
			if record.Value != nil {
				value = *record.Value
			}

			results = append(results, map[string]interface{}{
				"flags": flags,
				"tag":   tag,
				"value": value,
			})
		}
	}

	return results
}
