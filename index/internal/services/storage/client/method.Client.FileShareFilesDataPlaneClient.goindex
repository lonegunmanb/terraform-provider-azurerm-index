package github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/client
import (
	"context"
	"fmt"

	"github.com/hashicorp/go-azure-sdk/sdk/auth"
	"github.com/hashicorp/go-azure-sdk/sdk/client"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/shim"
	"github.com/jackofallops/giovanni/storage/2023-11-03/blob/accounts"
	"github.com/jackofallops/giovanni/storage/2023-11-03/blob/blobs"
	"github.com/jackofallops/giovanni/storage/2023-11-03/blob/containers"
	"github.com/jackofallops/giovanni/storage/2023-11-03/datalakestore/filesystems"
	"github.com/jackofallops/giovanni/storage/2023-11-03/datalakestore/paths"
	"github.com/jackofallops/giovanni/storage/2023-11-03/file/directories"
	"github.com/jackofallops/giovanni/storage/2023-11-03/file/files"
	"github.com/jackofallops/giovanni/storage/2023-11-03/file/shares"
	"github.com/jackofallops/giovanni/storage/2023-11-03/queue/queues"
	"github.com/jackofallops/giovanni/storage/2023-11-03/table/entities"
	"github.com/jackofallops/giovanni/storage/2023-11-03/table/tables"
)
func (c Client) FileShareFilesDataPlaneClient(ctx context.Context, account AccountDetails, operation DataPlaneOperation) (*files.Client, error) {
	const clientName = "File Storage Share Files"
	operation.sharedKeyAuthenticationType = auth.SharedKey

	baseUri, err := account.DataPlaneEndpoint(EndpointTypeFile)
	if err != nil {
		return nil, err
	}

	apiClient, err := files.NewWithBaseUri(*baseUri)
	if err != nil {
		return nil, fmt.Errorf("building %s client: %+v", clientName, err)
	}

	err = c.configureDataPlane(ctx, clientName, *baseUri, apiClient.Client, account, operation)
	if err != nil {
		return nil, err
	}

	return apiClient, nil
}
