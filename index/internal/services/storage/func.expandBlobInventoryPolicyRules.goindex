package github.com/hashicorp/terraform-provider-azurerm/internal/services/storage
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/storage/2023-05-01/blobinventorypolicies"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandBlobInventoryPolicyRules(input []interface{}) ([]blobinventorypolicies.BlobInventoryPolicyRule, error) {
	results := make([]blobinventorypolicies.BlobInventoryPolicyRule, 0)
	for _, item := range input {
		v := item.(map[string]interface{})

		filters, err := expandBlobInventoryPolicyFilter(v["filter"].([]interface{}), v["scope"].(string))
		if err != nil {
			return nil, fmt.Errorf("%s rule is invalid: %+v", v["name"].(string), err)
		}

		results = append(results, blobinventorypolicies.BlobInventoryPolicyRule{
			Enabled:     true,
			Name:        v["name"].(string),
			Destination: v["storage_container_name"].(string),
			Definition: blobinventorypolicies.BlobInventoryPolicyDefinition{
				Format:       blobinventorypolicies.Format(v["format"].(string)),
				Schedule:     blobinventorypolicies.Schedule(v["schedule"].(string)),
				ObjectType:   blobinventorypolicies.ObjectType(v["scope"].(string)),
				SchemaFields: *utils.ExpandStringSlice(v["schema_fields"].([]interface{})),
				Filters:      filters,
			},
		})
	}
	return results, nil
}
