package github.com/hashicorp/terraform-provider-azurerm/internal/services/storage
import (
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/storage/2023-05-01/objectreplicationpolicies"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func resourceStorageObjectReplication() *pluginsdk.Resource {
	return &pluginsdk.Resource{
		Create: resourceStorageObjectReplicationCreate,
		Read:   resourceStorageObjectReplicationRead,
		Update: resourceStorageObjectReplicationUpdate,
		Delete: resourceStorageObjectReplicationDelete,

		Timeouts: &pluginsdk.ResourceTimeout{
			Create: pluginsdk.DefaultTimeout(30 * time.Minute),
			Read:   pluginsdk.DefaultTimeout(5 * time.Minute),
			Update: pluginsdk.DefaultTimeout(30 * time.Minute),
			Delete: pluginsdk.DefaultTimeout(30 * time.Minute),
		},

		Importer: pluginsdk.ImporterValidatingResourceId(func(id string) error {
			_, err := parse.ObjectReplicationID(id)
			return err
		}),

		Schema: map[string]*pluginsdk.Schema{
			"source_storage_account_id": {
				Type:         pluginsdk.TypeString,
				Required:     true,
				ForceNew:     true,
				ValidateFunc: commonids.ValidateStorageAccountID,
			},

			"destination_storage_account_id": {
				Type:         pluginsdk.TypeString,
				Required:     true,
				ForceNew:     true,
				ValidateFunc: commonids.ValidateStorageAccountID,
			},

			"rules": {
				Type:     pluginsdk.TypeSet,
				Required: true,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"source_container_name": {
							Type:         pluginsdk.TypeString,
							Required:     true,
							ValidateFunc: validate.StorageContainerName,
						},

						"destination_container_name": {
							Type:         pluginsdk.TypeString,
							Required:     true,
							ValidateFunc: validate.StorageContainerName,
						},

						// Possible values are "" means "OnlyNewObjects", "1601-01-01T00:00:00Z" means "Everything" and timeStamp "2020-10-21T16:00:00Z"
						"copy_blobs_created_after": {
							Type:         pluginsdk.TypeString,
							Optional:     true,
							Default:      "OnlyNewObjects",
							ValidateFunc: validate.ObjectReplicationCopyBlobsCreatedAfter,
						},

						"filter_out_blobs_with_prefix": {
							Type:     pluginsdk.TypeSet,
							Optional: true,
							Elem: &pluginsdk.Schema{
								Type:         pluginsdk.TypeString,
								ValidateFunc: validation.StringIsNotEmpty,
							},
						},

						"name": {
							Type:     pluginsdk.TypeString,
							Computed: true,
						},
					},
				},
			},

			"source_object_replication_id": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"destination_object_replication_id": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},
		},
	}
}
