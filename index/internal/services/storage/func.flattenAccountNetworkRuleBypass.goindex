package github.com/hashicorp/terraform-provider-azurerm/internal/services/storage
import (
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/storage/2023-05-01/storageaccounts"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func flattenAccountNetworkRuleBypass(input *storageaccounts.Bypass) []interface{} {
	output := make([]interface{}, 0)

	if input != nil {
		// Whilst this is an Enum it's actually a CSV containing the enum but its exposed as a regular string
		// as such we need to manually re-case this
		components := strings.Split(string(*input), ", ")

		vals := map[string]string{}
		for _, v := range storageaccounts.PossibleValuesForBypass() {
			vals[strings.ToLower(v)] = v
		}
		for _, item := range components {
			val, ok := vals[strings.ToLower(item)]
			if !ok {
				// otherwise append the direct casing if it's an unknown value
				val = item
			}

			output = append(output, val)
		}
	}

	return output
}
