package github.com/hashicorp/terraform-provider-azurerm/internal/services/storage
import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/storage/2023-05-01/blobcontainers"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func (r StorageContainerImmutabilityPolicyResource) CustomizeDiff() sdk.ResourceFunc {
	return sdk.ResourceFunc{
		Timeout: 5 * time.Minute,
		Func: func(ctx context.Context, metadata sdk.ResourceMetaData) error {
			diff := metadata.ResourceDiff

			protectedAppendWritesAllEnabled := diff.Get("protected_append_writes_all_enabled").(bool)
			protectedAppendWritesEnabled := diff.Get("protected_append_writes_enabled").(bool)

			if protectedAppendWritesAllEnabled && protectedAppendWritesEnabled {
				return fmt.Errorf("`protected_append_writes_all_enabled` and `protected_append_writes_enabled` cannot be set at the same time")
			}

			lockedOld, lockedNew := diff.GetChange("locked")

			if lockedOld.(bool) && !lockedNew.(bool) {
				return fmt.Errorf("unable to set `locked = false` - once an immutability policy locked it cannot be unlocked")
			}

			if lockedOld.(bool) {
				if diff.HasChange("immutability_period_in_days") {
					if periodOld, periodNew := diff.GetChange("immutability_period_in_days"); periodOld.(int) < periodNew.(int) {
						return fmt.Errorf("`immutability_period_in_days` cannot be decreased once an immutability policy has been locked")
					}
				}

				if diff.HasChange("protected_append_writes_all_enabled") {
					return fmt.Errorf("`protected_append_writes_all_enabled` cannot be changed once an immutability policy has been locked")
				}

				if diff.HasChange("protected_append_writes_enabled") {
					return fmt.Errorf("`protected_append_writes_enabled` cannot be changed once an immutability policy has been locked")
				}
			}

			return nil
		},
	}
}
