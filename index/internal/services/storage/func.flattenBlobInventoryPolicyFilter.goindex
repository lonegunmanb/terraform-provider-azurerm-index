package github.com/hashicorp/terraform-provider-azurerm/internal/services/storage
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/storage/2023-05-01/blobinventorypolicies"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenBlobInventoryPolicyFilter(input *blobinventorypolicies.BlobInventoryPolicyFilter) []interface{} {
	if input == nil {
		return make([]interface{}, 0)
	}

	var includeBlobVersions bool
	if input.IncludeBlobVersions != nil {
		includeBlobVersions = *input.IncludeBlobVersions
	}
	var includeDeleted bool
	if input.IncludeDeleted != nil {
		includeDeleted = *input.IncludeDeleted
	}
	var includeSnapshots bool
	if input.IncludeSnapshots != nil {
		includeSnapshots = *input.IncludeSnapshots
	}
	return []interface{}{
		map[string]interface{}{
			"blob_types":            utils.FlattenStringSlice(input.BlobTypes),
			"include_blob_versions": includeBlobVersions,
			"include_deleted":       includeDeleted,
			"include_snapshots":     includeSnapshots,
			"prefix_match":          utils.FlattenStringSlice(input.PrefixMatch),
			"exclude_prefixes":      utils.FlattenStringSlice(input.ExcludePrefix),
		},
	}
}
