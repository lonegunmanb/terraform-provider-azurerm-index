package github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/migration
import (
	"context"
	"fmt"
	"log"

	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func (TableV1ToV2) UpgradeFunc() pluginsdk.StateUpgraderFunc {
	// this should have been applied from pre-0.12 migration system; backporting just in-case
	return func(ctx context.Context, rawState map[string]interface{}, meta interface{}) (map[string]interface{}, error) {
		tableName := rawState["name"].(string)
		accountName := rawState["storage_account_name"].(string)
		environment := meta.(*clients.Client).Account.Environment
		storageDomainSuffix, ok := environment.Storage.DomainSuffix()
		if !ok {
			return nil, fmt.Errorf("could not determine Storage domain suffix for environment %q", environment.Name)
		}

		id := rawState["id"].(string)
		newResourceID := fmt.Sprintf("https://%s.table.%s/Tables('%s')", accountName, *storageDomainSuffix, tableName)
		log.Printf("[DEBUG] Updating ID from %q to %q", id, newResourceID)

		rawState["id"] = newResourceID
		return rawState, nil
	}
}
