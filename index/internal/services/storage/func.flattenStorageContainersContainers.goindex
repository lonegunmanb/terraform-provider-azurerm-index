package github.com/hashicorp/terraform-provider-azurerm/internal/services/storage
import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/storage/2023-05-01/blobcontainers"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/client"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/jackofallops/giovanni/storage/2023-11-03/blob/accounts"
	"github.com/jackofallops/giovanni/storage/2023-11-03/blob/containers"
)
func flattenStorageContainersContainers(l []blobcontainers.ListContainerItem, accountId accounts.AccountId, prefix string) []containerModel {
	output := make([]containerModel, 0, len(l))
	for _, item := range l {
		var name string
		if item.Name != nil {
			name = *item.Name
		}

		if prefix != "" && !strings.HasPrefix(name, prefix) {
			continue
		}

		var mgmtId string
		if item.Id != nil {
			mgmtId = *item.Id
		}

		output = append(output, containerModel{
			Name:              name,
			ResourceManagerId: mgmtId,
			DataPlaneId:       containers.NewContainerID(accountId, name).ID(),
		})
	}

	return output
}
