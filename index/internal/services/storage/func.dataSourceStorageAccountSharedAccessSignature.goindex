package github.com/hashicorp/terraform-provider-azurerm/internal/services/storage
import (
	"crypto/sha256"
	"encoding/hex"
	"time"

	"github.com/hashicorp/go-azure-helpers/storage"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func dataSourceStorageAccountSharedAccessSignature() *pluginsdk.Resource {
	sasSignedVersion := "2022-11-02"
	return &pluginsdk.Resource{
		Read: dataSourceStorageAccountSasRead,

		Timeouts: &pluginsdk.ResourceTimeout{
			Read: pluginsdk.DefaultTimeout(5 * time.Minute),
		},

		Schema: map[string]*pluginsdk.Schema{
			"connection_string": {
				Type:      pluginsdk.TypeString,
				Required:  true,
				Sensitive: true,
			},

			"https_only": {
				Type:     pluginsdk.TypeBool,
				Optional: true,
				Default:  true,
			},

			"ip_addresses": {
				Type:     pluginsdk.TypeString,
				Optional: true,
				ValidateFunc: validation.Any(
					validation.IsIPv4Address,
					validation.IsIPv4Range,
				),
			},

			"signed_version": {
				Type:     pluginsdk.TypeString,
				Optional: true,
				Default:  sasSignedVersion,
			},

			"resource_types": {
				Type:     pluginsdk.TypeList,
				Required: true,
				MaxItems: 1,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"service": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"container": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"object": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},
					},
				},
			},

			"services": {
				Type:     pluginsdk.TypeList,
				Required: true,
				MaxItems: 1,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"blob": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"queue": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"table": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"file": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},
					},
				},
			},

			// Always in UTC and must be ISO-8601 format
			"start": {
				Type:         pluginsdk.TypeString,
				Required:     true,
				ValidateFunc: validate.ISO8601DateTime,
			},

			// Always in UTC and must be ISO-8601 format
			"expiry": {
				Type:         pluginsdk.TypeString,
				Required:     true,
				ValidateFunc: validate.ISO8601DateTime,
			},

			"permissions": {
				Type:     pluginsdk.TypeList,
				Required: true,
				MaxItems: 1,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"read": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"write": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"delete": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"list": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"add": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"create": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"update": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"process": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"tag": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},

						"filter": {
							Type:     pluginsdk.TypeBool,
							Required: true,
						},
					},
				},
			},

			"sas": {
				Type:      pluginsdk.TypeString,
				Computed:  true,
				Sensitive: true,
			},
		},
	}
}
