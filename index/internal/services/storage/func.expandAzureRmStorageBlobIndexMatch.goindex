package github.com/hashicorp/terraform-provider-azurerm/internal/services/storage
import (
	"errors"
	"fmt"
	"log"
	"time"

	// nolint: staticcheck
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/storage/2023-05-01/managementpolicies"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandAzureRmStorageBlobIndexMatch(blobIndexMatches []interface{}) *[]managementpolicies.TagFilter {
	if len(blobIndexMatches) == 0 {
		return nil
	}

	results := make([]managementpolicies.TagFilter, 0)
	for _, v := range blobIndexMatches {
		blobIndexMatch := v.(map[string]interface{})

		filter := managementpolicies.TagFilter{
			Name:  blobIndexMatch["name"].(string),
			Op:    blobIndexMatch["operation"].(string),
			Value: blobIndexMatch["value"].(string),
		}

		results = append(results, filter)
	}

	return &results
}
