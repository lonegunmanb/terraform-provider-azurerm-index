package github.com/hashicorp/terraform-provider-azurerm/internal/services/storage
import (
	"bytes"
	"context"
	"encoding/base64"
	"encoding/hex"
	"errors"
	"fmt"
	"io"
	"os"
	"runtime"
	"strings"
	"sync"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/jackofallops/giovanni/storage/2023-11-03/blob/blobs"
)
func (sbu BlobUpload) uploadBlockBlobFromContent(ctx context.Context) error {
	tmpFile, err := os.CreateTemp(os.TempDir(), "upload-")
	if err != nil {
		return fmt.Errorf("creating temporary file: %s", err)
	}
	defer os.Remove(tmpFile.Name())

	if _, err = tmpFile.Write([]byte(sbu.SourceContent)); err != nil {
		return fmt.Errorf("writing Source Content to Temp File: %s", err)
	}
	defer tmpFile.Close()

	sbu.Source = tmpFile.Name()
	return sbu.uploadBlockBlob(ctx)
}
