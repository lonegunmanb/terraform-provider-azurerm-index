package github.com/hashicorp/terraform-provider-azurerm/internal/services/dashboard
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dashboard/2023-09-01/grafanaresource"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandSMTPConfigurationModel(input []SMTPConfigurationModel) *grafanaresource.GrafanaConfigurations {
	if len(input) == 0 {
		return nil
	}

	v := input[0]
	smtp := grafanaresource.Smtp{
		Enabled:        pointer.To(v.SMTPEnabled),
		FromAddress:    pointer.To(v.FromAddress),
		FromName:       pointer.To(v.FromName),
		Host:           pointer.To(v.Host),
		Password:       pointer.To(v.Password),
		SkipVerify:     pointer.To(v.SkipVerify),
		User:           pointer.To(v.User),
		StartTLSPolicy: (*grafanaresource.StartTLSPolicy)(pointer.To(v.StartTLSPolicy)),
	}

	return pointer.To(
		grafanaresource.GrafanaConfigurations{
			Smtp: pointer.To(smtp),
		})
}
