package github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/deliveryruleactions
import (
	"errors"

	"github.com/Azure/azure-sdk-for-go/services/cdn/mgmt/2020-09-01/cdn" // nolint: staticcheck
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func ExpandArmCdnEndpointActionCacheKeyQueryString(input []interface{}) (*[]cdn.BasicDeliveryRuleAction, error) {
	output := make([]cdn.BasicDeliveryRuleAction, 0)

	for _, v := range input {
		item := v.(map[string]interface{})

		cacheKeyQueryStringAction := cdn.DeliveryRuleCacheKeyQueryStringAction{
			Name: cdn.NameBasicDeliveryRuleActionNameCacheKeyQueryString,
			Parameters: &cdn.CacheKeyQueryStringActionParameters{
				OdataType:           utils.String("Microsoft.Azure.Cdn.Models.DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"),
				QueryStringBehavior: cdn.QueryStringBehavior(item["behavior"].(string)),
			},
		}

		if parameters := item["parameters"].(string); parameters == "" {
			if behavior := cacheKeyQueryStringAction.Parameters.QueryStringBehavior; behavior == cdn.QueryStringBehaviorInclude || behavior == cdn.QueryStringBehaviorExclude {
				return nil, errors.New("parameters can not be empty if the behaviour is either Include or Exclude")
			}
		} else {
			cacheKeyQueryStringAction.Parameters.QueryParameters = utils.String(parameters)
		}

		output = append(output, cacheKeyQueryStringAction)
	}

	return &output, nil
}
