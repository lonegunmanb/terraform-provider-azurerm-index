package github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/deliveryruleactions
import (
	"fmt"

	"github.com/Azure/azure-sdk-for-go/services/cdn/mgmt/2020-09-01/cdn" // nolint: staticcheck
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func URLRedirect() *pluginsdk.Resource {
	return &pluginsdk.Resource{
		Schema: map[string]*pluginsdk.Schema{
			"redirect_type": {
				Type:     pluginsdk.TypeString,
				Required: true,
				ValidateFunc: validation.StringInSlice([]string{
					string(cdn.RedirectTypeFound),
					string(cdn.RedirectTypeMoved),
					string(cdn.RedirectTypePermanentRedirect),
					string(cdn.RedirectTypeTemporaryRedirect),
				}, false),
			},

			"protocol": {
				Type:     pluginsdk.TypeString,
				Optional: true,
				Default:  string(cdn.DestinationProtocolMatchRequest),
				ValidateFunc: validation.StringInSlice([]string{
					string(cdn.DestinationProtocolMatchRequest),
					string(cdn.DestinationProtocolHTTP),
					string(cdn.DestinationProtocolHTTPS),
				}, false),
			},

			"hostname": {
				Type:     pluginsdk.TypeString,
				Optional: true,
			},

			"path": {
				Type:         pluginsdk.TypeString,
				Optional:     true,
				ValidateFunc: validate.RuleActionUrlRedirectPath(),
			},

			"query_string": {
				Type:         pluginsdk.TypeString,
				Optional:     true,
				ValidateFunc: validate.RuleActionUrlRedirectQueryString(),
			},

			"fragment": {
				Type:         pluginsdk.TypeString,
				Optional:     true,
				ValidateFunc: validate.RuleActionUrlRedirectFragment(),
			},
		},
	}
}
