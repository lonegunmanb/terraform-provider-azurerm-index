package github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/deliveryruleactions
import (
	"errors"

	"github.com/Azure/azure-sdk-for-go/services/cdn/mgmt/2020-09-01/cdn" // nolint: staticcheck
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func ExpandArmCdnEndpointActionUrlRedirect(input []interface{}) (*[]cdn.BasicDeliveryRuleAction, error) {
	output := make([]cdn.BasicDeliveryRuleAction, 0)

	for _, v := range input {
		item := v.(map[string]interface{})

		params := cdn.URLRedirectActionParameters{
			OdataType:    utils.String("Microsoft.Azure.Cdn.Models.DeliveryRuleUrlRedirectActionParameters"),
			RedirectType: cdn.RedirectType(item["redirect_type"].(string)),
		}

		if destProt := item["protocol"]; destProt.(string) != "" {
			params.DestinationProtocol = cdn.DestinationProtocol(destProt.(string))
		}

		if hostname := item["hostname"]; hostname.(string) != "" {
			params.CustomHostname = utils.String(hostname.(string))
		}

		if path := item["path"]; path.(string) != "" {
			params.CustomPath = utils.String(path.(string))
		}

		if queryString := item["query_string"]; queryString.(string) != "" {
			params.CustomQueryString = utils.String(queryString.(string))
		}

		if fragment := item["fragment"]; fragment.(string) != "" {
			params.CustomFragment = utils.String(fragment.(string))
		}

		output = append(output, cdn.URLRedirectAction{
			Name:       cdn.NameBasicDeliveryRuleActionNameURLRedirect,
			Parameters: &params,
		})
	}

	return &output, nil
}
