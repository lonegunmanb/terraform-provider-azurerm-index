package github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/deliveryruleactions
import (
	"fmt"

	"github.com/Azure/azure-sdk-for-go/services/cdn/mgmt/2020-09-01/cdn" // nolint: staticcheck
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func FlattenArmCdnEndpointActionUrlRedirect(input cdn.BasicDeliveryRuleAction) (*map[string]interface{}, error) {
	action, ok := input.AsURLRedirectAction()
	if !ok {
		return nil, fmt.Errorf("expected a delivery rule url redirect action!")
	}

	customHostname := ""
	customPath := ""
	fragment := ""
	queryString := ""
	protocol := ""
	redirectType := ""

	if params := action.Parameters; params != nil {
		redirectType = string(params.RedirectType)
		protocol = string(params.DestinationProtocol)

		if params.CustomHostname != nil {
			customHostname = *params.CustomHostname
		}

		if params.CustomPath != nil {
			customPath = *params.CustomPath
		}

		if params.CustomQueryString != nil {
			queryString = *params.CustomQueryString
		}

		if params.CustomFragment != nil {
			fragment = *params.CustomFragment
		}
	}

	return &map[string]interface{}{
		"fragment":      fragment,
		"hostname":      customHostname,
		"query_string":  queryString,
		"path":          customPath,
		"protocol":      protocol,
		"redirect_type": redirectType,
	}, nil
}
