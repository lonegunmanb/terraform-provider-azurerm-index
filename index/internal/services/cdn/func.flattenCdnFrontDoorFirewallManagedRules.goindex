package github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn
import (
	"context"
	"fmt"
	"strconv"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	waf "github.com/hashicorp/go-azure-sdk/resource-manager/frontdoor/2024-02-01/webapplicationfirewallpolicies"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenCdnFrontDoorFirewallManagedRules(input *waf.ManagedRuleSetList) []interface{} {
	if input == nil || input.ManagedRuleSets == nil {
		return []interface{}{}
	}

	results := make([]interface{}, 0)
	for _, r := range *input.ManagedRuleSets {
		ruleSetType := r.RuleSetType
		ruleSetVersion := r.RuleSetVersion
		ruleSetAction := string(pointer.From(r.RuleSetAction))

		results = append(results, map[string]interface{}{
			"exclusion": flattenCdnFrontDoorFirewallExclusions(r.Exclusions),
			"override":  flattenCdnFrontDoorFirewallOverrides(r.RuleGroupOverrides),
			"type":      ruleSetType,
			"version":   ruleSetVersion,
			"action":    ruleSetAction,
		})
	}

	return results
}
