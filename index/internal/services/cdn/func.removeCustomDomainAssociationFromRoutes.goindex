package github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn
import (
	"fmt"
	"strings"

	"github.com/Azure/azure-sdk-for-go/services/cdn/mgmt/2021-06-01/cdn" // nolint: staticcheck
	dnsValidate "github.com/hashicorp/go-azure-sdk/resource-manager/dns/2018-05-01/zones"
	waf "github.com/hashicorp/go-azure-sdk/resource-manager/frontdoor/2024-02-01/webapplicationfirewallpolicies"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/azuresdkhacks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func removeCustomDomainAssociationFromRoutes(d *pluginsdk.ResourceData, meta interface{}, routes *[]parse.FrontDoorRouteId, customDomainID *parse.FrontDoorCustomDomainId) error {
	if len(*routes) != 0 && routes != nil {
		for _, route := range *routes {
			// lock the route resource for update...
			locks.ByName(route.RouteName, cdnFrontDoorRouteResourceName)
			defer locks.UnlockByName(route.RouteName, cdnFrontDoorRouteResourceName)

			// Check to see if the route still exists and grab its properties...
			// NOTE: cdnFrontDoorRouteResourceName is defined in the "cdn_frontdoor_route_disable_link_to_default_domain_resource" file
			// ignore the error because that could just mean that the route has already been deleted...
			customDomains, props, err := getRouteProperties(d, meta, &route, cdnFrontDoorCustomDomainResourceName)
			if err == nil {
				// Check to make sure the custom domain is still associated with the route
				isAssociated := sliceContainsString(customDomains, customDomainID.ID())

				if isAssociated {
					// it is, now removed the association...
					newDomains := sliceRemoveString(customDomains, customDomainID.ID())
					if err := updateRouteAssociations(d, meta, &route, newDomains, props, customDomainID); err != nil {
						return err
					}
				}
			}
		}
	}

	return nil
}
