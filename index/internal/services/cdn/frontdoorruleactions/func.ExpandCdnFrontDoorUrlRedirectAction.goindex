package github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/frontdooractions
import (
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/cdn/2024-09-01/rules"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/parse"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func ExpandCdnFrontDoorUrlRedirectAction(input []interface{}) (*[]rules.DeliveryRuleAction, error) {
	output := make([]rules.DeliveryRuleAction, 0)

	m := InitializeCdnFrontDoorActionMappings()

	for _, v := range input {
		item := v.(map[string]interface{})

		urlRedirectAction := rules.URLRedirectAction{
			Name: m.URLRedirect.Name,
			Parameters: rules.URLRedirectActionParameters{
				TypeName:            rules.DeliveryRuleActionParametersType(m.URLRedirect.TypeName),
				RedirectType:        rules.RedirectType(item["redirect_type"].(string)),
				DestinationProtocol: pointer.To(rules.DestinationProtocol(item["redirect_protocol"].(string))),
				CustomPath:          pointer.To(item["destination_path"].(string)),
				CustomHostname:      pointer.To(item["destination_hostname"].(string)),
				CustomQueryString:   pointer.To(item["query_string"].(string)),
				CustomFragment:      pointer.To(item["destination_fragment"].(string)),
			},
		}

		output = append(output, urlRedirectAction)
	}

	return &output, nil
}
