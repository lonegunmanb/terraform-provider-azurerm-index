package github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/azuresdkhacks
import (
	"context"
	"encoding/json"
	"net/http"

	"github.com/Azure/azure-sdk-for-go/services/cdn/mgmt/2021-06-01/cdn" // nolint: staticcheck
	"github.com/Azure/go-autorest/autorest"
)
func (rupp RouteUpdatePropertiesParameters) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})

	objectMap["customDomains"] = rupp.CustomDomains

	if rupp.OriginGroup != nil {
		objectMap["originGroup"] = rupp.OriginGroup
	}

	// OriginPath must be set to nil to be removed
	objectMap["originPath"] = rupp.OriginPath

	if rupp.RuleSets != nil {
		objectMap["ruleSets"] = rupp.RuleSets
	}
	if rupp.SupportedProtocols != nil {
		objectMap["supportedProtocols"] = rupp.SupportedProtocols
	}
	if rupp.PatternsToMatch != nil {
		objectMap["patternsToMatch"] = rupp.PatternsToMatch
	}

	objectMap["cacheConfiguration"] = rupp.CacheConfiguration

	if rupp.ForwardingProtocol != "" {
		objectMap["forwardingProtocol"] = rupp.ForwardingProtocol
	}
	if rupp.LinkToDefaultDomain != "" {
		objectMap["linkToDefaultDomain"] = rupp.LinkToDefaultDomain
	}
	if rupp.HTTPSRedirect != "" {
		objectMap["httpsRedirect"] = rupp.HTTPSRedirect
	}
	if rupp.EnabledState != "" {
		objectMap["enabledState"] = rupp.EnabledState
	}
	return json.Marshal(objectMap)
}
