package github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/deliveryruleconditions
import (
	"fmt"

	"github.com/Azure/azure-sdk-for-go/services/cdn/mgmt/2020-09-01/cdn" // nolint: staticcheck
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func URLFileExtension() *pluginsdk.Resource {
	return &pluginsdk.Resource{
		Schema: map[string]*pluginsdk.Schema{
			"operator": {
				Type:     pluginsdk.TypeString,
				Required: true,
				ValidateFunc: validation.StringInSlice([]string{
					string(cdn.URLFileExtensionOperatorAny),
					string(cdn.URLFileExtensionOperatorBeginsWith),
					string(cdn.URLFileExtensionOperatorContains),
					string(cdn.URLFileExtensionOperatorEndsWith),
					string(cdn.URLFileExtensionOperatorEqual),
					string(cdn.URLFileExtensionOperatorGreaterThan),
					string(cdn.URLFileExtensionOperatorGreaterThanOrEqual),
					string(cdn.URLFileExtensionOperatorLessThan),
					string(cdn.URLFileExtensionOperatorLessThanOrEqual),
				}, false),
			},

			"negate_condition": {
				Type:     pluginsdk.TypeBool,
				Optional: true,
				Default:  false,
			},

			"match_values": {
				Type:     pluginsdk.TypeSet,
				Optional: true,
				MinItems: 1,
				Elem: &pluginsdk.Schema{
					Type:         pluginsdk.TypeString,
					ValidateFunc: validation.StringIsNotWhiteSpace,
				},
			},

			"transforms": {
				Type:     pluginsdk.TypeList,
				Optional: true,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
					ValidateFunc: validation.StringInSlice([]string{
						string(cdn.TransformLowercase),
						string(cdn.TransformUppercase),
					}, false),
				},
			},
		},
	}
}
