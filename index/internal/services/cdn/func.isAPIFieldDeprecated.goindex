package github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn
import (
	"time"
)
func isAPIFieldDeprecated(deprecationDate string) bool {
	// Parse the deprecation date
	deprecationTime, err := time.Parse("2006-01-02", deprecationDate)
	if err != nil {
		// If we can't parse the date, assume it's not deprecated to be safe
		return false
	}

	// Load Los Angeles timezone
	losAngelesLocation, err := time.LoadLocation("America/Los_Angeles")
	if err != nil {
		// Fallback to UTC if we can't load LA timezone
		losAngelesLocation = time.UTC
	}

	// Get current time in client's local timezone
	clientNow := time.Now()

	// Get current time in Los Angeles timezone
	losAngelesNow := time.Now().In(losAngelesLocation)

	// Set deprecation time to start of day in Los Angeles timezone
	deprecationTimeLA := time.Date(
		deprecationTime.Year(),
		deprecationTime.Month(),
		deprecationTime.Day(),
		0, 0, 0, 0,
		losAngelesLocation,
	)

	// Convert deprecation time to client's timezone for comparison
	deprecationTimeClient := deprecationTimeLA.In(clientNow.Location())

	// Check if either the client time or LA time has passed the deprecation date
	// We use "either" to handle edge cases around timezone boundaries
	clientPassed := clientNow.After(deprecationTimeClient) || clientNow.Equal(deprecationTimeClient)
	laPassed := losAngelesNow.After(deprecationTimeLA) || losAngelesNow.Equal(deprecationTimeLA)

	return clientPassed || laPassed
}
