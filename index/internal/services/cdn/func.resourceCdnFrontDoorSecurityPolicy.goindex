package github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn
import (
	"errors"
	"fmt"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/cdn/2024-02-01/profiles"
	"github.com/hashicorp/go-azure-sdk/resource-manager/cdn/2024-02-01/securitypolicies"
	waf "github.com/hashicorp/go-azure-sdk/resource-manager/frontdoor/2024-02-01/webapplicationfirewallpolicies"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cdn/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func resourceCdnFrontDoorSecurityPolicy() *pluginsdk.Resource {
	return &pluginsdk.Resource{
		Create: resourceCdnFrontdoorSecurityPolicyCreate,
		Read:   resourceCdnFrontdoorSecurityPolicyRead,
		Update: resourceCdnFrontdoorSecurityPolicyUpdate,
		Delete: resourceCdnFrontdoorSecurityPolicyDelete,

		Timeouts: &pluginsdk.ResourceTimeout{
			Create: pluginsdk.DefaultTimeout(30 * time.Minute),
			Read:   pluginsdk.DefaultTimeout(5 * time.Minute),
			Update: pluginsdk.DefaultTimeout(30 * time.Minute),
			Delete: pluginsdk.DefaultTimeout(30 * time.Minute),
		},

		Importer: pluginsdk.ImporterValidatingResourceId(func(id string) error {
			_, err := securitypolicies.ParseSecurityPolicyID(id)
			return err
		}),

		Schema: map[string]*pluginsdk.Schema{
			"name": {
				Type:         pluginsdk.TypeString,
				Required:     true,
				ForceNew:     true,
				ValidateFunc: validation.StringIsNotEmpty,
			},

			"cdn_frontdoor_profile_id": {
				Type:         pluginsdk.TypeString,
				Required:     true,
				ForceNew:     true,
				ValidateFunc: validate.FrontDoorProfileID,
			},

			"security_policies": {
				Type:     pluginsdk.TypeList,
				Required: true,
				MaxItems: 1,

				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"firewall": {
							Type:     pluginsdk.TypeList,
							Required: true,
							MaxItems: 1,

							Elem: &pluginsdk.Resource{
								Schema: map[string]*pluginsdk.Schema{
									"cdn_frontdoor_firewall_policy_id": {
										Type:         pluginsdk.TypeString,
										Required:     true,
										ForceNew:     true,
										ValidateFunc: validate.FrontDoorFirewallPolicyID,
									},

									"association": {
										Type:     pluginsdk.TypeList,
										Required: true,
										MaxItems: 1,

										Elem: &pluginsdk.Resource{
											Schema: map[string]*pluginsdk.Schema{
												// NOTE: The max number of domains vary depending on sku: 100 Standard, 500 Premium
												"domain": {
													Type:     pluginsdk.TypeList,
													Required: true,
													MaxItems: 500,

													Elem: &pluginsdk.Resource{
														Schema: map[string]*pluginsdk.Schema{
															"cdn_frontdoor_domain_id": {
																Type:         pluginsdk.TypeString,
																Required:     true,
																ValidateFunc: validate.FrontDoorSecurityPolicyDomainID,
															},

															"active": {
																Type:     pluginsdk.TypeBool,
																Computed: true,
															},
														},
													},
												},

												// NOTE: Per the service team the only acceptable value as of GA is "/*"
												"patterns_to_match": {
													Type:     pluginsdk.TypeList,
													Required: true,
													ForceNew: true,
													MaxItems: 1,

													Elem: &pluginsdk.Schema{
														Type: pluginsdk.TypeString,
														ValidateFunc: validation.StringInSlice([]string{
															"/*",
														}, false),
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
	}
}
