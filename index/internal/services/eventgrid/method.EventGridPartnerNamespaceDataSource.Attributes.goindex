package github.com/hashicorp/terraform-provider-azurerm/internal/services/eventgrid
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/eventgrid/2025-02-15/partnernamespaces"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func (r EventGridPartnerNamespaceDataSource) Attributes() map[string]*pluginsdk.Schema {
	return map[string]*pluginsdk.Schema{
		"location": commonschema.LocationComputed(),

		"endpoint": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},

		"inbound_ip_rule": {
			Type:     pluginsdk.TypeList,
			Computed: true,
			Elem: &pluginsdk.Resource{
				Schema: map[string]*pluginsdk.Schema{
					"ip_mask": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},
					"action": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},
				},
			},
		},

		"local_authentication_enabled": {
			Type:     pluginsdk.TypeBool,
			Computed: true,
		},

		"partner_registration_id": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},

		"partner_topic_routing_mode": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},

		"public_network_access": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},

		"tags": commonschema.TagsDataSource(),
	}
}
