package github.com/hashicorp/terraform-provider-azurerm/internal/services/eventgrid
import (
	"fmt"
	"log"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/eventgrid/2025-02-15/domains"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenDomainInputMappingDefaultValues(input domains.InputSchemaMapping) []interface{} {
	output := make([]interface{}, 0)
	val, ok := input.(domains.JsonInputSchemaMapping)
	if ok {
		if props := val.Properties; props != nil {
			dataVersion := ""
			if props.DataVersion != nil && props.DataVersion.DefaultValue != nil {
				dataVersion = *props.DataVersion.DefaultValue
			}

			eventType := ""
			if props.EventType != nil && props.EventType.DefaultValue != nil {
				eventType = *props.EventType.DefaultValue
			}

			subject := ""
			if props.Subject != nil && props.Subject.DefaultValue != nil {
				subject = *props.Subject.DefaultValue
			}

			output = append(output, map[string]interface{}{
				"data_version": dataVersion,
				"event_type":   eventType,
				"subject":      subject,
			})
		}
	}

	return output
}
