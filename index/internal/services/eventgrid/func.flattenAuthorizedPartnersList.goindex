package github.com/hashicorp/terraform-provider-azurerm/internal/services/eventgrid
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/eventgrid/2022-06-15/partnerconfigurations"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenAuthorizedPartnersList(partner *[]partnerconfigurations.Partner) []PartnerAuthorization {
	partnerAuthorizations := make([]PartnerAuthorization, 0)

	if partner == nil {
		return partnerAuthorizations
	}

	for _, partnerAuth := range *partner {
		partnerAuthorizations = append(partnerAuthorizations, PartnerAuthorization{
			PartnerName:                      pointer.From(partnerAuth.PartnerName),
			PartnerRegistrationId:            pointer.From(partnerAuth.PartnerRegistrationImmutableId),
			AuthorizationExpirationTimeInUtc: pointer.From(partnerAuth.AuthorizationExpirationTimeInUtc),
		})
	}

	return partnerAuthorizations
}
