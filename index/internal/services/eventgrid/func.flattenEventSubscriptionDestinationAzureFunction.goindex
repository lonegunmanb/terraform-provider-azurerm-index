package github.com/hashicorp/terraform-provider-azurerm/internal/services/eventgrid
import (
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/eventgrid/2025-02-15/eventsubscriptions"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenEventSubscriptionDestinationAzureFunction(input eventsubscriptions.EventSubscriptionDestination) []interface{} {
	output := make([]interface{}, 0)

	val, ok := input.(eventsubscriptions.AzureFunctionEventSubscriptionDestination)
	if ok && val.Properties != nil {
		props := *val.Properties
		return append(output, map[string]interface{}{
			"function_id":                       pointer.From(props.ResourceId),
			"max_events_per_batch":              int(pointer.From(props.MaxEventsPerBatch)),
			"preferred_batch_size_in_kilobytes": int(pointer.From(props.PreferredBatchSizeInKilobytes)),
		})
	}

	return output
}
