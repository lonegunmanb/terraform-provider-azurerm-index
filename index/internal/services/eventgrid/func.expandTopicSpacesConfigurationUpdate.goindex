package github.com/hashicorp/terraform-provider-azurerm/internal/services/eventgrid
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/eventgrid/2023-12-15-preview/namespaces"
	"github.com/hashicorp/go-azure-sdk/resource-manager/eventgrid/2025-02-15/topics"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandTopicSpacesConfigurationUpdate(input []TopicSpacesConfigurationModel) *namespaces.UpdateTopicSpacesConfigurationInfo {
	if input == nil {
		return nil
	}

	topicSpacesConfig := namespaces.UpdateTopicSpacesConfigurationInfo{
		State: pointer.To(namespaces.TopicSpacesConfigurationStateEnabled),
		ClientAuthentication: &namespaces.ClientAuthenticationSettings{
			AlternativeAuthenticationNameSources: expandAlternativeAuthenticationNameSources(input[0].AlternativeAuthenticationNameSources),
		},
		MaximumClientSessionsPerAuthenticationName: pointer.To(input[0].MaximumClientSessionsPerAuthenticationName),
		MaximumSessionExpiryInHours:                pointer.To(input[0].MaximumSessionExpiryInHours),
		RouteTopicResourceId:                       pointer.To(input[0].RouteTopicResourceId),
		RoutingEnrichments: &namespaces.RoutingEnrichments{
			Dynamic: expandDynamicRoutingEnrichments(input[0].DynamicRoutingEnrichment),
			Static:  expandStaticRoutingEnrichments(input[0].StaticRoutingEnrichment),
		},
	}
	return &topicSpacesConfig
}
