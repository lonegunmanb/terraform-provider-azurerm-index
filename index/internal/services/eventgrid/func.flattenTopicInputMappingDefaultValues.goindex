package github.com/hashicorp/terraform-provider-azurerm/internal/services/eventgrid
import (
	"fmt"
	"log"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/eventgrid/2025-02-15/topics"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenTopicInputMappingDefaultValues(input topics.InputSchemaMapping) []interface{} {
	val, ok := input.(topics.JsonInputSchemaMapping)
	if !ok || val.Properties == nil {
		return []interface{}{}
	}

	dataVersion := ""
	eventType := ""
	subject := ""
	if val.Properties != nil {
		if val.Properties.DataVersion != nil && val.Properties.DataVersion.DefaultValue != nil {
			dataVersion = *val.Properties.DataVersion.DefaultValue
		}
		if val.Properties.EventType != nil && val.Properties.EventType.DefaultValue != nil {
			eventType = *val.Properties.EventType.DefaultValue
		}
		if val.Properties.Subject != nil && val.Properties.Subject.DefaultValue != nil {
			subject = *val.Properties.Subject.DefaultValue
		}
	}

	return []interface{}{
		map[string]interface{}{
			"data_version": dataVersion,
			"event_type":   eventType,
			"subject":      subject,
		},
	}
}
