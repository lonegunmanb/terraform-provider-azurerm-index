package github.com/hashicorp/terraform-provider-azurerm/internal/services/oracle
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/oracledatabase/2025-03-01/autonomousdatabases"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/oracle/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandLongTermBackupSchedule(input []LongTermBackUpScheduleDetails) *autonomousdatabases.LongTermBackUpScheduleDetails {
	if len(input) == 0 {
		return nil
	}
	schedule := input[0]
	return &autonomousdatabases.LongTermBackUpScheduleDetails{
		RepeatCadence:         pointer.To(autonomousdatabases.RepeatCadenceType(schedule.RepeatCadence)),
		TimeOfBackup:          pointer.To(schedule.TimeOfBackup),
		RetentionPeriodInDays: pointer.To(schedule.RetentionPeriodInDays),
		IsDisabled:            pointer.To(!schedule.Enabled),
	}
}
