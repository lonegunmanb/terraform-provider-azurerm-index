package github.com/hashicorp/terraform-provider-azurerm/internal/services/oracle
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/zones"
	"github.com/hashicorp/go-azure-sdk/resource-manager/oracledatabase/2025-03-01/cloudexadatainfrastructures"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/oracle/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func FlattenMaintenanceWindow(maintenanceWindow *cloudexadatainfrastructures.MaintenanceWindow) []MaintenanceWindowModel {
	output := make([]MaintenanceWindowModel, 0)
	if maintenanceWindow != nil {
		return append(output, MaintenanceWindowModel{
			DaysOfWeek:      FlattenDayOfWeek(maintenanceWindow.DaysOfWeek),
			HoursOfDay:      pointer.From(maintenanceWindow.HoursOfDay),
			LeadTimeInWeeks: pointer.From(maintenanceWindow.LeadTimeInWeeks),
			Months:          FlattenMonths(maintenanceWindow.Months),
			PatchingMode:    string(pointer.From(maintenanceWindow.PatchingMode)),
			Preference:      string(pointer.From(maintenanceWindow.Preference)),
			WeeksOfMonth:    pointer.From(maintenanceWindow.WeeksOfMonth),
		})
	}
	return output
}
