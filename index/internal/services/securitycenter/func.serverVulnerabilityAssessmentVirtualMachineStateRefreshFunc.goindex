package github.com/hashicorp/terraform-provider-azurerm/internal/services/securitycenter
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/Azure/azure-sdk-for-go/services/preview/security/mgmt/v3.0/security" // nolint: staticcheck
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/securitycenter/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func serverVulnerabilityAssessmentVirtualMachineStateRefreshFunc(ctx context.Context, client *security.ServerVulnerabilityAssessmentClient, resourceGroup, name string) pluginsdk.StateRefreshFunc {
	return func() (interface{}, string, error) {
		resp, err := client.Get(ctx, resourceGroup, computeProvider, vmType, name)
		if err != nil {
			if utils.ResponseWasNotFound(resp.Response) {
				return nil, "Pending", nil
			}
			return nil, "Error", err
		}

		return "Succeeded", "Succeeded", nil
	}
}
