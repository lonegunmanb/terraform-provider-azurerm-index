package github.com/hashicorp/terraform-provider-azurerm/internal/services/postgres
import (
	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func (r Registration) SupportedResources() map[string]*pluginsdk.Resource {
	resources := map[string]*pluginsdk.Resource{
		"azurerm_postgresql_flexible_server":                                resourcePostgresqlFlexibleServer(),
		"azurerm_postgresql_flexible_server_firewall_rule":                  resourcePostgresqlFlexibleServerFirewallRule(),
		"azurerm_postgresql_flexible_server_configuration":                  resourcePostgresqlFlexibleServerConfiguration(),
		"azurerm_postgresql_flexible_server_database":                       resourcePostgresqlFlexibleServerDatabase(),
		"azurerm_postgresql_flexible_server_active_directory_administrator": resourcePostgresqlFlexibleServerAdministrator(),
	}

	if !features.FivePointOh() {
		resources["azurerm_postgresql_server"] = resourcePostgreSQLServer()
		resources["azurerm_postgresql_active_directory_administrator"] = resourcePostgreSQLAdministrator()
		resources["azurerm_postgresql_configuration"] = resourcePostgreSQLConfiguration()
		resources["azurerm_postgresql_database"] = resourcePostgreSQLDatabase()
		resources["azurerm_postgresql_firewall_rule"] = resourcePostgreSQLFirewallRule()
		resources["azurerm_postgresql_server_key"] = resourcePostgreSQLServerKey()
		resources["azurerm_postgresql_virtual_network_rule"] = resourcePostgreSQLVirtualNetworkRule()
	}

	return resources
}
