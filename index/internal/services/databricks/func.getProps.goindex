package github.com/hashicorp/terraform-provider-azurerm/internal/services/databricks
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/databricks/2024-05-01/workspaces"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/databricks/migration"
	keyVaultParse "github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/parse"
	keyVaultValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func getProps(workspace workspaces.Workspace, params *workspaces.WorkspaceCustomParameters) workspaces.Workspace {
	props := workspaces.Workspace{
		Location: workspace.Location,
		Sku:      workspace.Sku,
		Properties: workspaces.WorkspaceProperties{
			PublicNetworkAccess:    workspace.Properties.PublicNetworkAccess,
			ManagedResourceGroupId: workspace.Properties.ManagedResourceGroupId,
			Parameters:             params,
		},
		Tags: workspace.Tags,
	}

	// If notebook encryption exists add it to the properties
	if workspace.Properties.Encryption != nil {
		props.Properties.Encryption = workspace.Properties.Encryption
	}

	// This is only valid if Private Link only is set
	if workspace.Properties.PublicNetworkAccess != nil && *workspace.Properties.PublicNetworkAccess == workspaces.PublicNetworkAccessDisabled {
		props.Properties.RequiredNsgRules = workspace.Properties.RequiredNsgRules
	}

	return props
}
