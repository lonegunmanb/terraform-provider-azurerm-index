package github.com/hashicorp/terraform-provider-azurerm/internal/services/netapp
import (
	"context"
	"fmt"
	"log"
	"strconv"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/netapp/2024-03-01/capacitypools"
	"github.com/hashicorp/go-azure-sdk/resource-manager/netapp/2024-03-01/snapshotpolicy"
	"github.com/hashicorp/go-azure-sdk/resource-manager/netapp/2024-03-01/volumes"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	netAppValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/netapp/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandNetAppSnapshotPolicyDailySchedule(input []interface{}) *snapshotpolicy.DailySchedule {
	if len(input) == 0 || input[0] == nil {
		return &snapshotpolicy.DailySchedule{}
	}

	dailyScheduleObject := snapshotpolicy.DailySchedule{}

	dailyScheduleRaw := input[0].(map[string]interface{})

	if v, ok := dailyScheduleRaw["snapshots_to_keep"]; ok {
		dailyScheduleObject.SnapshotsToKeep = utils.Int64(int64(v.(int)))
	}
	if v, ok := dailyScheduleRaw["hour"]; ok {
		dailyScheduleObject.Hour = utils.Int64(int64(v.(int)))
	}
	if v, ok := dailyScheduleRaw["minute"]; ok {
		dailyScheduleObject.Minute = utils.Int64(int64(v.(int)))
	}

	return &dailyScheduleObject
}
