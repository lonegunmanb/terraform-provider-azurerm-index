package github.com/hashicorp/terraform-provider-azurerm/internal/services/netapp
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/netapp/2024-03-01/volumegroups"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	netAppModels "github.com/hashicorp/terraform-provider-azurerm/internal/services/netapp/models"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/netapp/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func (r NetAppVolumeGroupOracleDataSource) Attributes() map[string]*pluginsdk.Schema {
	return map[string]*pluginsdk.Schema{
		"location": commonschema.LocationComputed(),

		"group_description": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},

		"application_identifier": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},

		"volume": {
			Type:     pluginsdk.TypeList,
			Computed: true,
			Elem: &pluginsdk.Resource{
				Schema: map[string]*pluginsdk.Schema{
					"id": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},

					"name": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},

					"capacity_pool_id": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},

					"proximity_placement_group_id": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},

					"zone": commonschema.ZoneSingleComputed(),

					"volume_spec_name": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},

					"volume_path": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},

					"service_level": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},

					"subnet_id": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},

					"protocols": {
						Type:     pluginsdk.TypeList,
						Computed: true,
						Elem: &pluginsdk.Schema{
							Type: pluginsdk.TypeString,
						},
					},

					"security_style": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},

					"storage_quota_in_gb": {
						Type:     pluginsdk.TypeInt,
						Computed: true,
					},

					"throughput_in_mibps": {
						Type:     pluginsdk.TypeFloat,
						Required: true,
					},

					"export_policy_rule": {
						Type:     pluginsdk.TypeList,
						Computed: true,
						Elem: &pluginsdk.Resource{
							Schema: map[string]*pluginsdk.Schema{
								"rule_index": {
									Type:     pluginsdk.TypeInt,
									Computed: true,
								},

								"allowed_clients": {
									Type:     pluginsdk.TypeString,
									Computed: true,
								},

								"nfsv3_enabled": {
									Type:     pluginsdk.TypeBool,
									Computed: true,
								},

								"nfsv41_enabled": {
									Type:     pluginsdk.TypeBool,
									Computed: true,
								},

								"unix_read_only": {
									Type:     pluginsdk.TypeBool,
									Computed: true,
								},

								"unix_read_write": {
									Type:     pluginsdk.TypeBool,
									Computed: true,
								},

								"root_access_enabled": {
									Type:     pluginsdk.TypeBool,
									Computed: true,
								},
							},
						},
					},

					"tags": commonschema.TagsDataSource(),

					"snapshot_directory_visible": {
						Type:     pluginsdk.TypeBool,
						Computed: true,
					},

					"mount_ip_addresses": {
						Type:     pluginsdk.TypeList,
						Computed: true,
						Elem: &pluginsdk.Schema{
							Type: pluginsdk.TypeString,
						},
					},

					"data_protection_replication": {
						Type:     pluginsdk.TypeList,
						Computed: true,
						Elem: &pluginsdk.Resource{
							Schema: map[string]*pluginsdk.Schema{
								"endpoint_type": {
									Type:     pluginsdk.TypeString,
									Computed: true,
								},

								"remote_volume_location": commonschema.LocationComputed(),

								"remote_volume_resource_id": {
									Type:     pluginsdk.TypeString,
									Computed: true,
								},

								"replication_frequency": {
									Type:     pluginsdk.TypeString,
									Computed: true,
								},
							},
						},
					},

					"data_protection_snapshot_policy": {
						Type:     pluginsdk.TypeList,
						Computed: true,
						Elem: &pluginsdk.Resource{
							Schema: map[string]*pluginsdk.Schema{
								"snapshot_policy_id": {
									Type:     pluginsdk.TypeString,
									Computed: true,
								},
							},
						},
					},

					"encryption_key_source": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},

					"key_vault_private_endpoint_id": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},

					"network_features": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},
				},
			},
		},
	}
}
