package github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql
import (
	"context"
	"fmt"
	"log"
	"math"
	"regexp"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/compute/2024-03-01/virtualmachines"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sqlvirtualmachine/2023-10-01/sqlvirtualmachinegroups"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sqlvirtualmachine/2023-10-01/sqlvirtualmachines"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/helper"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenSqlVirtualMachineAssessmentSettings(assessmentSettings *sqlvirtualmachines.AssessmentSettings) []interface{} {
	if assessmentSettings == nil || assessmentSettings.Enable == nil || !*assessmentSettings.Enable {
		return []interface{}{}
	}

	var (
		runImmediately bool
		enabled        bool
	)
	if assessmentSettings.RunImmediately != nil {
		runImmediately = *assessmentSettings.RunImmediately
	}

	if assessmentSettings.Enable != nil {
		enabled = *assessmentSettings.Enable
	}

	var attr map[string]interface{}
	if schedule := assessmentSettings.Schedule; schedule != nil {
		var (
			weeklyInterval    int64
			monthlyOccurrence int64
			dayOfWeek         string
			startTime         string
		)

		if schedule.WeeklyInterval != nil {
			weeklyInterval = *schedule.WeeklyInterval
		}
		if schedule.MonthlyOccurrence != nil {
			monthlyOccurrence = *schedule.MonthlyOccurrence
		}
		if schedule.DayOfWeek != nil {
			dayOfWeek = string(*schedule.DayOfWeek)
		}
		if schedule.StartTime != nil {
			startTime = *schedule.StartTime
		}

		attr = map[string]interface{}{
			"weekly_interval":    weeklyInterval,
			"monthly_occurrence": monthlyOccurrence,
			"day_of_week":        dayOfWeek,
			"start_time":         startTime,
		}
	}

	return []interface{}{
		map[string]interface{}{
			"run_immediately": runImmediately,
			"enabled":         enabled,
			"schedule":        []interface{}{attr},
		},
	}
}
