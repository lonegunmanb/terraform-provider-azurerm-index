package github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql
import (
	"context"
	"fmt"
	"math"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/jobcredentials"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/jobsteps"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/jobtargetgroups"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandOutputTarget(input []JobStepOutputTarget) (*jobsteps.JobStepOutput, error) {
	if len(input) == 0 {
		return nil, nil
	}

	target := input[0]
	databaseId, err := commonids.ParseSqlDatabaseID(target.MsSqlDatabaseId)
	if err != nil {
		return nil, err
	}

	return pointer.To(jobsteps.JobStepOutput{
		Credential:        pointer.To(target.JobCredentialId),
		DatabaseName:      databaseId.DatabaseName,
		ResourceGroupName: pointer.To(databaseId.ResourceGroupName),
		SchemaName:        pointer.To(target.SchemaName),
		ServerName:        databaseId.ServerName,
		SubscriptionId:    pointer.To(databaseId.SubscriptionId),
		TableName:         target.TableName,
	}), nil
}
