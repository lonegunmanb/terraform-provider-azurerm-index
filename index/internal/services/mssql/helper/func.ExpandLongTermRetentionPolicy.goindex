package github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/helper
import (
	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/backupshorttermretentionpolicies"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/longtermretentionpolicies"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func ExpandLongTermRetentionPolicy(input []interface{}) *longtermretentionpolicies.BaseLongTermRetentionPolicyProperties {
	if len(input) == 0 || input[0] == nil {
		return nil
	}

	policy := input[0].(map[string]interface{})

	output := longtermretentionpolicies.BaseLongTermRetentionPolicyProperties{
		WeeklyRetention:  pointer.To("PT0S"),
		MonthlyRetention: pointer.To("PT0S"),
		YearlyRetention:  pointer.To("PT0S"),
		WeekOfYear:       pointer.To(int64(1)),
	}

	if v, ok := policy["weekly_retention"].(string); ok && v != "" {
		output.WeeklyRetention = pointer.To(v)
	}

	if v, ok := policy["monthly_retention"].(string); ok && v != "" {
		output.MonthlyRetention = pointer.To(v)
	}

	if v, ok := policy["yearly_retention"].(string); ok && v != "" {
		output.YearlyRetention = pointer.To(v)
	}

	if v, ok := policy["week_of_year"].(int); ok && v != 0 {
		output.WeekOfYear = pointer.To(int64(v))
	}
	return pointer.To(output)
}
