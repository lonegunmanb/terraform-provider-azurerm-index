package github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/helper
import (
	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/backupshorttermretentionpolicies"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/longtermretentionpolicies"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func LongTermRetentionPolicySchema() *pluginsdk.Schema {
	atLeastOneOf := []string{
		"long_term_retention_policy.0.weekly_retention", "long_term_retention_policy.0.monthly_retention",
		"long_term_retention_policy.0.yearly_retention", "long_term_retention_policy.0.week_of_year",
	}
	return &pluginsdk.Schema{
		Type:     pluginsdk.TypeList,
		Optional: true,
		Computed: true,
		MaxItems: 1,
		Elem: &pluginsdk.Resource{
			Schema: map[string]*pluginsdk.Schema{
				// WeeklyRetention - The weekly retention policy for an LTR backup in an ISO 8601 format.
				"weekly_retention": {
					Type:         pluginsdk.TypeString,
					Optional:     true,
					Default:      "PT0S",
					ValidateFunc: validate.ISO8601Duration,
					AtLeastOneOf: atLeastOneOf,
				},

				// MonthlyRetention - The monthly retention policy for an LTR backup in an ISO 8601 format.
				"monthly_retention": {
					Type:         pluginsdk.TypeString,
					Optional:     true,
					Default:      "PT0S",
					ValidateFunc: validate.ISO8601Duration,
					AtLeastOneOf: atLeastOneOf,
				},

				// YearlyRetention - The yearly retention policy for an LTR backup in an ISO 8601 format.
				"yearly_retention": {
					Type:         pluginsdk.TypeString,
					Optional:     true,
					Default:      "PT0S",
					ValidateFunc: validate.ISO8601Duration,
					AtLeastOneOf: atLeastOneOf,
				},

				// WeekOfYear - The week of year to take the yearly backup in an ISO 8601 format.
				"week_of_year": {
					Type:         pluginsdk.TypeInt,
					Optional:     true,
					Computed:     true,
					ValidateFunc: validation.IntBetween(0, 52),
					AtLeastOneOf: atLeastOneOf,
				},
			},
		},
	}
}
