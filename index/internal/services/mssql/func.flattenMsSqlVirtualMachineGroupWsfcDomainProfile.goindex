package github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sqlvirtualmachine/2023-10-01/availabilitygrouplisteners"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sqlvirtualmachine/2023-10-01/sqlvirtualmachinegroups"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tags"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenMsSqlVirtualMachineGroupWsfcDomainProfile(domainProfile *sqlvirtualmachinegroups.WsfcDomainProfile, storageAccountPrimaryKey string) []WsfcDomainProfile {
	if domainProfile == nil {
		return []WsfcDomainProfile{}
	}

	return []WsfcDomainProfile{
		{
			Fqdn:                        pointer.From(domainProfile.DomainFqdn),
			OrganizationalUnitPath:      pointer.From(domainProfile.OuPath),
			ClusterBootstrapAccountName: pointer.From(domainProfile.ClusterBootstrapAccount),
			ClusterOperatorAccountName:  pointer.From(domainProfile.ClusterOperatorAccount),
			SqlServiceAccountName:       pointer.From(domainProfile.SqlServiceAccount),
			StorageAccountUrl:           pointer.From(domainProfile.StorageAccountURL),
			ClusterSubnetType:           string(pointer.From(domainProfile.ClusterSubnetType)),
			StorageAccountPrimaryKey:    storageAccountPrimaryKey,
		},
	}
}
