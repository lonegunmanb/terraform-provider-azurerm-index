package github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/failovergroups"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func flattenPartnerServers(input []failovergroups.PartnerInfo) []PartnerServerDataSourceModel {
	output := make([]PartnerServerDataSourceModel, 0)
	if input == nil {
		return output
	}

	for _, partner := range input {
		model := PartnerServerDataSourceModel{
			Location: location.NormalizeNilable(partner.Location),
			Role:     string(pointer.From(partner.ReplicationRole)),
			ID:       partner.Id,
		}

		output = append(output, model)
	}

	return output
}
