package github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/databasevulnerabilityassessmentrulebaselines"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func flattenBaselineResult(baselineResults []databasevulnerabilityassessmentrulebaselines.DatabaseVulnerabilityAssessmentRuleBaselineItem) []map[string]interface{} {
	resp := make([]map[string]interface{}, 0)

	for _, baselineResult := range baselineResults {
		output := map[string]interface{}{}

		if result := baselineResult.Result; result != nil {
			output["result"] = result
		}

		resp = append(resp, output)
	}

	return resp
}
