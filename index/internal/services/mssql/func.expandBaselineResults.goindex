package github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/databasevulnerabilityassessmentrulebaselines"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func expandBaselineResults(baselineResult *pluginsdk.Set) *databasevulnerabilityassessmentrulebaselines.DatabaseVulnerabilityAssessmentRuleBaseline {
	baselineResultList := baselineResult.List()

	baselineResults := make([]databasevulnerabilityassessmentrulebaselines.DatabaseVulnerabilityAssessmentRuleBaselineItem, len(baselineResultList))

	for i, baselineResult := range baselineResultList {
		result := make([]string, 0)
		baselineResultMap := baselineResult.(map[string]interface{})

		for _, s := range baselineResultMap["result"].([]interface{}) {
			result = append(result, s.(string))
		}

		baselineResults[i] = databasevulnerabilityassessmentrulebaselines.DatabaseVulnerabilityAssessmentRuleBaselineItem{
			Result: result,
		}
	}

	return &databasevulnerabilityassessmentrulebaselines.DatabaseVulnerabilityAssessmentRuleBaseline{
		Properties: &databasevulnerabilityassessmentrulebaselines.DatabaseVulnerabilityAssessmentRuleBaselineProperties{
			BaselineResults: baselineResults,
		},
	}
}
