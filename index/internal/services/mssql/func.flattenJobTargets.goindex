package github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/jobcredentials"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/jobs"
	"github.com/hashicorp/go-azure-sdk/resource-manager/sql/2023-08-01-preview/jobtargetgroups"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenJobTargets(input []jobtargetgroups.JobTarget) []MsSqlJobTarget {
	targets := make([]MsSqlJobTarget, 0)
	if len(input) == 0 {
		return targets
	}

	for _, v := range input {
		t := MsSqlJobTarget{
			DatabaseName:    pointer.From(v.DatabaseName),
			ElasticPoolName: pointer.From(v.ElasticPoolName),
			MembershipType:  string(pointer.From(v.MembershipType)),
			JobCredentialId: pointer.From(v.RefreshCredential),
			ServerName:      pointer.From(v.ServerName),
			Type:            string(v.Type),
		}

		targets = append(targets, t)
	}

	return targets
}
