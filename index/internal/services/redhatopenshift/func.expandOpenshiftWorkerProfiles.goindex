package github.com/hashicorp/terraform-provider-azurerm/internal/services/redhatopenshift
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/redhatopenshift/2023-09-04/openshiftclusters"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	commonValidate "github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/redhatopenshift/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandOpenshiftWorkerProfiles(input []WorkerProfile) *[]openshiftclusters.WorkerProfile {
	if len(input) == 0 {
		return nil
	}

	profiles := make([]openshiftclusters.WorkerProfile, 0)

	encryptionAtHost := openshiftclusters.EncryptionAtHostDisabled
	if input[0].EncryptionAtHostEnabled {
		encryptionAtHost = openshiftclusters.EncryptionAtHostEnabled
	}

	profile := openshiftclusters.WorkerProfile{
		Name:                pointer.To("worker"),
		VMSize:              pointer.To(input[0].VmSize),
		DiskSizeGB:          pointer.To(input[0].DiskSizeGb),
		SubnetId:            pointer.To(input[0].SubnetId),
		Count:               pointer.To(input[0].NodeCount),
		EncryptionAtHost:    pointer.To(encryptionAtHost),
		DiskEncryptionSetId: pointer.To(input[0].DiskEncryptionSetId),
	}

	profiles = append(profiles, profile)

	return &profiles
}
