package github.com/hashicorp/terraform-provider-azurerm/internal/services/web
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/Azure/azure-sdk-for-go/services/web/mgmt/2021-02-01/web" // nolint: staticcheck
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/relay/2021-11-01/hybridconnections"
	"github.com/hashicorp/go-azure-sdk/resource-manager/relay/2021-11-01/namespaces"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	azValidate "github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/web/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/web/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func findRelayNamespace(ctx context.Context, client *namespaces.NamespacesClient, subscriptionId, name string) (*string, error) {
	subId := commonids.NewSubscriptionID(subscriptionId)
	relayNSIterator, err := client.ListComplete(ctx, subId)
	if err != nil {
		return nil, fmt.Errorf("listing Relay Namespaces: %+v", err)
	}

	var found *namespaces.RelayNamespace
	for _, item := range relayNSIterator.Items {
		if item.Name != nil && *item.Name == name {
			found = &item
			break
		}
	}

	if found == nil || found.Id == nil {
		return nil, fmt.Errorf("could not find Relay Namespace with name: %q", name)
	}

	id, err := namespaces.ParseNamespaceID(*found.Id)
	if err != nil {
		return nil, fmt.Errorf("relay Namespace id not valid: %+v", err)
	}
	return &id.ResourceGroupName, nil
}
