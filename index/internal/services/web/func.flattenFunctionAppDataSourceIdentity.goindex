package github.com/hashicorp/terraform-provider-azurerm/internal/services/web
import (
	"fmt"
	"strings"
	"time"

	"github.com/Azure/azure-sdk-for-go/services/web/mgmt/2021-02-01/web" // nolint: staticcheck
	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/web/parse"
	webValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/web/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tags"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenFunctionAppDataSourceIdentity(input *web.ManagedServiceIdentity) (*[]interface{}, error) {
	var config *identity.SystemAndUserAssignedList

	if input != nil {
		config = &identity.SystemAndUserAssignedList{
			Type: identity.Type(string(input.Type)),
		}

		if input.PrincipalID != nil {
			config.PrincipalId = *input.PrincipalID
		}
		if input.TenantID != nil {
			config.TenantId = *input.TenantID
		}

		userAssignedIdentityIds := make([]string, 0)
		for k := range input.UserAssignedIdentities {
			userAssignedIdentityIds = append(userAssignedIdentityIds, k)
		}
		config.IdentityIds = userAssignedIdentityIds
	}

	return identity.FlattenSystemAndUserAssignedList(config)
}
