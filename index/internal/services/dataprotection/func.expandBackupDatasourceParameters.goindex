package github.com/hashicorp/terraform-provider-azurerm/internal/services/dataprotection
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dataprotection/2024-04-01/backupinstances"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dataprotection/2024-04-01/backuppolicies"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	resourceParse "github.com/hashicorp/terraform-provider-azurerm/internal/services/resource/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func expandBackupDatasourceParameters(input []BackupDatasourceParameters) *[]backupinstances.BackupDatasourceParameters {
	if len(input) == 0 {
		return nil
	}
	results := make([]backupinstances.BackupDatasourceParameters, 0)
	results = append(results, backupinstances.KubernetesClusterBackupDatasourceParameters{
		ExcludedNamespaces:           pointer.To(input[0].ExcludedNamespaces),
		ExcludedResourceTypes:        pointer.To(input[0].ExcludedResourceTypes),
		IncludeClusterScopeResources: input[0].ClusterScopeResourceEnabled,
		IncludedNamespaces:           pointer.To(input[0].IncludedNamespaces),
		IncludedResourceTypes:        pointer.To(input[0].IncludedResourceTypes),
		LabelSelectors:               pointer.To(input[0].LabelSelectors),
		SnapshotVolumes:              input[0].VolumeSnapshotEnabled,
	})
	return &results
}
