package github.com/hashicorp/terraform-provider-azurerm/internal/services/dataprotection
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dataprotection/2024-04-01/backupinstances"
	"github.com/hashicorp/go-azure-sdk/resource-manager/dataprotection/2024-04-01/backuppolicies"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	resourceParse "github.com/hashicorp/terraform-provider-azurerm/internal/services/resource/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func flattenBackupDatasourceParameters(input []backupinstances.BackupDatasourceParameters) *[]BackupDatasourceParameters {
	results := make([]BackupDatasourceParameters, 0)
	if len(input) == 0 {
		return &results
	}

	if item, ok := input[0].(backupinstances.KubernetesClusterBackupDatasourceParameters); ok {
		results = append(results, BackupDatasourceParameters{
			ExcludedNamespaces:          pointer.From(item.ExcludedNamespaces),
			ExcludedResourceTypes:       pointer.From(item.ExcludedResourceTypes),
			ClusterScopeResourceEnabled: item.IncludeClusterScopeResources,
			IncludedNamespaces:          pointer.From(item.IncludedNamespaces),
			IncludedResourceTypes:       pointer.From(item.IncludedResourceTypes),
			LabelSelectors:              pointer.From(item.LabelSelectors),
			VolumeSnapshotEnabled:       item.SnapshotVolumes,
		})
	}
	return &results
}
