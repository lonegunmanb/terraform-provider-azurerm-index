package github.com/hashicorp/terraform-provider-azurerm/internal/services/iotcentral/client
import (
	"context"
	"errors"
	"fmt"

	"github.com/Azure/go-autorest/autorest"
	"github.com/hashicorp/go-azure-sdk/resource-manager/iotcentral/2021-11-01-preview/apps"
	authWrapper "github.com/hashicorp/go-azure-sdk/sdk/auth/autorest"
	"github.com/hashicorp/go-azure-sdk/sdk/environments"
	"github.com/hashicorp/terraform-provider-azurerm/internal/common"
	dataplane "github.com/jackofallops/kermit/sdk/iotcentral/2022-10-31-preview/iotcentral"
)
func (c *Client) OrganizationsClient(ctx context.Context, subdomain string) (*dataplane.OrganizationsClient, error) {
	if !c.Endpoint.Available() {
		return nil, errors.New("unable to build SDK Client since IoTCentral is not available in this Azure Environment")
	}

	iotCentralAuth, err := c.authorizerFunc(c.Endpoint)
	if err != nil {
		return nil, fmt.Errorf("obtaining auth token for %q: %+v", c.Endpoint.Name(), err)
	}

	client := dataplane.NewOrganizationsClient(subdomain)
	c.configureClientFunc(&client.Client, authWrapper.AutorestAuthorizer(iotCentralAuth))

	return &client, nil
}
