package github.com/hashicorp/terraform-provider-azurerm/internal/services/iothub
import (
	"fmt"
	"log"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	eventhubValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/eventhub/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/iothub/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/iothub/parse"
	iothubValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/iothub/validate"
	servicebusValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/servicebus/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tags"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	devices "github.com/jackofallops/kermit/sdk/iothub/2022-04-30-preview/iothub"
)
func expandNetworkRuleSetProperties(d *pluginsdk.ResourceData) *devices.NetworkRuleSetProperties {
	networkRuleSet := d.Get("network_rule_set").([]interface{})
	networkRuleSetProps := devices.NetworkRuleSetProperties{}
	nrsMap := networkRuleSet[0].(map[string]interface{})

	networkRuleSetProps.DefaultAction = devices.DefaultAction(nrsMap["default_action"].(string))
	networkRuleSetProps.ApplyToBuiltInEventHubEndpoint = utils.Bool(nrsMap["apply_to_builtin_eventhub_endpoint"].(bool))
	ipRules := nrsMap["ip_rule"].([]interface{})

	if len(ipRules) != 0 {
		rules := make([]devices.NetworkRuleSetIPRule, 0)

		for _, r := range ipRules {
			rawRule := r.(map[string]interface{})
			rule := &devices.NetworkRuleSetIPRule{
				FilterName: utils.String(rawRule["name"].(string)),
				Action:     devices.NetworkRuleIPAction(rawRule["action"].(string)),
				IPMask:     utils.String(rawRule["ip_mask"].(string)),
			}
			rules = append(rules, *rule)
		}
		networkRuleSetProps.IPRules = &rules
	}
	return &networkRuleSetProps
}
