package github.com/hashicorp/terraform-provider-azurerm/internal/services/iothub
import (
	"fmt"
	"log"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	eventhubValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/eventhub/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/iothub/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/iothub/parse"
	iothubValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/iothub/validate"
	servicebusValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/servicebus/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tags"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	devices "github.com/jackofallops/kermit/sdk/iothub/2022-04-30-preview/iothub"
)
func expandIoTHubCloudToDevice(d *pluginsdk.ResourceData) *devices.CloudToDeviceProperties {
	ctdList := d.Get("cloud_to_device").([]interface{})
	if len(ctdList) == 0 {
		return nil
	}
	cloudToDevice := devices.CloudToDeviceProperties{}
	ctdMap := ctdList[0].(map[string]interface{})
	defaultTimeToLive := ctdMap["default_ttl"].(string)

	cloudToDevice.DefaultTTLAsIso8601 = &defaultTimeToLive
	cloudToDevice.MaxDeliveryCount = utils.Int32(int32(ctdMap["max_delivery_count"].(int)))
	feedback := ctdMap["feedback"].([]interface{})

	cloudToDeviceFeedback := devices.FeedbackProperties{}
	if len(feedback) > 0 {
		feedbackMap := feedback[0].(map[string]interface{})

		lockDuration := feedbackMap["lock_duration"].(string)
		timeToLive := feedbackMap["time_to_live"].(string)

		cloudToDeviceFeedback.TTLAsIso8601 = &timeToLive
		cloudToDeviceFeedback.LockDurationAsIso8601 = &lockDuration
		cloudToDeviceFeedback.MaxDeliveryCount = utils.Int32(int32(feedbackMap["max_delivery_count"].(int)))
	}

	cloudToDevice.Feedback = &cloudToDeviceFeedback

	return &cloudToDevice
}
