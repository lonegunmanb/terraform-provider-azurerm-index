package github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement/schemaz
import (
	"encoding/json"
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/apimanagement/2022-08-01/apioperation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func FlattenApiManagementOperationParameterContract(input *[]apioperation.ParameterContract) ([]interface{}, error) {
	if input == nil {
		return []interface{}{}, nil
	}

	outputs := make([]interface{}, 0)
	for _, v := range *input {
		output := map[string]interface{}{}

		output["name"] = v.Name
		output["description"] = pointer.From(v.Description)
		output["type"] = v.Type
		output["required"] = pointer.From(v.Required)
		output["default_value"] = pointer.From(v.DefaultValue)
		output["values"] = pluginsdk.NewSet(pluginsdk.HashString, utils.FlattenStringSlice(v.Values))

		if v.Examples != nil {
			example, err := FlattenApiManagementOperationParameterExampleContract(*v.Examples)
			if err != nil {
				return nil, err
			}
			output["example"] = example
		}

		output["schema_id"] = pointer.From(v.SchemaId)
		output["type_name"] = pointer.From(v.TypeName)

		outputs = append(outputs, output)
	}

	return outputs, nil
}
