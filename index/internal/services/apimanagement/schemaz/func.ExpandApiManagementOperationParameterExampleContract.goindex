package github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement/schemaz
import (
	"encoding/json"
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/apimanagement/2022-08-01/apioperation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func ExpandApiManagementOperationParameterExampleContract(input []interface{}) map[string]apioperation.ParameterExampleContract {
	if len(input) == 0 {
		return map[string]apioperation.ParameterExampleContract{}
	}

	outputs := make(map[string]apioperation.ParameterExampleContract)

	for _, v := range input {
		vs := v.(map[string]interface{})

		example := apioperation.ParameterExampleContract{}

		if vs["summary"] != nil {
			example.Summary = pointer.To(vs["summary"].(string))
		}

		if vs["description"] != nil {
			example.Description = pointer.To(vs["description"].(string))
		}

		if vs["value"] != nil {
			var js interface{}
			if json.Unmarshal([]byte(vs["value"].(string)), &js) == nil {
				example.Value = pointer.To(js)
			} else {
				example.Value = pointer.To(vs["value"])
			}
		}

		if vs["external_value"] != nil {
			example.ExternalValue = pointer.To(vs["external_value"].(string))
		}

		outputs[vs["name"].(string)] = example
	}

	return outputs
}
