package github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement
import (
	"context"
	"fmt"
	"html"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/apimanagement/2024-05-01/workspace"
	"github.com/hashicorp/go-azure-sdk/resource-manager/apimanagement/2024-05-01/workspacepolicy"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func (r ApiManagementWorkspacePolicyResource) Arguments() map[string]*pluginsdk.Schema {
	return map[string]*pluginsdk.Schema{
		"api_management_workspace_id": commonschema.ResourceIDReferenceRequiredForceNew(&workspace.WorkspaceId{}),

		"xml_content": {
			Type:     pluginsdk.TypeString,
			Optional: true,
			// NOTE: O+C when `xml_link` is provided, the API downloads it into `xml_content`.
			Computed:         true,
			ExactlyOneOf:     []string{"xml_link", "xml_content"},
			DiffSuppressFunc: XmlWithDotNetInterpolationsDiffSuppress,
		},

		"xml_link": {
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ExactlyOneOf: []string{"xml_link", "xml_content"},
			ValidateFunc: validation.IsURLWithHTTPorHTTPS,
		},
	}
}
