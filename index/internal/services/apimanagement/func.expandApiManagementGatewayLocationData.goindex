package github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/apimanagement/2022-08-01/gateway"
	"github.com/hashicorp/go-azure-sdk/resource-manager/apimanagement/2024-05-01/apimanagementservice"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement/schemaz"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func expandApiManagementGatewayLocationData(input []interface{}) *gateway.ResourceLocationDataContract {
	if len(input) == 0 {
		return nil
	}

	locationData := gateway.ResourceLocationDataContract{}

	vs := input[0].(map[string]interface{})
	for k, v := range vs {
		switch k {
		case "name":
			locationData.Name = v.(string)
		case "city":
			locationData.City = pointer.To(v.(string))
		case "district":
			locationData.District = pointer.To(v.(string))
		case "region":
			locationData.CountryOrRegion = pointer.To(v.(string))
		}
	}

	return &locationData
}
