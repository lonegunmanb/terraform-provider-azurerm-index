package github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement
import (
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/apimanagement/2022-08-01/logger"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement/schemaz"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/eventhub/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func expandApiManagementLoggerEventHub(input []interface{}) *map[string]string {
	credentials := make(map[string]string)
	eventHub := input[0].(map[string]interface{})

	connectionString := eventHub["connection_string"].(string)
	endpointAddress := eventHub["endpoint_uri"].(string)
	clientId := eventHub["user_assigned_identity_client_id"].(string)

	credentials["name"] = eventHub["name"].(string)
	if len(connectionString) > 0 {
		credentials["connectionString"] = connectionString
	} else if len(endpointAddress) > 0 {
		credentials["endpointAddress"] = endpointAddress
		// This field is required by the API and only accepts either a valid UUID or `SystemAssigned` as a value, so we default this to `SystemAssigned` in the create if the field is omitted
		credentials["identityClientId"] = "SystemAssigned"
		if clientId != "" {
			credentials["identityClientId"] = clientId
		}
	}

	return &credentials
}
