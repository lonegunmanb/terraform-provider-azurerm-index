package github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement
import (
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/apimanagement/2022-08-01/logger"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/apimanagement/schemaz"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/eventhub/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func expandApiManagementLoggerApplicationInsights(input []interface{}) *map[string]string {
	credentials := make(map[string]string)
	ai := input[0].(map[string]interface{})
	if ai["instrumentation_key"].(string) != "" {
		credentials["instrumentationKey"] = ai["instrumentation_key"].(string)
	}
	if ai["connection_string"].(string) != "" {
		credentials["connectionString"] = ai["connection_string"].(string)
	}
	return &credentials
}
