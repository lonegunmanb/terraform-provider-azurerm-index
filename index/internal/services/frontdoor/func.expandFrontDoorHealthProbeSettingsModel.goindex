package github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor
import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/frontdoor/2020-05-01/frontdoors"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor/parse"
	frontDoorValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandFrontDoorHealthProbeSettingsModel(input []interface{}, frontDoorId frontdoors.FrontDoorId) *[]frontdoors.HealthProbeSettingsModel {
	if len(input) == 0 {
		return &[]frontdoors.HealthProbeSettingsModel{}
	}

	output := make([]frontdoors.HealthProbeSettingsModel, 0)

	for _, hps := range input {
		v := hps.(map[string]interface{})
		path := v["path"].(string)
		protocol := frontdoors.FrontDoorProtocol(v["protocol"].(string))
		intervalInSeconds := int64(v["interval_in_seconds"].(int))
		name := v["name"].(string)
		enabled := v["enabled"].(bool)

		healthProbeEnabled := frontdoors.HealthProbeEnabledEnabled
		if !enabled {
			healthProbeEnabled = frontdoors.HealthProbeEnabledDisabled
		}
		healthProbeId := parse.NewHealthProbeID(frontDoorId.SubscriptionId, frontDoorId.ResourceGroupName, frontDoorId.FrontDoorName, name).ID()

		probeMethod := frontdoors.FrontDoorHealthProbeMethod(v["probe_method"].(string))

		result := frontdoors.HealthProbeSettingsModel{
			Id:   utils.String(healthProbeId),
			Name: utils.String(name),
			Properties: &frontdoors.HealthProbeSettingsProperties{
				IntervalInSeconds: utils.Int64(intervalInSeconds),
				Path:              utils.String(path),
				Protocol:          &protocol,
				HealthProbeMethod: &probeMethod,
				EnabledState:      &healthProbeEnabled,
			},
		}

		output = append(output, result)
	}

	return &output
}
