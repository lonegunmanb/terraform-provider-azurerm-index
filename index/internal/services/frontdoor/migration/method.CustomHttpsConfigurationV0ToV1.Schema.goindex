package github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor/migration
import (
	"context"
	"log"

	"github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func (CustomHttpsConfigurationV0ToV1) Schema() map[string]*pluginsdk.Schema {
	return map[string]*pluginsdk.Schema{
		"frontend_endpoint_id": {
			Type:     pluginsdk.TypeString,
			Required: true,
			ForceNew: true,
		},

		"custom_https_provisioning_enabled": {
			Type:     pluginsdk.TypeBool,
			Required: true,
		},

		// lintignore:XS003
		"custom_https_configuration": {
			Type:     pluginsdk.TypeList,
			Optional: true,
			MaxItems: 1,
			Elem: &pluginsdk.Resource{
				Schema: map[string]*pluginsdk.Schema{
					"certificate_source": {
						Type:     pluginsdk.TypeString,
						Optional: true,
					},
					"azure_key_vault_certificate_secret_name": {
						Type:     pluginsdk.TypeString,
						Optional: true,
					},
					"azure_key_vault_certificate_secret_version": {
						Type:     pluginsdk.TypeString,
						Optional: true,
					},
					"azure_key_vault_certificate_vault_id": {
						Type:     pluginsdk.TypeString,
						Optional: true,
					},
					"minimum_tls_version": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},
					"provisioning_state": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},
					"provisioning_substate": {
						Type:     pluginsdk.TypeString,
						Computed: true,
					},
				},
			},
		},

		"resource_group_name": {
			Type:     pluginsdk.TypeString,
			Required: true,
		},
	}
}
