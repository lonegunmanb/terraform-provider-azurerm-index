package github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/frontdoor/2020-04-01/webapplicationfirewallpolicies"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandFrontDoorFirewallCustomRules(input []interface{}) *webapplicationfirewallpolicies.CustomRuleList {
	if len(input) == 0 {
		return nil
	}

	output := make([]webapplicationfirewallpolicies.CustomRule, 0)

	for _, cr := range input {
		custom := cr.(map[string]interface{})

		enabled := webapplicationfirewallpolicies.CustomRuleEnabledStateDisabled
		if custom["enabled"].(bool) {
			enabled = webapplicationfirewallpolicies.CustomRuleEnabledStateEnabled
		}

		name := custom["name"].(string)
		priority := int64(custom["priority"].(int))
		ruleType := custom["type"].(string)
		rateLimitDurationInMinutes := int64(custom["rate_limit_duration_in_minutes"].(int))
		rateLimitThreshold := int64(custom["rate_limit_threshold"].(int))
		matchConditions := expandFrontDoorFirewallMatchConditions(custom["match_condition"].([]interface{}))
		action := custom["action"].(string)

		customRule := webapplicationfirewallpolicies.CustomRule{
			Name:                       utils.String(name),
			Priority:                   priority,
			EnabledState:               &enabled,
			RuleType:                   webapplicationfirewallpolicies.RuleType(ruleType),
			RateLimitDurationInMinutes: utils.Int64(rateLimitDurationInMinutes),
			RateLimitThreshold:         utils.Int64(rateLimitThreshold),
			MatchConditions:            matchConditions,
			Action:                     webapplicationfirewallpolicies.ActionType(action),
		}
		output = append(output, customRule)
	}

	return &webapplicationfirewallpolicies.CustomRuleList{
		Rules: &output,
	}
}
