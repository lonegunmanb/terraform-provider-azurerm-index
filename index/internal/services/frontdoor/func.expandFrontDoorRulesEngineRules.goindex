package github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/frontdoor/2020-05-01/frontdoors"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor/parse"
	azValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/frontdoor/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandFrontDoorRulesEngineRules(input []interface{}) *[]frontdoors.RulesEngineRule {
	if len(input) == 0 || input[0] == nil {
		return nil
	}

	output := make([]frontdoors.RulesEngineRule, 0)

	for _, r := range input {
		rule := r.(map[string]interface{})

		ruleName := rule["name"].(string)
		priority := int64(rule["priority"].(int))
		actions := rule["action"].([]interface{})
		matchConditions := rule["match_condition"].([]interface{})

		frontdoorRulesEngineRule := frontdoors.RulesEngineRule{
			Name:            ruleName,
			Priority:        priority,
			Action:          expandFrontDoorRulesEngineAction(actions),
			MatchConditions: expandFrontDoorRulesEngineMatchCondition(matchConditions),
		}

		output = append(output, frontdoorRulesEngineRule)
	}
	return &output
}
