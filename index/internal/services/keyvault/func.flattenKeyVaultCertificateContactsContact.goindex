package github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/keyvault/7.4/keyvault"
)
func flattenKeyVaultCertificateContactsContact(input *[]keyvault.Contact) []Contact {
	result := make([]Contact, 0)
	if input == nil {
		return result
	}

	for _, item := range *input {
		emailAddress := ""
		if item.EmailAddress != nil {
			emailAddress = *item.EmailAddress
		}

		name := ""
		if item.Name != nil {
			name = *item.Name
		}

		phone := ""
		if item.Phone != nil {
			phone = *item.Phone
		}

		result = append(result, Contact{
			Email: emailAddress,
			Name:  name,
			Phone: phone,
		})
	}

	return result
}
