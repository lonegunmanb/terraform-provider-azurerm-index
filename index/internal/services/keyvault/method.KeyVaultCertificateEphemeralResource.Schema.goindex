package github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault
import (
	"bytes"
	"context"
	"crypto/ecdsa"
	"crypto/rsa"
	"crypto/x509"
	"encoding/base64"
	"encoding/hex"
	"encoding/pem"
	"fmt"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/framework/typehelpers"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/terraform-plugin-framework/ephemeral"
	"github.com/hashicorp/terraform-plugin-framework/ephemeral/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"golang.org/x/crypto/pkcs12"
)
func (e *KeyVaultCertificateEphemeralResource) Schema(_ context.Context, _ ephemeral.SchemaRequest, resp *ephemeral.SchemaResponse) {
	resp.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			"name": schema.StringAttribute{
				Required: true,
				Validators: []validator.String{
					typehelpers.WrappedStringValidator{
						Func: validation.StringIsNotEmpty,
					},
				},
			},

			"key_vault_id": schema.StringAttribute{
				Required: true,
				Validators: []validator.String{
					typehelpers.WrappedStringValidator{
						Func: commonids.ValidateKeyVaultID,
					},
				},
			},

			"version": schema.StringAttribute{
				Optional: true,
				Computed: true,
				Validators: []validator.String{
					typehelpers.WrappedStringValidator{
						Func: validation.StringIsNotEmpty,
					},
				},
			},

			"hex": schema.StringAttribute{
				Computed: true,
			},

			"pem": schema.StringAttribute{
				Computed: true,
			},

			"key": schema.StringAttribute{
				Computed: true,
			},

			"expiration_date": schema.StringAttribute{
				Computed: true,
			},

			"not_before_date": schema.StringAttribute{
				Computed: true,
			},

			"certificate_count": schema.Int64Attribute{
				Computed: true,
			},
		},
	}
}
