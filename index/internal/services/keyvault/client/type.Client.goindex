package github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/client
import (
	"fmt"

	"github.com/hashicorp/go-azure-sdk/resource-manager/keyvault/2023-02-01/vaults"
	vaults20230701 "github.com/hashicorp/go-azure-sdk/resource-manager/keyvault/2023-07-01/vaults"
	resources20151101 "github.com/hashicorp/go-azure-sdk/resource-manager/resources/2015-11-01/resources"
	"github.com/hashicorp/terraform-provider-azurerm/internal/common"
	dataplane "github.com/jackofallops/kermit/sdk/keyvault/7.4/keyvault"
)
type Client struct {
	// NOTE: Key Vault and Managed HSMs are /intentionally/ split into two different service packages
	// whilst the service shares a similar interface - the behaviours and functionalities of the service
	// including the casing that is required to be used for the constants - differs between the two
	// services.
	//
	// As such this separation on our side is intentional to avoid code reuse given these differences.
	VaultsClient *vaults.VaultsClient

	ManagementClient *dataplane.BaseClient // TODO: we should rename this DataPlaneClient in time

	// NOTE: @tombuildsstuff: this client is intentionally internal-only so that it's not used directly
	resources20151101Client *resources20151101.ResourcesClient

	// @tombuildsstuff: I'm intentionally vendoring this API version separately to take advantage
	// of the updated List API behaviour/new base layer (since the API now always returns a nextLink)
	// which `Azure/go-autorest` doesn't handle cleanly. Before migrating the Key Vault resources over
	// to using this new API Version, there's a few Enum/casing related items to resolve, and as such
	// that's intentionally split-out into a separate task. For now, please continue to use VaultsClient
	// for regular operations, and we can remove this internal client one the newer API version is used
	// across the Provider.
	vaults20230701Client *vaults20230701.VaultsClient
}
