package github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault
import (
	"strings"
	"time"

	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func dataSourceKeyVaultAccessPolicyRead(d *pluginsdk.ResourceData, _ interface{}) error {
	name := d.Get("name").(string)

	keyPermissions := make([]string, 0)
	if strings.Contains(name, "Key") {
		keyPermissions = append(keyPermissionsManagement(), keyPermissionsRotationPolicy()...)
	}

	secretPermissions := make([]string, 0)
	if strings.Contains(name, "Secret") {
		secretPermissions = secretPermissionsManagement()
	}

	certificatePermissions := make([]string, 0)
	if strings.Contains(name, "Certificate") {
		certificatePermissions = certificatePermissionsManagement()
	}

	d.SetId(name)

	d.Set("key_permissions", keyPermissions)
	d.Set("secret_permissions", secretPermissions)
	d.Set("certificate_permissions", certificatePermissions)

	return nil
}
