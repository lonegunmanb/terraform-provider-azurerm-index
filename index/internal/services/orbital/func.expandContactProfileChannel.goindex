package github.com/hashicorp/terraform-provider-azurerm/internal/services/orbital
import (
	"errors"
	"fmt"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/orbital/2022-11-01/contactprofile"
	"github.com/hashicorp/go-azure-sdk/resource-manager/orbital/2022-11-01/spacecraft"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func expandContactProfileChannel(input []ContactProfileChannelModel) ([]contactprofile.ContactProfileLinkChannel, error) {
	if len(input) == 0 {
		return nil, errors.New("contact profile channel should be defined")
	}

	contactProfileChannel := make([]contactprofile.ContactProfileLinkChannel, 0, len(input))
	for _, v := range input {
		channel := contactprofile.ContactProfileLinkChannel{
			BandwidthMHz:              v.BandwidthMhz,
			CenterFrequencyMHz:        v.CenterFrequencyMhz,
			DemodulationConfiguration: pointer.To(v.DemodulationConfiguration),
			EndPoint:                  contactprofile.EndPoint{},
			ModulationConfiguration:   pointer.To(v.ModulationConfiguration),
			Name:                      v.Name,
		}
		endPoint, err := expandEndPoint(v.EndPoint)
		if err != nil {
			return nil, err
		}
		channel.EndPoint = endPoint[0]
		contactProfileChannel = append(contactProfileChannel, channel)
	}

	return contactProfileChannel, nil
}
