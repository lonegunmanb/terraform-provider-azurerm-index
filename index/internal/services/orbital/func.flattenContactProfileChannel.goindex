package github.com/hashicorp/terraform-provider-azurerm/internal/services/orbital
import (
	"errors"
	"fmt"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/orbital/2022-11-01/contactprofile"
	"github.com/hashicorp/go-azure-sdk/resource-manager/orbital/2022-11-01/spacecraft"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func flattenContactProfileChannel(input []contactprofile.ContactProfileLinkChannel) ([]ContactProfileChannelModel, error) {
	if len(input) == 0 {
		return nil, errors.New("channels are missing")
	}

	contactProfileChannelModel := make([]ContactProfileChannelModel, 0, len(input))
	for _, v := range input {
		channelModel := ContactProfileChannelModel{
			BandwidthMhz:              v.BandwidthMHz,
			CenterFrequencyMhz:        v.CenterFrequencyMHz,
			Name:                      v.Name,
			ModulationConfiguration:   pointer.From(v.ModulationConfiguration),
			DemodulationConfiguration: pointer.From(v.DemodulationConfiguration),
		}
		endPoint := v.EndPoint
		endPointModel := EndPointModel{
			EndPointName: endPoint.EndPointName,
			IpAddress:    endPoint.IPAddress,
			Port:         endPoint.Port,
			Protocol:     string(endPoint.Protocol),
		}
		channelModel.EndPoint = []EndPointModel{endPointModel}
		contactProfileChannelModel = append(contactProfileChannelModel, channelModel)
	}

	return contactProfileChannelModel, nil
}
