package github.com/hashicorp/terraform-provider-azurerm/internal/services/authorization
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/authorization/2022-05-01-preview/roledefinitions"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenDataSourceRoleDefinitionPermissions(input *[]roledefinitions.Permission) []PermissionDataSourceModel {
	permissions := make([]PermissionDataSourceModel, 0)
	if input == nil {
		return permissions
	}
	for _, permission := range *input {
		permissions = append(permissions, PermissionDataSourceModel{
			Actions:          pointer.From(permission.Actions),
			DataActions:      pointer.From(permission.DataActions),
			NotActions:       pointer.From(permission.NotActions),
			NotDataActions:   pointer.From(permission.NotDataActions),
			Condition:        pointer.From(permission.Condition),
			ConditionVersion: pointer.From(permission.ConditionVersion),
		})
	}
	return permissions
}
