package github.com/hashicorp/terraform-provider-azurerm/internal/services/appservice/helpers
import (
	"context"
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/web/2023-12-01/webapps"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func ServicePlanInfoForApp(ctx context.Context, metadata sdk.ResourceMetaData, id commonids.AppServiceId) (osType *string, planSku *string, err error) {
	client := metadata.Client.AppService.WebAppsClient
	servicePlanClient := metadata.Client.AppService.ServicePlanClient

	site, err := client.Get(ctx, id)
	if err != nil || site.Model == nil || site.Model.Properties == nil {
		return nil, nil, fmt.Errorf("reading %s: %+v", id, err)
	}
	props := *site.Model.Properties
	if props.ServerFarmId == nil {
		return nil, nil, fmt.Errorf("determining Service Plan ID for %s: %+v", id, err)
	}
	servicePlanId, err := commonids.ParseAppServicePlanIDInsensitively(*props.ServerFarmId)
	if err != nil {
		return nil, nil, err
	}

	sp, err := servicePlanClient.Get(ctx, *servicePlanId)
	if err != nil || sp.Model.Kind == nil {
		return nil, nil, fmt.Errorf("reading Service Plan for %s: %+v", id, err)
	}

	osType = utils.String("windows")
	if strings.Contains(strings.ToLower(*sp.Model.Kind), "linux") {
		osType = utils.String("linux")
	}

	planSku = utils.String("")
	if sku := sp.Model.Sku; sku != nil {
		planSku = sku.Name
	}

	return osType, planSku, nil
}
