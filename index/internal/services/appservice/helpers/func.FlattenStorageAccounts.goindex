package github.com/hashicorp/terraform-provider-azurerm/internal/services/appservice/helpers
import (
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/web/2023-12-01/webapps"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func FlattenStorageAccounts(appStorageAccounts *webapps.AzureStoragePropertyDictionaryResource) []StorageAccount {
	if appStorageAccounts == nil || len(*appStorageAccounts.Properties) == 0 {
		return []StorageAccount{}
	}

	storageAccounts := make([]StorageAccount, 0, len(*appStorageAccounts.Properties))
	for k, v := range *appStorageAccounts.Properties {
		storageAccount := StorageAccount{
			Name: k,
			Type: string(pointer.From(v.Type)),
		}
		if v.AccountName != nil {
			storageAccount.AccountName = *v.AccountName
		}

		if v.ShareName != nil {
			storageAccount.ShareName = *v.ShareName
		}

		if v.AccessKey != nil {
			storageAccount.AccessKey = *v.AccessKey
		}

		if v.MountPath != nil {
			storageAccount.MountPath = *v.MountPath
		}

		storageAccounts = append(storageAccounts, storageAccount)
	}

	return storageAccounts
}
