package github.com/hashicorp/terraform-provider-azurerm/internal/services/appservice/helpers
import (
	"fmt"
	"math"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/web/2023-12-01/webapps"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/appservice/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func IpRestrictionSchemaComputed() *pluginsdk.Schema {
	return &pluginsdk.Schema{
		Type:     pluginsdk.TypeList,
		Optional: true,
		Computed: true,
		Elem: &pluginsdk.Resource{
			Schema: map[string]*pluginsdk.Schema{
				"ip_address": {
					Type:        pluginsdk.TypeString,
					Computed:    true,
					Description: "The CIDR notation of the IP or IP Range to match.",
				},

				"service_tag": {
					Type:        pluginsdk.TypeString,
					Computed:    true,
					Description: "The Service Tag used for this IP Restriction.",
				},

				"virtual_network_subnet_id": {
					Type:        pluginsdk.TypeString,
					Computed:    true,
					Description: "The Virtual Network Subnet ID used for this IP Restriction.",
				},

				"name": {
					Type:        pluginsdk.TypeString,
					Computed:    true,
					Description: "The name used for this `ip_restriction`.",
				},

				"priority": {
					Type:        pluginsdk.TypeInt,
					Computed:    true,
					Description: "The priority value of this `ip_restriction`.",
				},

				"action": {
					Type:        pluginsdk.TypeString,
					Computed:    true,
					Description: "The action to take.",
				},

				"headers": IpRestrictionHeadersSchemaComputed(),

				"description": {
					Type:        pluginsdk.TypeString,
					Computed:    true,
					Description: "The description of the ip restriction rule.",
				},
			},
		},
	}
}
