package github.com/hashicorp/terraform-provider-azurerm/internal/services/appservice/helpers
import (
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/web/2023-12-01/webapps"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/appservice/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/jackofallops/kermit/sdk/web/2022-09-01/web"
)
func authV2LoginSchemaComputed() *pluginsdk.Schema {
	return &pluginsdk.Schema{
		Type:     pluginsdk.TypeList,
		Computed: true,
		Elem: &pluginsdk.Resource{
			Schema: map[string]*pluginsdk.Schema{
				"logout_endpoint": {
					Type:        pluginsdk.TypeString,
					Computed:    true,
					Description: "The endpoint to which logout requests are made.",
				},

				"token_store_enabled": {
					Type:        pluginsdk.TypeBool,
					Computed:    true,
					Description: "Is the Token Store configuration Enabled.",
				},

				"token_refresh_extension_time": {
					Type:        pluginsdk.TypeFloat,
					Computed:    true,
					Description: "The number of hours after session token expiration that a session token can be used to call the token refresh API.",
				},

				"token_store_path": {
					Type:        pluginsdk.TypeString,
					Computed:    true,
					Description: "The directory path in the App Filesystem in which the tokens are stored.",
				},

				"token_store_sas_setting_name": {
					Type:        pluginsdk.TypeString,
					Computed:    true,
					Description: "The name of the app setting which contains the SAS URL of the blob storage containing the tokens.",
				},

				"preserve_url_fragments_for_logins": {
					Type:        pluginsdk.TypeBool,
					Computed:    true,
					Description: "Are the fragments from the request be preserved after the login request is made.",
				},

				"allowed_external_redirect_urls": {
					Type:     pluginsdk.TypeList,
					Computed: true,
					Elem: &pluginsdk.Schema{
						Type: pluginsdk.TypeString,
					},
					Description: "External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.",
				},

				"cookie_expiration_convention": {
					Type:     pluginsdk.TypeString,
					Computed: true,
				},

				"cookie_expiration_time": {
					Type:        pluginsdk.TypeString,
					Computed:    true,
					Description: "The time after the request is made when the session cookie will expire.",
				},

				"validate_nonce": {
					Type:        pluginsdk.TypeBool,
					Computed:    true,
					Description: "Is the nonce be validated while completing the login flow.",
				},

				"nonce_expiration_time": {
					Type:        pluginsdk.TypeString,
					Computed:    true,
					Description: "The time after the request is made when the nonce will expire.",
				},
			},
		},
	}
}
