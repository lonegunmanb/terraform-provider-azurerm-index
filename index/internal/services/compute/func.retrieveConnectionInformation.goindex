package github.com/hashicorp/terraform-provider-azurerm/internal/services/compute
import (
	"context"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/compute/2024-03-01/virtualmachines"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2023-09-01/networkinterfaces"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2024-05-01/publicipaddresses"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func retrieveConnectionInformation(ctx context.Context, nicsClient *networkinterfaces.NetworkInterfacesClient, pipsClient *publicipaddresses.PublicIPAddressesClient, input *virtualmachines.VirtualMachineProperties) connectionInfo {
	if input == nil || input.NetworkProfile == nil || input.NetworkProfile.NetworkInterfaces == nil {
		return connectionInfo{}
	}

	privateIPAddresses := make([]string, 0)
	publicIPAddresses := make([]string, 0)

	for _, v := range *input.NetworkProfile.NetworkInterfaces {
		if v.Id == nil {
			continue
		}

		nic := retrieveIPAddressesForNIC(ctx, nicsClient, pipsClient, *v.Id)
		if nic == nil {
			continue
		}

		privateIPAddresses = append(privateIPAddresses, nic.privateIPAddresses...)
		publicIPAddresses = append(publicIPAddresses, nic.publicIPAddresses...)
	}

	primaryPrivateAddress := ""
	if len(privateIPAddresses) > 0 {
		primaryPrivateAddress = privateIPAddresses[0]
	}
	primaryPublicAddress := ""
	if len(publicIPAddresses) > 0 {
		primaryPublicAddress = publicIPAddresses[0]
	}

	return connectionInfo{
		primaryPrivateAddress: primaryPrivateAddress,
		privateAddresses:      privateIPAddresses,
		primaryPublicAddress:  primaryPublicAddress,
		publicAddresses:       publicIPAddresses,
	}
}
