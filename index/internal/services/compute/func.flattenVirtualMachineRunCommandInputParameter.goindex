package github.com/hashicorp/terraform-provider-azurerm/internal/services/compute
import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/compute/2023-03-01/virtualmachineruncommands"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/compute/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func flattenVirtualMachineRunCommandInputParameter(input *[]virtualmachineruncommands.RunCommandInputParameter) []VirtualMachineRunCommandInputParameterSchema {
	if input == nil {
		return make([]VirtualMachineRunCommandInputParameterSchema, 0)
	}

	output := make([]VirtualMachineRunCommandInputParameterSchema, 0)
	for _, v := range *input {
		parameter := VirtualMachineRunCommandInputParameterSchema{
			Name:  v.Name,
			Value: v.Value,
		}
		output = append(output, parameter)
	}

	return output
}
