package github.com/hashicorp/terraform-provider-azurerm/internal/services/compute
import (
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/compute/2022-03-01/images"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/compute/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandImageDataDisks(disks []interface{}) *[]images.ImageDataDisk {
	output := make([]images.ImageDataDisk, 0)
	for _, diskConfig := range disks {
		config := diskConfig.(map[string]interface{})

		item := images.ImageDataDisk{
			BlobUri: pointer.To(config["blob_uri"].(string)),
			Lun:     int64(config["lun"].(int)),
		}

		if size := config["size_gb"]; size != 0 {
			item.DiskSizeGB = pointer.To(int64(size.(int)))
		}

		if v := config["caching"].(string); v != "" {
			item.Caching = pointer.To(images.CachingTypes(v))
		}

		if managedDiskID := config["managed_disk_id"].(string); managedDiskID != "" {
			managedDisk := &images.SubResource{
				Id: &managedDiskID,
			}
			item.ManagedDisk = managedDisk
		}

		if id := config["disk_encryption_set_id"].(string); id != "" {
			item.DiskEncryptionSet = &images.SubResource{
				Id: pointer.To(id),
			}
		}

		item.StorageAccountType = pointer.To(images.StorageAccountTypes(config["storage_type"].(string)))

		output = append(output, item)
	}

	return &output
}
