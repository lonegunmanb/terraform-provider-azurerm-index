package github.com/hashicorp/terraform-provider-azurerm/internal/services/compute
import (
	"context"
	"fmt"
	"log"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/compute/2021-07-01/skus"
	"github.com/hashicorp/go-azure-sdk/resource-manager/compute/2023-04-02/disks"
	"github.com/hashicorp/go-azure-sdk/resource-manager/compute/2024-03-01/virtualmachines"
)
func determineIfDataDiskSupportsNoDowntimeResize(disk *disks.Disk, oldSizeGb, newSizeGb int) *bool {
	if disk == nil || disk.Properties == nil || disk.Sku == nil {
		return pointer.To(false)
	}

	// Only supported for data disks.
	isDataDisk := disk.Properties.OsType != nil && string(*disk.Properties.OsType) != ""
	if isDataDisk {
		return pointer.To(false)
	}

	// Not supported for shared disks.
	isSharedDisk := disk.Properties.MaxShares != nil && *disk.Properties.MaxShares >= 0
	if isSharedDisk {
		log.Printf("[DEBUG] Disk is shared so does not support no-downtime-resize")
		return pointer.To(false)
	}

	// If a disk is 4 TiB or less, you can't expand it beyond 4 TiB without deallocating the VM.
	// If a disk is already greater than 4 TiB, you can expand it without deallocating the VM.
	if oldSizeGb < 4096 && newSizeGb >= 4096 {
		return pointer.To(false)
	}

	// Not supported for Ultra disks or Premium SSD v2 disks.
	diskTypeIsSupported := false
	if disk.Sku.Name != nil {
		for _, supportedDiskType := range []disks.DiskStorageAccountTypes{
			disks.DiskStorageAccountTypesPremiumLRS,
			disks.DiskStorageAccountTypesPremiumZRS,
			disks.DiskStorageAccountTypesStandardSSDLRS,
			disks.DiskStorageAccountTypesStandardSSDZRS,
		} {
			if strings.EqualFold(string(*disk.Sku.Name), string(supportedDiskType)) {
				diskTypeIsSupported = true
			}
		}
	}
	return pointer.To(diskTypeIsSupported)
}
