package github.com/hashicorp/terraform-provider-azurerm/internal/services/compute
import (
	"fmt"
	"sort"
	"time"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/compute/2022-03-01/images"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func filterToImagesMatchingTags(input []images.Image, filterTags map[string]string) []images.Image {
	output := make([]images.Image, 0)

	for _, item := range input {
		tagsMatch := true
		if item.Tags == nil {
			tagsMatch = false
		} else {
			for tagKey, tagValue := range filterTags {
				otherVal, exists := (*item.Tags)[tagKey]
				if !exists || tagValue != otherVal {
					tagsMatch = false
					break
				}
			}
		}

		if tagsMatch {
			output = append(output, item)
		}
	}

	return output
}
