package github.com/hashicorp/terraform-provider-azurerm/internal/services/compute
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/framework/typehelpers"
	"github.com/hashicorp/go-azure-sdk/resource-manager/compute/2024-03-01/virtualmachines"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/action"
	"github.com/hashicorp/terraform-plugin-framework/action/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
)
func (v *VirtualMachinePowerAction) Schema(_ context.Context, _ action.SchemaRequest, response *action.SchemaResponse) {
	response.Schema = schema.Schema{
		Attributes: map[string]schema.Attribute{
			"virtual_machine_id": schema.StringAttribute{
				Required:            true,
				Description:         "The ID of the virtual machine on which to perform the action.",
				MarkdownDescription: "The ID of the virtual machine on which to perform the action.",
				Validators: []validator.String{
					typehelpers.WrappedStringValidator{
						Func: virtualmachines.ValidateVirtualMachineID,
					},
				},
			},

			"power_action": schema.StringAttribute{
				Required:            true,
				Description:         "The power state action to take on this virtual machine. Possible values include `restart`, `power_on`, and `power_off`.",
				MarkdownDescription: "The power state action to take on this virtual machine. Possible values include `restart`, `power_on`, and `power_off`.",
				Validators: []validator.String{
					stringvalidator.OneOf(
						"power_on",
						"power_off",
						"restart",
					),
				},
			},
		},
	}
}
