package github.com/hashicorp/terraform-provider-azurerm/internal/services/network
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/resourceids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2024-05-01/virtualwans"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/network/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenRules(input *[]virtualwans.RouteMapRule) []Rule {
	if input == nil {
		return []Rule{}
	}

	rules := make([]Rule, 0, len(*input))
	for _, v := range *input {
		rule := Rule{
			Actions:       flattenActions(v.Actions),
			MatchCriteria: flattenCriteria(v.MatchCriteria),
		}

		if v.Name != nil {
			rule.Name = *v.Name
		}

		if v.NextStepIfMatched != nil {
			rule.NextStepIfMatched = pointer.From(v.NextStepIfMatched)
		}

		rules = append(rules, rule)
	}

	return rules
}
