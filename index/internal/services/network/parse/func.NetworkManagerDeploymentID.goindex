package github.com/hashicorp/terraform-provider-azurerm/internal/services/network/parse
import (
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2023-09-01/networkmanagers"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
)
func NetworkManagerDeploymentID(networkManagerDeploymentId string) (*ManagerDeploymentId, error) {
	v := strings.Split(networkManagerDeploymentId, "|")
	if len(v) != 3 {
		return nil, fmt.Errorf("expected the network manager deployment ID to be in format `{networkManagerId}/commit|{location}|{scopeAccess}`, but got %d segments ", len(v))
	}

	networkManagerId := strings.TrimSuffix(v[0], "/commit")
	managerId, err := networkmanagers.ParseNetworkManagerID(networkManagerId)
	if err != nil {
		return nil, err
	}

	if v[1] == "" {
		return nil, fmt.Errorf("expected location in network manager deployment ID with format `{networkManagerId}/commit|{location}|{scopeAccess}`, but got %s in %s", v[1], networkManagerDeploymentId)
	}
	normalizedLocation := azure.NormalizeLocation(v[1])

	if v[2] == "" {
		return nil, fmt.Errorf("expected scopeAccess in network manager deployment ID with format `{networkManagerId}/commit|{location}|{scopeAccess} to be one of the [Connectivity, SecurityAdmin]`, but got %s in %s", v[2], networkManagerDeploymentId)
	}
	scopeAccess := v[2]
	networkManagerDeployment := NewNetworkManagerDeploymentID(managerId.SubscriptionId, managerId.ResourceGroupName, managerId.NetworkManagerName, normalizedLocation, scopeAccess)
	return networkManagerDeployment, nil
}
