package github.com/hashicorp/terraform-provider-azurerm/internal/services/network
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2024-05-01/webapplicationfirewallpolicies"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/network/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/network/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandWebApplicationFirewallPolicyExclusionManagedRuleGroup(input []interface{}) *[]webapplicationfirewallpolicies.ExclusionManagedRuleGroup {
	results := make([]webapplicationfirewallpolicies.ExclusionManagedRuleGroup, 0)
	for _, item := range input {
		v := item.(map[string]interface{})

		ruleGroupName := v["rule_group_name"].(string)

		result := webapplicationfirewallpolicies.ExclusionManagedRuleGroup{
			RuleGroupName: ruleGroupName,
		}

		if excludedRules := v["excluded_rules"].([]interface{}); len(excludedRules) > 0 {
			result.Rules = expandWebApplicationFirewallPolicyExclusionManagedRules(excludedRules)
		}

		results = append(results, result)
	}
	return &results
}
