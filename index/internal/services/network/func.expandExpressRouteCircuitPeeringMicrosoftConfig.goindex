package github.com/hashicorp/terraform-provider-azurerm/internal/services/network
import (
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2023-09-01/routefilters"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2024-05-01/expressroutecircuitconnections"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2024-05-01/expressroutecircuitpeerings"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func expandExpressRouteCircuitPeeringMicrosoftConfig(input []interface{}) *expressroutecircuitpeerings.ExpressRouteCircuitPeeringConfig {
	if len(input) == 0 {
		return nil
	}
	peering := input[0].(map[string]interface{})

	prefixes := make([]string, 0)
	for _, v := range peering["advertised_public_prefixes"].([]interface{}) {
		prefixes = append(prefixes, v.(string))
	}

	advertisedCommunities := make([]string, 0)
	for _, v := range peering["advertised_communities"].([]interface{}) {
		advertisedCommunities = append(advertisedCommunities, v.(string))
	}

	return &expressroutecircuitpeerings.ExpressRouteCircuitPeeringConfig{
		AdvertisedPublicPrefixes: pointer.To(prefixes),
		CustomerASN:              pointer.To(int64(peering["customer_asn"].(int))),
		RoutingRegistryName:      pointer.To(peering["routing_registry_name"].(string)),
		AdvertisedCommunities:    pointer.To(advertisedCommunities),
	}
}
