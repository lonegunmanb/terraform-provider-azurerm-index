package github.com/hashicorp/terraform-provider-azurerm/internal/services/network
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2025-01-01/ddosprotectionplans"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func extractVnetNames(input *[]ddosprotectionplans.SubResource) (*[]string, error) {
	vnetNames := make([]string, 0)

	if input != nil {
		for _, subresource := range *input {
			if subresource.Id == nil {
				continue
			}

			id, err := commonids.ParseVirtualNetworkIDInsensitively(*subresource.Id)
			if err != nil {
				return nil, err
			}

			if !utils.SliceContainsValue(vnetNames, id.VirtualNetworkName) {
				vnetNames = append(vnetNames, id.VirtualNetworkName)
			}
		}
	}

	return &vnetNames, nil
}
