package github.com/hashicorp/terraform-provider-azurerm/internal/services/network
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2025-01-01/virtualwans"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandVPNServerConfigurationPolicyGroupPolicyMembers(input []interface{}) *[]virtualwans.VpnServerConfigurationPolicyGroupMember {
	results := make([]virtualwans.VpnServerConfigurationPolicyGroupMember, 0)

	for _, item := range input {
		v := item.(map[string]interface{})

		results = append(results, virtualwans.VpnServerConfigurationPolicyGroupMember{
			Name:           utils.String(v["name"].(string)),
			AttributeType:  pointer.To(virtualwans.VpnPolicyMemberAttributeType(v["type"].(string))),
			AttributeValue: utils.String(v["value"].(string)),
		})
	}

	return &results
}
