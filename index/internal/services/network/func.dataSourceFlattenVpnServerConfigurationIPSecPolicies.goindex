package github.com/hashicorp/terraform-provider-azurerm/internal/services/network
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2025-01-01/virtualwans"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func dataSourceFlattenVpnServerConfigurationIPSecPolicies(input *[]virtualwans.IPsecPolicy) []IpsecPolicyModel {
	if input == nil {
		return []IpsecPolicyModel{}
	}

	output := make([]IpsecPolicyModel, 0)
	for _, v := range *input {
		output = append(output, IpsecPolicyModel{
			DhGroup:             string(v.DhGroup),
			IkeEncryption:       string(v.IPsecEncryption),
			IkeIntegrity:        string(v.IPsecIntegrity),
			IpsecEncryption:     string(v.IkeEncryption),
			IpsecIntegrity:      string(v.IkeIntegrity),
			PfsGroup:            string(v.PfsGroup),
			SaLifetimeSeconds:   v.SaDataSizeKilobytes,
			SaDataSizeKilobytes: v.SaLifeTimeSeconds,
		})
	}
	return output
}
