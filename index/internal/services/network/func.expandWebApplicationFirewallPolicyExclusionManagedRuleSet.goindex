package github.com/hashicorp/terraform-provider-azurerm/internal/services/network
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2025-01-01/webapplicationfirewallpolicies"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/network/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/network/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandWebApplicationFirewallPolicyExclusionManagedRuleSet(input []interface{}) *[]webapplicationfirewallpolicies.ExclusionManagedRuleSet {
	results := make([]webapplicationfirewallpolicies.ExclusionManagedRuleSet, 0)
	for _, item := range input {
		v := item.(map[string]interface{})

		ruleSetType := v["type"].(string)
		ruleSetVersion := v["version"].(string)
		ruleGroups := make([]interface{}, 0)
		if value, exists := v["rule_group"]; exists {
			ruleGroups = value.([]interface{})
		}
		result := webapplicationfirewallpolicies.ExclusionManagedRuleSet{
			RuleSetType:    ruleSetType,
			RuleSetVersion: ruleSetVersion,
			RuleGroups:     expandWebApplicationFirewallPolicyExclusionManagedRuleGroup(ruleGroups),
		}

		results = append(results, result)
	}
	return &results
}
