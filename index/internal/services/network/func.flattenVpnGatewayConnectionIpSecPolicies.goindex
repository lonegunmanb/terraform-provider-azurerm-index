package github.com/hashicorp/terraform-provider-azurerm/internal/services/network
import (
	"fmt"
	"log"
	"math"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2024-05-01/virtualwans"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenVpnGatewayConnectionIpSecPolicies(input *[]virtualwans.IPsecPolicy) []interface{} {
	if input == nil {
		return []interface{}{}
	}

	output := make([]interface{}, 0)
	for _, item := range *input {
		output = append(output, map[string]interface{}{
			"sa_lifetime_sec":          int(item.SaLifeTimeSeconds),
			"sa_data_size_kb":          int(item.SaDataSizeKilobytes),
			"encryption_algorithm":     string(item.IPsecEncryption),
			"integrity_algorithm":      string(item.IPsecIntegrity),
			"ike_encryption_algorithm": string(item.IkeEncryption),
			"ike_integrity_algorithm":  string(item.IkeIntegrity),
			"dh_group":                 string(item.DhGroup),
			"pfs_group":                string(item.PfsGroup),
		})
	}

	return output
}
