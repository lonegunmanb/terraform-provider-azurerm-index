package github.com/hashicorp/terraform-provider-azurerm/internal/services/network
import (
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2024-05-01/virtualnetworks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenVnetPeeringsdAddressList(input *[]virtualnetworks.VirtualNetworkPeering) []string {
	var output []string
	if peerings := input; peerings != nil {
		for _, vnetPeering := range *peerings {
			if props := vnetPeering.Properties; props != nil {
				for _, addresses := range *props.RemoteVirtualNetworkAddressSpace.AddressPrefixes {
					if addresses != "" {
						output = append(output, addresses)
					}
				}
			}
		}
	}
	return output
}
