package github.com/hashicorp/terraform-provider-azurerm/internal/services/network
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2024-05-01/ddosprotectionplans"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandNetworkDDoSProtectionPlanVnetNames(input []interface{}) (*[]string, error) {
	vnetNames := make([]string, 0)

	for _, vnetID := range input {
		vnetResourceID, err := commonids.ParseVirtualNetworkID(vnetID.(string))
		if err != nil {
			return nil, err
		}

		if !utils.SliceContainsValue(vnetNames, vnetResourceID.VirtualNetworkName) {
			vnetNames = append(vnetNames, vnetResourceID.VirtualNetworkName)
		}
	}

	return &vnetNames, nil
}
