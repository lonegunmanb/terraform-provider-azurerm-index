package github.com/hashicorp/terraform-provider-azurerm/internal/services/network
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/resourceids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2024-05-01/virtualwans"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/network/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandRules(input []Rule) *[]virtualwans.RouteMapRule {
	if input == nil {
		return nil
	}

	rules := make([]virtualwans.RouteMapRule, 0, len(input))
	for _, v := range input {
		rule := virtualwans.RouteMapRule{
			Name:          pointer.To(v.Name),
			Actions:       expandActions(v.Actions),
			MatchCriteria: expandCriteria(v.MatchCriteria),
		}

		if v.NextStepIfMatched != "" {
			rule.NextStepIfMatched = pointer.To(v.NextStepIfMatched)
		}

		rules = append(rules, rule)
	}

	return &rules
}
