package github.com/hashicorp/terraform-provider-azurerm/internal/services/network
import (
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2024-05-01/natgateways"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func resourceNATGatewayPublicIpAssociationRead(d *pluginsdk.ResourceData, meta interface{}) error {
	client := meta.(*clients.Client).Network.Client.NatGateways
	ctx, cancel := timeouts.ForRead(meta.(*clients.Client).StopContext, d)
	defer cancel()

	id, err := commonids.ParseCompositeResourceID(d.Id(), &natgateways.NatGatewayId{}, &commonids.PublicIPAddressId{})
	if err != nil {
		return err
	}

	natGateway, err := client.Get(ctx, *id.First, natgateways.DefaultGetOperationOptions())
	if err != nil {
		if response.WasNotFound(natGateway.HttpResponse) {
			log.Printf("[DEBUG] %s was not found - removing from state!", id.First)
			d.SetId("")
			return nil
		}
		return fmt.Errorf("retrieving %s: %+v", id.First, err)
	}

	if model := natGateway.Model; model != nil {
		if props := model.Properties; props != nil {
			if props.PublicIPAddresses == nil {
				log.Printf("[DEBUG] %s doesn't have any Public IP's - removing from state!", id.First)
				d.SetId("")
				return nil
			}

			publicIPAddressId := ""
			for _, pip := range *props.PublicIPAddresses {
				if pip.Id == nil {
					continue
				}

				if strings.EqualFold(*pip.Id, id.Second.ID()) {
					publicIPAddressId = *pip.Id
					break
				}
			}

			if publicIPAddressId == "" {
				log.Printf("[DEBUG] Association between %s and %s was not found - removing from state", id.First, id.Second)
				d.SetId("")
				return nil
			}
		}
	}

	d.Set("nat_gateway_id", id.First.ID())
	d.Set("public_ip_address_id", id.Second.ID())

	return nil
}
