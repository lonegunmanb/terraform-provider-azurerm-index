package github.com/hashicorp/terraform-provider-azurerm/internal/services/firewall
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2024-05-01/firewallpolicies"
	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2020-08-01/workspaces"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/firewall/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenFirewallPolicyLogAnalyticsResources(input *firewallpolicies.FirewallPolicyLogAnalyticsResources) (string, []interface{}) {
	if input == nil {
		return "", []interface{}{}
	}

	var defaultLogAnalyticsWorkspaceId string
	if input.DefaultWorkspaceId != nil && input.DefaultWorkspaceId.Id != nil {
		defaultLogAnalyticsWorkspaceId = *input.DefaultWorkspaceId.Id
	}

	var workspaceList []interface{}
	if input.Workspaces != nil {
		for _, workspace := range *input.Workspaces {
			loc := location.NormalizeNilable(workspace.Region)

			var id string
			if workspace.WorkspaceId != nil && workspace.WorkspaceId.Id != nil {
				id = *workspace.WorkspaceId.Id
			}

			workspaceList = append(workspaceList, map[string]interface{}{
				"id":                id,
				"firewall_location": loc,
			})
		}
	}

	return defaultLogAnalyticsWorkspaceId, workspaceList
}
