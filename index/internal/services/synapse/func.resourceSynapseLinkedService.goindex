package github.com/hashicorp/terraform-provider-azurerm/internal/services/synapse
import (
	"encoding/json"
	"fmt"
	"io"
	"log"
	"net/http"
	"time"

	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/synapse/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/synapse/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/synapse/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	artifacts "github.com/jackofallops/kermit/sdk/synapse/2021-06-01-preview/synapse"
)
func resourceSynapseLinkedService() *pluginsdk.Resource {
	return &pluginsdk.Resource{
		Create: resourceSynapseLinkedServiceCreateUpdate,
		Read:   resourceSynapseLinkedServiceRead,
		Update: resourceSynapseLinkedServiceCreateUpdate,
		Delete: resourceSynapseLinkedServiceDelete,

		Importer: pluginsdk.ImporterValidatingResourceId(func(id string) error {
			_, err := parse.LinkedServiceID(id)
			return err
		}),

		SchemaVersion: 1,
		StateUpgraders: pluginsdk.StateUpgrades(map[int]pluginsdk.StateUpgrade{
			0: migration.SynapseLinkedServiceV0ToV1{},
		}),

		Timeouts: &pluginsdk.ResourceTimeout{
			Create: pluginsdk.DefaultTimeout(30 * time.Minute),
			Read:   pluginsdk.DefaultTimeout(5 * time.Minute),
			Update: pluginsdk.DefaultTimeout(30 * time.Minute),
			Delete: pluginsdk.DefaultTimeout(30 * time.Minute),
		},

		Schema: map[string]*pluginsdk.Schema{
			"name": {
				Type:     pluginsdk.TypeString,
				Required: true,
				ForceNew: true,
			},

			"synapse_workspace_id": {
				Type:         pluginsdk.TypeString,
				Required:     true,
				ForceNew:     true,
				ValidateFunc: validate.WorkspaceID,
			},

			"type": {
				Type:     pluginsdk.TypeString,
				Required: true,
				ForceNew: true,
				ValidateFunc: validation.StringInSlice([]string{
					string(artifacts.TypeBasicLinkedServiceTypeAmazonMWS),
					string(artifacts.TypeBasicLinkedServiceTypeAmazonRdsForOracle),
					string(artifacts.TypeBasicLinkedServiceTypeAmazonRdsForSQLServer),
					string(artifacts.TypeBasicLinkedServiceTypeAmazonRedshift),
					string(artifacts.TypeBasicLinkedServiceTypeAmazonS3),
					string(artifacts.TypeBasicLinkedServiceTypeAzureBatch),
					string(artifacts.TypeBasicLinkedServiceTypeAzureBlobFS),
					string(artifacts.TypeBasicLinkedServiceTypeAzureBlobStorage),
					string(artifacts.TypeBasicLinkedServiceTypeAzureDataExplorer),
					string(artifacts.TypeBasicLinkedServiceTypeAzureDataLakeAnalytics),
					string(artifacts.TypeBasicLinkedServiceTypeAzureDataLakeStore),
					string(artifacts.TypeBasicLinkedServiceTypeAzureDatabricks),
					string(artifacts.TypeBasicLinkedServiceTypeAzureDatabricksDeltaLake),
					string(artifacts.TypeBasicLinkedServiceTypeAzureFileStorage),
					string(artifacts.TypeBasicLinkedServiceTypeAzureFunction),
					string(artifacts.TypeBasicLinkedServiceTypeAzureKeyVault),
					string(artifacts.TypeBasicLinkedServiceTypeAzureML),
					string(artifacts.TypeBasicLinkedServiceTypeAzureMLService),
					string(artifacts.TypeBasicLinkedServiceTypeAzureMariaDB),
					string(artifacts.TypeBasicLinkedServiceTypeAzureMySQL),
					string(artifacts.TypeBasicLinkedServiceTypeAzurePostgreSQL),
					string(artifacts.TypeBasicLinkedServiceTypeAzureSQLDW),
					string(artifacts.TypeBasicLinkedServiceTypeAzureSQLDatabase),
					string(artifacts.TypeBasicLinkedServiceTypeAzureSQLMI),
					string(artifacts.TypeBasicLinkedServiceTypeAzureSearch),
					string(artifacts.TypeBasicLinkedServiceTypeAzureStorage),
					string(artifacts.TypeBasicLinkedServiceTypeAzureTableStorage),
					string(artifacts.TypeBasicLinkedServiceTypeCassandra),
					string(artifacts.TypeBasicLinkedServiceTypeCommonDataServiceForApps),
					string(artifacts.TypeBasicLinkedServiceTypeConcur),
					string(artifacts.TypeBasicLinkedServiceTypeCosmosDb),
					string(artifacts.TypeBasicLinkedServiceTypeCosmosDbMongoDbAPI),
					string(artifacts.TypeBasicLinkedServiceTypeCouchbase),
					string(artifacts.TypeBasicLinkedServiceTypeCustomDataSource),
					string(artifacts.TypeBasicLinkedServiceTypeDb2),
					string(artifacts.TypeBasicLinkedServiceTypeDrill),
					string(artifacts.TypeBasicLinkedServiceTypeDynamics),
					string(artifacts.TypeBasicLinkedServiceTypeDynamicsAX),
					string(artifacts.TypeBasicLinkedServiceTypeDynamicsCrm),
					string(artifacts.TypeBasicLinkedServiceTypeEloqua),
					string(artifacts.TypeBasicLinkedServiceTypeFileServer),
					string(artifacts.TypeBasicLinkedServiceTypeFtpServer),
					string(artifacts.TypeBasicLinkedServiceTypeGoogleAdWords),
					string(artifacts.TypeBasicLinkedServiceTypeGoogleBigQuery),
					string(artifacts.TypeBasicLinkedServiceTypeGoogleCloudStorage),
					string(artifacts.TypeBasicLinkedServiceTypeGreenplum),
					string(artifacts.TypeBasicLinkedServiceTypeHBase),
					string(artifacts.TypeBasicLinkedServiceTypeHDInsight),
					string(artifacts.TypeBasicLinkedServiceTypeHDInsightOnDemand),
					string(artifacts.TypeBasicLinkedServiceTypeHTTPServer),
					string(artifacts.TypeBasicLinkedServiceTypeHdfs),
					string(artifacts.TypeBasicLinkedServiceTypeHive),
					string(artifacts.TypeBasicLinkedServiceTypeHubspot),
					string(artifacts.TypeBasicLinkedServiceTypeImpala),
					string(artifacts.TypeBasicLinkedServiceTypeInformix),
					string(artifacts.TypeBasicLinkedServiceTypeJira),
					string(artifacts.TypeBasicLinkedServiceTypeLinkedService),
					string(artifacts.TypeBasicLinkedServiceTypeMagento),
					string(artifacts.TypeBasicLinkedServiceTypeMariaDB),
					string(artifacts.TypeBasicLinkedServiceTypeMarketo),
					string(artifacts.TypeBasicLinkedServiceTypeMicrosoftAccess),
					string(artifacts.TypeBasicLinkedServiceTypeMongoDb),
					string(artifacts.TypeBasicLinkedServiceTypeMongoDbAtlas),
					string(artifacts.TypeBasicLinkedServiceTypeMongoDbV2),
					string(artifacts.TypeBasicLinkedServiceTypeMySQL),
					string(artifacts.TypeBasicLinkedServiceTypeNetezza),
					string(artifacts.TypeBasicLinkedServiceTypeOData),
					string(artifacts.TypeBasicLinkedServiceTypeOdbc),
					string(artifacts.TypeBasicLinkedServiceTypeOffice365),
					string(artifacts.TypeBasicLinkedServiceTypeOracle),
					string(artifacts.TypeBasicLinkedServiceTypeOracleServiceCloud),
					string(artifacts.TypeBasicLinkedServiceTypePaypal),
					string(artifacts.TypeBasicLinkedServiceTypePhoenix),
					string(artifacts.TypeBasicLinkedServiceTypePostgreSQL),
					string(artifacts.TypeBasicLinkedServiceTypePresto),
					string(artifacts.TypeBasicLinkedServiceTypeQuickBooks),
					string(artifacts.TypeBasicLinkedServiceTypeResponsys),
					string(artifacts.TypeBasicLinkedServiceTypeRestService),
					string(artifacts.TypeBasicLinkedServiceTypeSQLServer),
					string(artifacts.TypeBasicLinkedServiceTypeSalesforce),
					string(artifacts.TypeBasicLinkedServiceTypeSalesforceMarketingCloud),
					string(artifacts.TypeBasicLinkedServiceTypeSalesforceServiceCloud),
					string(artifacts.TypeBasicLinkedServiceTypeSapBW),
					string(artifacts.TypeBasicLinkedServiceTypeSapCloudForCustomer),
					string(artifacts.TypeBasicLinkedServiceTypeSapEcc),
					string(artifacts.TypeBasicLinkedServiceTypeSapHana),
					string(artifacts.TypeBasicLinkedServiceTypeSapOpenHub),
					string(artifacts.TypeBasicLinkedServiceTypeSapTable),
					string(artifacts.TypeBasicLinkedServiceTypeServiceNow),
					string(artifacts.TypeBasicLinkedServiceTypeSftp),
					string(artifacts.TypeBasicLinkedServiceTypeSharePointOnlineList),
					string(artifacts.TypeBasicLinkedServiceTypeShopify),
					string(artifacts.TypeBasicLinkedServiceTypeSnowflake),
					string(artifacts.TypeBasicLinkedServiceTypeSpark),
					string(artifacts.TypeBasicLinkedServiceTypeSquare),
					string(artifacts.TypeBasicLinkedServiceTypeSybase),
					string(artifacts.TypeBasicLinkedServiceTypeTeradata),
					string(artifacts.TypeBasicLinkedServiceTypeVertica),
					string(artifacts.TypeBasicLinkedServiceTypeWeb),
					string(artifacts.TypeBasicLinkedServiceTypeXero),
					string(artifacts.TypeBasicLinkedServiceTypeZoho),
				}, false),
			},

			"type_properties_json": {
				Type:             pluginsdk.TypeString,
				Required:         true,
				StateFunc:        utils.NormalizeJson,
				DiffSuppressFunc: suppressJsonOrderingDifference,
			},

			"description": {
				Type:         pluginsdk.TypeString,
				Optional:     true,
				ValidateFunc: validation.StringIsNotEmpty,
			},

			"integration_runtime": {
				Type:     pluginsdk.TypeList,
				Optional: true,
				MaxItems: 1,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"name": {
							Type:         pluginsdk.TypeString,
							Required:     true,
							ValidateFunc: validation.StringIsNotEmpty,
						},

						"parameters": {
							Type:     pluginsdk.TypeMap,
							Optional: true,
							Elem: &pluginsdk.Schema{
								Type: pluginsdk.TypeString,
							},
						},
					},
				},
			},

			"parameters": {
				Type:     pluginsdk.TypeMap,
				Optional: true,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},

			"annotations": {
				Type:     pluginsdk.TypeList,
				Optional: true,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},

			"additional_properties": {
				Type:     pluginsdk.TypeMap,
				Optional: true,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},
		},
	}
}
