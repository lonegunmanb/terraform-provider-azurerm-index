package github.com/hashicorp/terraform-provider-azurerm/internal/services/synapse
import (
	"fmt"
	"log"
	"time"

	"github.com/Azure/azure-sdk-for-go/services/preview/synapse/mgmt/v2.0/synapse" // nolint: staticcheck
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/synapse/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/synapse/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandSQLPoolVulnerabilityAssessmentRuleBaselineSQLPoolVulnerabilityAssessmentRuleBaselineItemArray(input []interface{}) *[]synapse.SQLPoolVulnerabilityAssessmentRuleBaselineItem {
	results := make([]synapse.SQLPoolVulnerabilityAssessmentRuleBaselineItem, 0)
	for _, item := range input {
		v := item.(map[string]interface{})
		results = append(results, synapse.SQLPoolVulnerabilityAssessmentRuleBaselineItem{
			Result: utils.ExpandStringSlice(v["result"].([]interface{})),
		})
	}
	return &results
}
