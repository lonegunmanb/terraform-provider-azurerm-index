package github.com/hashicorp/terraform-provider-azurerm/internal/services/streamanalytics
import (
	"fmt"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/streamanalytics/2020-03-01/inputs"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenStreamAnalyticsStreamInputSerializationTyped(input inputs.Serialization) Serialization {
	var encoding string
	var fieldDelimiter string
	var inputType string

	if _, ok := input.(inputs.AvroSerialization); ok {
		inputType = string(inputs.EventSerializationTypeAvro)
	}

	if csv, ok := input.(inputs.CsvSerialization); ok {
		if props := csv.Properties; props != nil {
			if v := props.Encoding; v != nil {
				encoding = string(*v)
			}

			if v := props.FieldDelimiter; v != nil {
				fieldDelimiter = *v
			}
		}

		inputType = string(inputs.EventSerializationTypeCsv)
	}

	if json, ok := input.(inputs.JsonSerialization); ok {
		if props := json.Properties; props != nil {
			if v := props.Encoding; v != nil {
				encoding = string(*v)
			}
		}

		inputType = string(inputs.EventSerializationTypeJson)
	}

	return Serialization{
		Encoding:       encoding,
		Type:           inputType,
		FieldDelimiter: fieldDelimiter,
	}
}
