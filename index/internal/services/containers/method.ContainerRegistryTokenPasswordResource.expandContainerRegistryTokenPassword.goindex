package github.com/hashicorp/terraform-provider-azurerm/internal/services/containers
import (
	"context"
	"encoding/json"
	"fmt"
	"time"

	"github.com/Azure/go-autorest/autorest/date"
	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	containterregistry_v2021_08_01_preview "github.com/hashicorp/go-azure-sdk/resource-manager/containerregistry/2023-11-01-preview"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerregistry/2023-11-01-preview/registries"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerregistry/2023-11-01-preview/tokens"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containers/client"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containers/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func (r ContainerRegistryTokenPasswordResource) expandContainerRegistryTokenPassword(plan ContainerRegistryTokenPasswordModel) (*[]tokens.TokenPassword, error) {
	result := make([]tokens.TokenPassword, 0)

	expandPassword := func(name string, password []ContainerRegistryTokenPassword) (*tokens.TokenPassword, error) {
		if len(password) == 1 {
			password := password[0]
			ret := &tokens.TokenPassword{
				Name:  pointer.To(tokens.TokenPasswordName(name)),
				Value: utils.String(password.Value),
			}
			if v := password.Expiry; v != "" {
				t, err := time.Parse(time.RFC3339, v)
				if err != nil {
					return nil, err
				}
				ret.Expiry = pointer.To(date.Time{Time: t}.String())
			}
			return ret, nil
		}
		return nil, nil
	}
	// TODO: Use below SDK enum once the following issue is resolved: https://github.com/Azure/azure-rest-api-specs/issues/18339
	// tokens.PasswordNamePassword
	v, err := expandPassword("password1", plan.Password1)
	if err != nil {
		return nil, err
	}
	if v != nil {
		result = append(result, *v)
	}

	v, err = expandPassword(string(tokens.TokenPasswordNamePasswordTwo), plan.Password2)
	if err != nil {
		return nil, err
	}
	if v != nil {
		result = append(result, *v)
	}
	return &result, nil
}
