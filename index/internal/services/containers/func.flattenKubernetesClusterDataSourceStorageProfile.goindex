package github.com/hashicorp/terraform-provider-azurerm/internal/services/containers
import (
	"fmt"
	"net/http"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/zones"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerservice/2024-05-01/managedclusters"
	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2020-08-01/workspaces"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containers/kubernetes"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenKubernetesClusterDataSourceStorageProfile(input *managedclusters.ManagedClusterStorageProfile) []interface{} {
	storageProfile := make([]interface{}, 0)

	if input != nil {
		blobEnabled := false
		if input.BlobCSIDriver != nil && input.BlobCSIDriver.Enabled != nil {
			blobEnabled = *input.BlobCSIDriver.Enabled
		}

		diskEnabled := true
		if input.DiskCSIDriver != nil && input.DiskCSIDriver.Enabled != nil {
			diskEnabled = *input.DiskCSIDriver.Enabled
		}

		fileEnabled := true
		if input.FileCSIDriver != nil && input.FileCSIDriver.Enabled != nil {
			fileEnabled = *input.FileCSIDriver.Enabled
		}

		snapshotController := true
		if input.SnapshotController != nil && input.SnapshotController.Enabled != nil {
			snapshotController = *input.SnapshotController.Enabled
		}

		storageProfile = append(storageProfile, map[string]interface{}{
			"blob_driver_enabled":         blobEnabled,
			"disk_driver_enabled":         diskEnabled,
			"file_driver_enabled":         fileEnabled,
			"snapshot_controller_enabled": snapshotController,
		})
	}

	return storageProfile
}
