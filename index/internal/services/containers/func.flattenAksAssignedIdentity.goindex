package github.com/hashicorp/terraform-provider-azurerm/internal/services/containers
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-sdk/resource-manager/kubernetesconfiguration/2024-11-01/extensions"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenAksAssignedIdentity(input *extensions.ExtensionPropertiesAksAssignedIdentity) []interface{} {
	if input == nil {
		return []interface{}{}
	}

	output := identity.SystemAssigned{
		Type:        identity.TypeSystemAssigned,
		PrincipalId: pointer.From(input.PrincipalId),
		TenantId:    pointer.From(input.TenantId),
	}

	if input.Type != nil && *input.Type == extensions.AKSIdentityTypeUserAssigned {
		output.Type = identity.TypeUserAssigned
	}

	return identity.FlattenSystemAssigned(&output)
}
