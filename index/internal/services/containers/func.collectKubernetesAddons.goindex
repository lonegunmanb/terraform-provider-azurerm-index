package github.com/hashicorp/terraform-provider-azurerm/internal/services/containers
import (
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerservice/2024-05-01/managedclusters"
	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2023-11-01/applicationgateways"
	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2020-08-01/workspaces"
	"github.com/hashicorp/go-azure-sdk/sdk/environments"
	commonValidate "github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	containerValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/containers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func collectKubernetesAddons(d *pluginsdk.ResourceData) map[string]interface{} {
	return map[string]interface{}{
		"aci_connector_linux":              d.Get("aci_connector_linux").([]interface{}),
		"azure_policy_enabled":             d.Get("azure_policy_enabled").(bool),
		"confidential_computing":           d.Get("confidential_computing").([]interface{}),
		"http_application_routing_enabled": d.Get("http_application_routing_enabled").(bool),
		"oms_agent":                        d.Get("oms_agent").([]interface{}),
		"ingress_application_gateway":      d.Get("ingress_application_gateway").([]interface{}),
		"open_service_mesh_enabled":        d.Get("open_service_mesh_enabled").(bool),
		"key_vault_secrets_provider":       d.Get("key_vault_secrets_provider").([]interface{}),
	}
}
