package github.com/hashicorp/terraform-provider-azurerm/internal/services/containers
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/kubernetesconfiguration/2023-05-01/fluxconfiguration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containers/validate"
	storageValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/giovanni/storage/2023-11-03/blob/accounts"
	"github.com/jackofallops/giovanni/storage/2023-11-03/blob/containers"
)
func setConfigurationProtectedSettings(metadata sdk.ResourceMetaData, model KubernetesFluxConfigurationModel, properties *fluxconfiguration.FluxConfiguration) error {
	if _, exists := metadata.ResourceData.GetOk("git_repository"); exists {
		_, configurationProtectedSettings, err := expandGitRepositoryDefinitionModel(model.GitRepository)
		if err != nil {
			return err
		}
		properties.Properties.ConfigurationProtectedSettings = configurationProtectedSettings
	} else if _, exists = metadata.ResourceData.GetOk("bucket"); exists {
		_, properties.Properties.ConfigurationProtectedSettings = expandBucketDefinitionModel(model.Bucket)
	}
	return nil
}
