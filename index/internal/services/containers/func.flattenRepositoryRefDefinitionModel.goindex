package github.com/hashicorp/terraform-provider-azurerm/internal/services/containers
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/kubernetesconfiguration/2023-05-01/fluxconfiguration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containers/validate"
	storageValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/giovanni/storage/2023-11-03/blob/accounts"
	"github.com/jackofallops/giovanni/storage/2023-11-03/blob/containers"
)
func flattenRepositoryRefDefinitionModel(input *fluxconfiguration.RepositoryRefDefinition) (string, string, error) {
	if input == nil {
		return "", "", nil
	}

	var referenceType string
	var referenceValue string

	switch {
	case input.Branch != nil:
		referenceType = FluxGitBranch
		referenceValue = *input.Branch
	case input.Commit != nil:
		referenceType = FluxGitCommit
		referenceValue = *input.Commit
	case input.Semver != nil:
		referenceType = FluxGitSemverRange
		referenceValue = *input.Semver
	case input.Tag != nil:
		referenceType = FluxGitReferenceTag
		referenceValue = *input.Tag
	default:
		return "", "", fmt.Errorf("failed to retrieve git reference")
	}

	return referenceType, referenceValue, nil
}
