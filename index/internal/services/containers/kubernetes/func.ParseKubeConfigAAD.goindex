package github.com/hashicorp/terraform-provider-azurerm/internal/services/containers/kubernetes
import (
	"errors"
	"fmt"

	"gopkg.in/yaml.v3"
)
func ParseKubeConfigAAD(config string) (*KubeConfigAAD, error) {
	if config == "" {
		return nil, fmt.Errorf("cannot parse empty config")
	}

	var kubeConfig KubeConfigAAD
	if err := yaml.Unmarshal([]byte(config), &kubeConfig); err != nil {
		return nil, fmt.Errorf("failed to unmarshal YAML config with error %+v", err)
	}
	if len(kubeConfig.Clusters) == 0 || len(kubeConfig.Users) == 0 {
		return nil, fmt.Errorf("config %+v contains no valid clusters or users", kubeConfig)
	}

	c := kubeConfig.Clusters[0].Cluster
	if c.Server == "" {
		return nil, fmt.Errorf("config has invalid or non existent server for cluster %+v", c)
	}

	return &kubeConfig, nil
}
