package github.com/hashicorp/terraform-provider-azurerm/internal/services/containers
import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerregistry/2023-07-01/credentialsets"
	"github.com/hashicorp/go-azure-sdk/resource-manager/containerregistry/2023-11-01-preview/registries"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	keyVaultValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/keyvault/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func expandAuthCredentials(input []AuthenticationCredential) *[]credentialsets.AuthCredential {
	output := make([]credentialsets.AuthCredential, 0)
	if len(input) == 0 {
		return &output
	}
	for _, v := range input {
		output = append(output, credentialsets.AuthCredential{
			Name:                     pointer.To(credentialsets.CredentialNameCredentialOne),
			UsernameSecretIdentifier: pointer.To(v.UsernameSecretId),
			PasswordSecretIdentifier: pointer.To(v.PasswordSecretId),
		})
	}
	return &output
}
