package github.com/hashicorp/terraform-provider-azurerm/internal/services/bot
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/bot/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/bot/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/botservice/2021-05-01-preview/botservice"
)
func flattenSites(input *[]botservice.WebChatSite) []interface{} {
	results := make([]interface{}, 0)

	for _, item := range *input {
		result := make(map[string]interface{})

		var name string
		if v := item.SiteName; v != nil {
			name = *v
		}
		result["name"] = name

		userUploadEnabled := true
		if v := item.IsBlockUserUploadEnabled; v != nil {
			userUploadEnabled = !*v
		}
		result["user_upload_enabled"] = userUploadEnabled

		var endpointParametersEnabled bool
		if v := item.IsEndpointParametersEnabled; v != nil {
			endpointParametersEnabled = *v
		}
		result["endpoint_parameters_enabled"] = endpointParametersEnabled

		storageEnabled := true
		if v := item.IsNoStorageEnabled; v != nil {
			storageEnabled = !*v
		}
		result["storage_enabled"] = storageEnabled

		results = append(results, result)
	}

	return results
}
