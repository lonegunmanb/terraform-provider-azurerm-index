package github.com/hashicorp/terraform-provider-azurerm/internal/services/bot
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/bot/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/bot/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/botservice/2021-05-01-preview/botservice"
)
func expandSites(input []interface{}) *[]botservice.WebChatSite {
	results := make([]botservice.WebChatSite, 0)

	for _, item := range input {
		site := item.(map[string]interface{})
		result := botservice.WebChatSite{
			IsEnabled:                   utils.Bool(true),
			IsBlockUserUploadEnabled:    utils.Bool(!site["user_upload_enabled"].(bool)),
			IsEndpointParametersEnabled: utils.Bool(site["endpoint_parameters_enabled"].(bool)),
			IsNoStorageEnabled:          utils.Bool(!site["storage_enabled"].(bool)),
		}

		if siteName := site["name"].(string); siteName != "" {
			result.SiteName = utils.String(siteName)
		}

		results = append(results, result)
	}

	return &results
}
