package github.com/hashicorp/terraform-provider-azurerm/internal/services/subscription
import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	resourcesSubscription "github.com/hashicorp/go-azure-sdk/resource-manager/resources/2022-12-01/subscriptions"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func flattenZonesMapping(location *resourcesSubscription.Location) (zoneMappings []LocationZoneMapping) {
	zoneMappings = make([]LocationZoneMapping, 0)

	if location == nil || location.AvailabilityZoneMappings == nil {
		return zoneMappings
	}

	for _, zoneMapping := range *location.AvailabilityZoneMappings {
		locationZoneMapping := LocationZoneMapping{
			LogicalZone:  pointer.From(zoneMapping.LogicalZone),
			PhysicalZone: pointer.From(zoneMapping.PhysicalZone),
		}

		zoneMappings = append(zoneMappings, locationZoneMapping)
	}

	return zoneMappings
}
