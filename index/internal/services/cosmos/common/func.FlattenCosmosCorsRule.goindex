package github.com/hashicorp/terraform-provider-azurerm/internal/services/cosmos/common
import (
	"math"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/cosmosdb/2024-08-15/cosmosdb"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func FlattenCosmosCorsRule(input *[]cosmosdb.CorsPolicy) []interface{} {
	corsRules := make([]interface{}, 0)

	if input == nil || len(*input) == 0 {
		return corsRules
	}

	for _, corsRule := range *input {
		var maxAgeInSeconds int

		if corsRule.MaxAgeInSeconds != nil {
			maxAgeInSeconds = int(*corsRule.MaxAgeInSeconds)
		}

		corsRules = append(corsRules, map[string]interface{}{
			"allowed_headers":    flattenCorsProperty(corsRule.AllowedHeaders),
			"allowed_origins":    flattenCorsProperty(pointer.To(corsRule.AllowedOrigins)),
			"allowed_methods":    flattenCorsProperty(corsRule.AllowedMethods),
			"exposed_headers":    flattenCorsProperty(corsRule.ExposedHeaders),
			"max_age_in_seconds": maxAgeInSeconds,
		})
	}

	return corsRules
}
