package github.com/hashicorp/terraform-provider-azurerm/internal/services/cosmos/common
import (
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-sdk/resource-manager/cosmosdb/2024-08-15/cosmosdb"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func ExpandAzureRmCosmosDBIndexingPolicySpatialIndexes(input []interface{}) *[]cosmosdb.SpatialSpec {
	if len(input) == 0 || input[0] == nil {
		return nil
	}
	indexes := make([]cosmosdb.SpatialSpec, 0)
	// no matter what spatial types are updated, all types will be set and returned from service
	spatialTypes := []cosmosdb.SpatialType{
		cosmosdb.SpatialTypeLineString,
		cosmosdb.SpatialTypeMultiPolygon,
		cosmosdb.SpatialTypePoint,
		cosmosdb.SpatialTypePolygon,
	}

	for _, i := range input {
		indexPair := i.(map[string]interface{})
		indexes = append(indexes, cosmosdb.SpatialSpec{
			Types: &spatialTypes,
			Path:  utils.String(indexPair["path"].(string)),
		})
	}

	return &indexes
}
