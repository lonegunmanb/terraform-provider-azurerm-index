package github.com/hashicorp/terraform-provider-azurerm/internal/services/cosmos
import (
	"fmt"
	"time"

	"github.com/Azure/azure-sdk-for-go/services/cosmos-db/mgmt/2021-10-15/documentdb" // nolint: staticcheck
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cosmos/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cosmos/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenCosmosDbRestorableDatabaseAccountsRestorableLocations(input *[]documentdb.RestorableLocationResource) []interface{} {
	result := make([]interface{}, 0)

	if len(*input) == 0 {
		return result
	}

	for _, item := range *input {
		var location, regionalDatabaseAccountInstanceId, creationTime, deletionTime string

		if item.LocationName != nil {
			location = *item.LocationName
		}

		if item.RegionalDatabaseAccountInstanceID != nil {
			regionalDatabaseAccountInstanceId = *item.RegionalDatabaseAccountInstanceID
		}

		if item.CreationTime != nil {
			creationTime = item.CreationTime.Format(time.RFC3339)
		}

		if item.DeletionTime != nil {
			deletionTime = item.DeletionTime.Format(time.RFC3339)
		}

		result = append(result, map[string]interface{}{
			"creation_time":                         creationTime,
			"deletion_time":                         deletionTime,
			"location":                              location,
			"regional_database_account_instance_id": regionalDatabaseAccountInstanceId,
		})
	}

	return result
}
