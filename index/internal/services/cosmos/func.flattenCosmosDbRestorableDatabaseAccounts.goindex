package github.com/hashicorp/terraform-provider-azurerm/internal/services/cosmos
import (
	"fmt"
	"time"

	"github.com/Azure/azure-sdk-for-go/services/cosmos-db/mgmt/2021-10-15/documentdb" // nolint: staticcheck
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cosmos/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/cosmos/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenCosmosDbRestorableDatabaseAccounts(input *[]documentdb.RestorableDatabaseAccountGetResult, accountName string) []interface{} {
	result := make([]interface{}, 0)

	if len(*input) == 0 {
		return result
	}

	for _, item := range *input {
		if props := item.RestorableDatabaseAccountProperties; props != nil && props.AccountName != nil && *props.AccountName == accountName {
			var id, creationTime, deletionTime string
			var apiType documentdb.APIType

			if item.ID != nil {
				id = *item.ID
			}

			if props.APIType != "" {
				apiType = props.APIType
			}

			if props.CreationTime != nil {
				creationTime = props.CreationTime.Format(time.RFC3339)
			}

			if props.DeletionTime != nil {
				deletionTime = props.DeletionTime.Format(time.RFC3339)
			}

			result = append(result, map[string]interface{}{
				"id":                   id,
				"api_type":             string(apiType),
				"creation_time":        creationTime,
				"deletion_time":        deletionTime,
				"restorable_locations": flattenCosmosDbRestorableDatabaseAccountsRestorableLocations(props.RestorableLocations),
			})
		}
	}

	return result
}
