package github.com/hashicorp/terraform-provider-azurerm/internal/services/devtestlabs/migration
import (
	"context"
	"log"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/devtestlab/2018-09-15/virtualmachines"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func devTestWindowsVirtualMachineSchemaForV0AndV1() map[string]*pluginsdk.Schema {
	return map[string]*pluginsdk.Schema{
		"name": {
			Type:     pluginsdk.TypeString,
			Required: true,
		},

		"lab_name": {
			Type:     pluginsdk.TypeString,
			Required: true,
		},

		"resource_group_name": azure.SchemaResourceGroupNameDiffSuppress(),

		"location": commonschema.Location(),

		"size": {
			Type:     pluginsdk.TypeString,
			Required: true,
		},

		"username": {
			Type:     pluginsdk.TypeString,
			Required: true,
		},

		"password": {
			Type:     pluginsdk.TypeString,
			Required: true,
		},

		"storage_type": {
			Type:     pluginsdk.TypeString,
			Required: true,
		},

		"lab_subnet_name": {
			Type:     pluginsdk.TypeString,
			Required: true,
		},

		"lab_virtual_network_id": {
			Type:     pluginsdk.TypeString,
			Required: true,
		},

		"allow_claim": {
			Type:     pluginsdk.TypeBool,
			Optional: true,
		},

		"disallow_public_ip_address": {
			Type:     pluginsdk.TypeBool,
			Optional: true,
		},

		"gallery_image_reference": {
			Type:     pluginsdk.TypeList,
			Required: true,
			Elem: &pluginsdk.Resource{
				Schema: map[string]*pluginsdk.Schema{
					"offer": {
						Type:     pluginsdk.TypeString,
						Required: true,
					},
					"publisher": {
						Type:     pluginsdk.TypeString,
						Required: true,
					},
					"sku": {
						Type:     pluginsdk.TypeString,
						Required: true,
					},
					"version": {
						Type:     pluginsdk.TypeString,
						Required: true,
					},
				},
			},
		},

		"inbound_nat_rule": {
			Type:     pluginsdk.TypeSet,
			Optional: true,
			Elem: &pluginsdk.Resource{
				Schema: map[string]*pluginsdk.Schema{
					"protocol": {
						Type:     pluginsdk.TypeString,
						Required: true,
					},

					"backend_port": {
						Type:     pluginsdk.TypeInt,
						Required: true,
					},

					"frontend_port": {
						Type:     pluginsdk.TypeInt,
						Computed: true,
					},
				},
			},
		},

		"notes": {
			Type:     pluginsdk.TypeString,
			Optional: true,
		},

		"tags": commonschema.Tags(),

		"fqdn": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},

		"unique_identifier": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},
	}
}
