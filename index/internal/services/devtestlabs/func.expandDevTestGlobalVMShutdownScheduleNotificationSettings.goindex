package github.com/hashicorp/terraform-provider-azurerm/internal/services/devtestlabs
import (
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/devtestlab/2018-09-15/globalschedules"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	computeValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/compute/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tags"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func expandDevTestGlobalVMShutdownScheduleNotificationSettings(d *pluginsdk.ResourceData) *globalschedules.NotificationSettings {
	notificationSettingsConfigs := d.Get("notification_settings").([]interface{})
	notificationSettingsConfig := notificationSettingsConfigs[0].(map[string]interface{})
	webhookURL := notificationSettingsConfig["webhook_url"].(string)
	timeInMinutes := int64(notificationSettingsConfig["time_in_minutes"].(int))
	email := notificationSettingsConfig["email"].(string)

	var notificationStatus globalschedules.EnableStatus
	if notificationSettingsConfig["enabled"].(bool) {
		notificationStatus = globalschedules.EnableStatusEnabled
	} else {
		notificationStatus = globalschedules.EnableStatusDisabled
	}

	return &globalschedules.NotificationSettings{
		WebhookURL:     &webhookURL,
		TimeInMinutes:  &timeInMinutes,
		Status:         &notificationStatus,
		EmailRecipient: &email,
	}
}
