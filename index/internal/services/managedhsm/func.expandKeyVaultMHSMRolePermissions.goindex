package github.com/hashicorp/terraform-provider-azurerm/internal/services/managedhsm
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/authorization/2022-04-01/roledefinitions"
	"github.com/hashicorp/go-azure-sdk/resource-manager/keyvault/2023-07-01/managedhsms"
	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/managedhsm/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/managedhsm/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/managedhsm/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/keyvault/7.4/keyvault"
)
func expandKeyVaultMHSMRolePermissions(perms []Permission) *[]keyvault.Permission {
	res := make([]keyvault.Permission, 0, len(perms))
	for _, perm := range perms {
		dataActions, notDataActions := make([]keyvault.DataAction, 0), make([]keyvault.DataAction, 0)
		for _, data := range perm.DataActions {
			dataActions = append(dataActions, keyvault.DataAction(data))
		}
		for _, notData := range perm.NotDataActions {
			notDataActions = append(notDataActions, keyvault.DataAction(notData))
		}

		res = append(res, keyvault.Permission{
			Actions:        pointer.To(perm.Actions),
			NotActions:     pointer.To(perm.NotActions),
			DataActions:    pointer.To(dataActions),
			NotDataActions: pointer.To(notDataActions),
		})
	}
	return &res
}
