package github.com/hashicorp/terraform-provider-azurerm/internal/services/managedhsm/parse
import (
	"fmt"
	"net/url"
	"strings"
)
func ManagedHSMDataPlaneVersionedKeyID(input string, domainSuffix *string) (*ManagedHSMDataPlaneVersionedKeyId, error) {
	if input == "" {
		return nil, fmt.Errorf("`input` was empty")
	}
	if domainSuffix != nil && !strings.HasPrefix(strings.ToLower(*domainSuffix), "managedhsm.") {
		return nil, fmt.Errorf("internal-error: the domainSuffix for Managed HSM %q didn't contain `managedhsm.`", *domainSuffix)
	}

	uri, err := url.Parse(input)
	if err != nil {
		return nil, fmt.Errorf("parsing %q: %+v", input, err)
	}

	endpoint, err := parseDataPlaneEndpoint(uri, domainSuffix)
	if err != nil {
		// intentionally not wrapping this
		return nil, err
	}

	const requireVersion = true
	resource, err := parseDataPlaneResource(uri, "keys", requireVersion)
	if err != nil {
		// intentionally not wrapping this
		return nil, err
	}

	return &ManagedHSMDataPlaneVersionedKeyId{
		ManagedHSMName: endpoint.ManagedHSMName,
		DomainSuffix:   endpoint.DomainSuffix,
		KeyName:        resource.itemName,
		KeyVersion:     *resource.itemVersion,
	}, nil
}
