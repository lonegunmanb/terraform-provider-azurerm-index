package github.com/hashicorp/terraform-provider-azurerm/internal/services/managedhsm
import (
	"context"
	"fmt"
	"log"
	"net/http"
	"strings"
	"time"

	"github.com/Azure/go-autorest/autorest"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func managedHSMKeyRefreshFunc(childItemUri string) pluginsdk.StateRefreshFunc {
	return func() (interface{}, string, error) {
		log.Printf("[DEBUG] Checking to see if Managed HSM Key %q is available..", childItemUri)

		PTransport := &http.Transport{Proxy: http.ProxyFromEnvironment}

		client := &http.Client{
			Transport: PTransport,
		}

		conn, err := client.Get(childItemUri)
		if err != nil {
			log.Printf("[DEBUG] Didn't find Managed HSM Key at %q", childItemUri)
			return nil, "pending", fmt.Errorf("checking Managed HSM Key at %q: %s", childItemUri, err)
		}

		defer conn.Body.Close()

		log.Printf("[DEBUG] Found Managed HSM Key %q", childItemUri)
		return "available", "available", nil
	}
}
