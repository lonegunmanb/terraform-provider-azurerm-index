package github.com/hashicorp/terraform-provider-azurerm/internal/services/managedhsm
import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	validate2 "github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/managedhsm/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/managedhsm/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/jackofallops/kermit/sdk/keyvault/7.4/keyvault"
)
func (r KeyVaultMHSMKeyRotationPolicyResource) Arguments() map[string]*pluginsdk.Schema {
	return map[string]*pluginsdk.Schema{
		"managed_hsm_key_id": {
			ForceNew: true,
			Required: true,
			Type:     pluginsdk.TypeString,
		},

		"expire_after": {
			Type:         pluginsdk.TypeString,
			Required:     true,
			ValidateFunc: validate2.ISO8601DurationBetween("P28D", "P100Y"),
		},

		// notify not supported in HSM Key, only rotate is supported
		"time_after_creation": {
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: validate2.ISO8601DurationBetween("P28D", "P100Y"),
			ExactlyOneOf: []string{
				"time_after_creation",
				"time_before_expiry",
			},
		},

		"time_before_expiry": {
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: validate2.ISO8601Duration,
			ExactlyOneOf: []string{
				"time_after_creation",
				"time_before_expiry",
			},
		},
	}
}
