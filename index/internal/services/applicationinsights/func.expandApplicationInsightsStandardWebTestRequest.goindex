package github.com/hashicorp/terraform-provider-azurerm/internal/services/applicationinsights
import (
	"context"
	"encoding/base64"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	components "github.com/hashicorp/go-azure-sdk/resource-manager/applicationinsights/2020-02-02/componentsapis"
	webtests "github.com/hashicorp/go-azure-sdk/resource-manager/applicationinsights/2022-06-15/webtestsapis"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandApplicationInsightsStandardWebTestRequest(input []RequestModel) (request *webtests.WebTestPropertiesRequest) {
	if len(input) == 0 {
		return nil
	}
	requestInput := input[0]

	request = &webtests.WebTestPropertiesRequest{
		FollowRedirects:        pointer.To(requestInput.FollowRedirects),
		HTTPVerb:               pointer.To(requestInput.HTTPVerb),
		ParseDependentRequests: pointer.To(requestInput.ParseDependentRequests),
	}

	request.Headers = expandApplicationInsightsStandardWebTestRequestHeaders(requestInput.Header)

	if v := requestInput.Body; v != "" {
		request.RequestBody = pointer.To(utils.Base64EncodeIfNot(v))
	}

	if v := requestInput.URL; v != "" {
		request.RequestURL = pointer.To(v)
	}

	return request
}
