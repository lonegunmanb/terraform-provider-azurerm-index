package github.com/hashicorp/terraform-provider-azurerm/internal/services/applicationinsights
import (
	"fmt"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	analyticsitems "github.com/hashicorp/go-azure-sdk/resource-manager/applicationinsights/2015-05-01/analyticsitemsapis"
	components "github.com/hashicorp/go-azure-sdk/resource-manager/applicationinsights/2020-02-02/componentsapis"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/applicationinsights/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/applicationinsights/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func resourceApplicationInsightsAnalyticsItemUpdate(d *pluginsdk.ResourceData, meta interface{}) error {
	client := meta.(*clients.Client).AppInsights.AnalyticsItemsClient
	ctx, cancel := timeouts.ForCreateUpdate(meta.(*clients.Client).StopContext, d)
	defer cancel()

	id, itemId, err := ParseGeneratedAnalyticsItemId(d.Id())
	if err != nil {
		return err
	}

	getOptions := analyticsitems.AnalyticsItemsGetOperationOptions{
		Id: pointer.To(itemId),
	}

	existing, err := client.AnalyticsItemsGet(ctx, *id, getOptions)
	if err != nil {
		return fmt.Errorf("retrieving %s: %+v", id, err)
	}

	payload := existing.Model

	if d.HasChange("content") {
		payload.Content = pointer.To(d.Get("content").(string))
	}

	if d.HasChange("function_alias") {
		if payload.Properties == nil {
			payload.Properties = &analyticsitems.ApplicationInsightsComponentAnalyticsItemProperties{}
		}
		payload.Properties.FunctionAlias = pointer.To(d.Get("function_alias").(string))
	}

	putOptions := analyticsitems.AnalyticsItemsPutOperationOptions{
		OverrideItem: pointer.To(true),
	}

	if _, err = client.AnalyticsItemsPut(ctx, *id, *payload, putOptions); err != nil {
		return fmt.Errorf("updating %s: %+v", id, err)
	}

	return resourceApplicationInsightsAnalyticsItemRead(d, meta)
}
