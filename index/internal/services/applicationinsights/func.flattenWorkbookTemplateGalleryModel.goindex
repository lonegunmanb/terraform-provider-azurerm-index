package github.com/hashicorp/terraform-provider-azurerm/internal/services/applicationinsights
import (
	"context"
	"encoding/json"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	workbooktemplates "github.com/hashicorp/go-azure-sdk/resource-manager/applicationinsights/2020-11-20/workbooktemplatesapis"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenWorkbookTemplateGalleryModel(inputList *[]workbooktemplates.WorkbookTemplateGallery) []WorkbookTemplateGalleryModel {
	if inputList == nil {
		return []WorkbookTemplateGalleryModel{}
	}

	outputList := make([]WorkbookTemplateGalleryModel, 0, len(*inputList))
	for _, input := range *inputList {
		output := WorkbookTemplateGalleryModel{}

		if input.Category != nil {
			output.Category = *input.Category
		}

		if input.Name != nil {
			output.Name = *input.Name
		}

		if input.Order != nil {
			output.Order = *input.Order
		}

		if input.ResourceType != nil {
			output.ResourceType = *input.ResourceType
		}

		if input.Type != nil {
			output.Type = *input.Type
		}

		outputList = append(outputList, output)
	}

	return outputList
}
