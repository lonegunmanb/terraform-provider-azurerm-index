package github.com/hashicorp/terraform-provider-azurerm/internal/services/applicationinsights
import (
	"context"
	"encoding/base64"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	components "github.com/hashicorp/go-azure-sdk/resource-manager/applicationinsights/2020-02-02/componentsapis"
	webtests "github.com/hashicorp/go-azure-sdk/resource-manager/applicationinsights/2022-06-15/webtestsapis"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func (ApplicationInsightsStandardWebTestResource) Read() sdk.ResourceFunc {
	return sdk.ResourceFunc{
		Timeout: 5 * time.Minute,

		Func: func(ctx context.Context, metadata sdk.ResourceMetaData) error {
			client := metadata.Client.AppInsights.StandardWebTestsClient

			id, err := webtests.ParseWebTestID(metadata.ResourceData.Id())
			if err != nil {
				return err
			}

			resp, err := client.WebTestsGet(ctx, *id)
			if err != nil {
				if response.WasNotFound(resp.HttpResponse) {
					return metadata.MarkAsGone(id)
				}

				return fmt.Errorf("retrieving %s: %+v", id, err)
			}

			state := ApplicationInsightsStandardWebTestResourceModel{
				Name:              id.WebTestName,
				ResourceGroupName: id.ResourceGroupName,
			}

			if model := resp.Model; model != nil {
				tags := pointer.From(model.Tags)
				for i := range tags {
					if strings.HasPrefix(i, "hidden-link") {
						appInsightsId := strings.Split(i, ":")[1]

						parsedAppInsightsId, err := webtests.ParseComponentIDInsensitively(appInsightsId)
						if err != nil {
							// there might be more than one hidden-link https://github.com/hashicorp/terraform-provider-azurerm/issues/27994
							log.Printf("[DEBUG] Error parsing hidden-link id: %+v", err)
							delete(tags, i)
							continue
						}
						state.ApplicationInsightsID = parsedAppInsightsId.ID()
						delete(tags, i)
					}
				}

				state.Tags = tags
				state.Location = location.Normalize(model.Location)

				if props := model.Properties; props != nil {
					state.SyntheticMonitorID = props.SyntheticMonitorId
					state.Description = pointer.From(props.Description)
					state.Enabled = pointer.From(props.Enabled)
					state.Frequency = pointer.From(props.Frequency)
					state.Timeout = pointer.From(props.Timeout)
					state.Retry = pointer.From(props.RetryEnabled)
					req, err := flattenApplicationInsightsStandardWebTestRequest(props.Request)
					if err != nil {
						return fmt.Errorf("flattening request for %s: %+v", *id, err)
					}
					state.Request = req
					state.ValidationRules = flattenApplicationInsightsStandardWebTestValidations(props.ValidationRules)
					state.GeoLocations = flattenApplicationInsightsStandardWebTestGeoLocations(props.Locations)
				}
			}

			return metadata.Encode(&state)
		},
	}
}
