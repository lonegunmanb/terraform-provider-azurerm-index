package github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/eventhub/2021-11-01/eventhubs"
	"github.com/hashicorp/go-azure-sdk/resource-manager/insights/2022-06-01/datacollectionendpoints"
	"github.com/hashicorp/go-azure-sdk/resource-manager/insights/2022-06-01/datacollectionrules"
	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2020-08-01/workspaces"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenDataCollectionRuleDataSourceLogFiles(input *[]datacollectionrules.LogFilesDataSource) []LogFile {
	if input == nil {
		return make([]LogFile, 0)
	}

	result := make([]LogFile, 0)
	for _, v := range *input {
		setting := make([]LogFileSetting, 0)
		if v.Settings != nil && v.Settings.Text != nil {
			setting = append(setting, LogFileSetting{
				Text: []TextSetting{
					{
						RecordStartTimestampFormat: string(v.Settings.Text.RecordStartTimestampFormat),
					},
				},
			})
		}

		result = append(result, LogFile{
			Name:         flattenStringPtr(v.Name),
			Format:       string(v.Format),
			FilePatterns: v.FilePatterns,
			Streams:      v.Streams,
			Settings:     setting,
		})
	}
	return result
}
