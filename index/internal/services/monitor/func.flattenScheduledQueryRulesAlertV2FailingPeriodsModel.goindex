package github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/insights/2023-03-15-preview/scheduledqueryrules"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenScheduledQueryRulesAlertV2FailingPeriodsModel(input *scheduledqueryrules.ConditionFailingPeriods) []ScheduledQueryRulesAlertV2FailingPeriodsModel {
	var outputList []ScheduledQueryRulesAlertV2FailingPeriodsModel
	if input == nil {
		return outputList
	}

	output := ScheduledQueryRulesAlertV2FailingPeriodsModel{}

	if input.MinFailingPeriodsToAlert != nil {
		output.MinFailingPeriodsToAlert = *input.MinFailingPeriodsToAlert
	}

	if input.NumberOfEvaluationPeriods != nil {
		output.NumberOfEvaluationPeriods = *input.NumberOfEvaluationPeriods
	}

	return append(outputList, output)
}
