package github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor
import (
	"fmt"
	"log"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/alertsmanagement/2021-08-08/alertprocessingrules"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenAlertProcessingRuleConditions(input *[]alertprocessingrules.Condition) []AlertProcessingRuleConditionModel {
	if input == nil {
		return make([]AlertProcessingRuleConditionModel, 0)
	}

	condition := AlertProcessingRuleConditionModel{}
	for _, item := range *input {
		if item.Field != nil && item.Operator != nil && item.Values != nil {
			switch *item.Field {
			case alertprocessingrules.FieldAlertContext:
				condition.AlertContext = []AlertProcessingRuleSingleConditionModel{{string(*item.Operator), *item.Values}}
			case alertprocessingrules.FieldAlertRuleId:
				condition.AlertRuleId = []AlertProcessingRuleSingleConditionModel{{string(*item.Operator), *item.Values}}
			case alertprocessingrules.FieldAlertRuleName:
				condition.AlertRuleName = []AlertProcessingRuleSingleConditionModel{{string(*item.Operator), *item.Values}}
			case alertprocessingrules.FieldDescription:
				condition.Description = []AlertProcessingRuleSingleConditionModel{{string(*item.Operator), *item.Values}}
			case alertprocessingrules.FieldMonitorCondition:
				condition.MonitorCondition = []AlertProcessingRuleSingleConditionModel{{string(*item.Operator), *item.Values}}
			case alertprocessingrules.FieldMonitorService:
				condition.MonitorService = []AlertProcessingRuleSingleConditionModel{{string(*item.Operator), *item.Values}}
			case alertprocessingrules.FieldSeverity:
				condition.Severity = []AlertProcessingRuleSingleConditionModel{{string(*item.Operator), *item.Values}}
			case alertprocessingrules.FieldSignalType:
				condition.SignalType = []AlertProcessingRuleSingleConditionModel{{string(*item.Operator), *item.Values}}
			case alertprocessingrules.FieldTargetResource:
				condition.TargetResource = []AlertProcessingRuleSingleConditionModel{{string(*item.Operator), *item.Values}}
			case alertprocessingrules.FieldTargetResourceGroup:
				condition.TargetResourceGroup = []AlertProcessingRuleSingleConditionModel{{string(*item.Operator), *item.Values}}
			case alertprocessingrules.FieldTargetResourceType:
				condition.TargetResourceType = []AlertProcessingRuleSingleConditionModel{{string(*item.Operator), *item.Values}}
			}
		}
	}

	return []AlertProcessingRuleConditionModel{condition}
}
