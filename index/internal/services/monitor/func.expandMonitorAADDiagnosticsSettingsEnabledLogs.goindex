package github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor
import (
	"context"
	"fmt"
	"log"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/azureactivedirectory/2017-04-01/diagnosticsettings"
	authRuleParse "github.com/hashicorp/go-azure-sdk/resource-manager/eventhub/2021-11-01/authorizationrulesnamespaces"
	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2020-08-01/workspaces"
	"github.com/hashicorp/go-azure-sdk/sdk/client"
	"github.com/hashicorp/go-azure-sdk/sdk/client/pollers"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
)
func expandMonitorAADDiagnosticsSettingsEnabledLogs(input []interface{}) []diagnosticsettings.LogSettings {
	results := make([]diagnosticsettings.LogSettings, 0)

	for _, raw := range input {
		if raw == nil {
			continue
		}
		v := raw.(map[string]interface{})

		logSettings := diagnosticsettings.LogSettings{
			Category: pointer.To(diagnosticsettings.Category(v["category"].(string))),
			Enabled:  true,
		}

		if !features.FivePointOh() {
			if len(v["retention_policy"].([]interface{})) != 0 && v["retention_policy"].([]interface{})[0] != nil {
				policyRaw := v["retention_policy"].([]interface{})[0].(map[string]interface{})
				retentionDays := policyRaw["days"].(int)
				retentionEnabled := policyRaw["enabled"].(bool)
				logSettings.RetentionPolicy = &diagnosticsettings.RetentionPolicy{
					Days:    int64(retentionDays),
					Enabled: retentionEnabled,
				}
			}
		}

		results = append(results, logSettings)
	}

	return results
}
