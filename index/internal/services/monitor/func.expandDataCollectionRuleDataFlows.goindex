package github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/eventhub/2021-11-01/eventhubs"
	"github.com/hashicorp/go-azure-sdk/resource-manager/insights/2023-03-11/datacollectionendpoints"
	"github.com/hashicorp/go-azure-sdk/resource-manager/insights/2023-03-11/datacollectionrules"
	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2020-08-01/workspaces"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandDataCollectionRuleDataFlows(input []DataFlow) *[]datacollectionrules.DataFlow {
	if len(input) == 0 {
		return nil
	}

	result := make([]datacollectionrules.DataFlow, 0)
	for _, v := range input {
		dataFlow := datacollectionrules.DataFlow{
			Destinations: pointer.To(v.Destinations),
			Streams:      expandDataCollectionRuleDataFlowStreams(v.Streams),
		}

		if v.BuiltInTransform != "" {
			dataFlow.BuiltInTransform = utils.String(v.BuiltInTransform)
		}

		if v.OutputStream != "" {
			dataFlow.OutputStream = utils.String(v.OutputStream)
		}

		if v.TransformKql != "" {
			dataFlow.TransformKql = utils.String(v.TransformKql)
		}

		result = append(result, dataFlow)
	}
	return &result
}
