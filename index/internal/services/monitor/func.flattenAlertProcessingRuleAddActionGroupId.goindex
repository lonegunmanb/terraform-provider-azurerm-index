package github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor
import (
	"fmt"
	"log"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/alertsmanagement/2021-08-08/alertprocessingrules"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenAlertProcessingRuleAddActionGroupId(input []alertprocessingrules.Action) ([]string, error) {
	if len(input) != 1 {
		return make([]string, 0), fmt.Errorf("read add_action_group_ids, the action should contains 1 element, but get %d element", len(input))
	}

	if addActionGroups, ok := input[0].(alertprocessingrules.AddActionGroups); ok {
		return addActionGroups.ActionGroupIds, nil
	}

	return make([]string, 0), fmt.Errorf("read add_action_group_ids, get unsupported action type %v", input[0])
}
