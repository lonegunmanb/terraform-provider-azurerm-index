package github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor
import (
	"fmt"
	"log"
	"strconv"
	"time"

	"github.com/Azure/go-autorest/autorest/date"
	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/insights/2022-10-01/autoscalesettings"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tags"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenAzureRmMonitorAutoScaleSettingCapacity(input autoscalesettings.ScaleCapacity) ([]interface{}, error) {
	result := make(map[string]interface{})

	min, err := strconv.Atoi(input.Minimum)
	if err != nil {
		return nil, fmt.Errorf("converting Minimum Scale Capacity %q to an int: %+v", input.Minimum, err)
	}
	result["minimum"] = min

	max, err := strconv.Atoi(input.Maximum)
	if err != nil {
		return nil, fmt.Errorf("converting Maximum Scale Capacity %q to an int: %+v", input.Maximum, err)
	}
	result["maximum"] = max

	defaultCapacity, err := strconv.Atoi(input.Default)
	if err != nil {
		return nil, fmt.Errorf("converting Default Scale Capacity %q to an int: %+v", input.Default, err)
	}
	result["default"] = defaultCapacity

	return []interface{}{result}, nil
}
