package github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/eventhub/2021-11-01/eventhubs"
	"github.com/hashicorp/go-azure-sdk/resource-manager/insights/2023-03-11/datacollectionendpoints"
	"github.com/hashicorp/go-azure-sdk/resource-manager/insights/2023-03-11/datacollectionrules"
	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2020-08-01/workspaces"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandDataCollectionRuleStreamDeclarations(input []StreamDeclaration) *map[string]datacollectionrules.StreamDeclaration {
	if len(input) == 0 {
		return nil
	}

	result := make(map[string]datacollectionrules.StreamDeclaration, 0)
	for _, v := range input {
		columns := make([]datacollectionrules.ColumnDefinition, 0)
		for _, column := range v.Column {
			columnType := datacollectionrules.KnownColumnDefinitionType(column.Type)
			columns = append(columns, datacollectionrules.ColumnDefinition{
				Name: utils.String(column.Name),
				Type: &columnType,
			})
		}

		result[v.StreamName] = datacollectionrules.StreamDeclaration{
			Columns: &columns,
		}
	}

	return &result
}
