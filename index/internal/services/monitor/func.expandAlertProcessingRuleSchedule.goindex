package github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor
import (
	"fmt"
	"log"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/alertsmanagement/2021-08-08/alertprocessingrules"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandAlertProcessingRuleSchedule(input []AlertProcessingRuleScheduleModel) *alertprocessingrules.Schedule {
	if len(input) == 0 {
		return nil
	}

	v := input[0]
	var effectiveFrom, effectiveUntil *string

	if v.EffectiveFrom != "" {
		effectiveFrom = utils.String(v.EffectiveFrom)
	}

	if v.EffectiveUntil != "" {
		effectiveUntil = utils.String(v.EffectiveUntil)
	}

	schedule := alertprocessingrules.Schedule{
		EffectiveFrom:  effectiveFrom,
		EffectiveUntil: effectiveUntil,
		Recurrences:    expandAlertProcessingRuleScheduleRecurrences(v.Recurrence),
		TimeZone:       utils.String(v.TimeZone),
	}

	return &schedule
}
