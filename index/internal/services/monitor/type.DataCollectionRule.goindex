package github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/eventhub/2021-11-01/eventhubs"
	"github.com/hashicorp/go-azure-sdk/resource-manager/insights/2022-06-01/datacollectionendpoints"
	"github.com/hashicorp/go-azure-sdk/resource-manager/insights/2022-06-01/datacollectionrules"
	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2020-08-01/workspaces"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
type DataCollectionRule struct {
	DataCollectionEndpointId string                 `tfschema:"data_collection_endpoint_id"`
	DataFlows                []DataFlow             `tfschema:"data_flow"`
	DataSources              []DataSource           `tfschema:"data_sources"`
	Description              string                 `tfschema:"description"`
	Destinations             []Destination          `tfschema:"destinations"`
	ImmutableId              string                 `tfschema:"immutable_id"`
	Kind                     string                 `tfschema:"kind"`
	Name                     string                 `tfschema:"name"`
	Location                 string                 `tfschema:"location"`
	ResourceGroupName        string                 `tfschema:"resource_group_name"`
	StreamDeclaration        []StreamDeclaration    `tfschema:"stream_declaration"`
	Tags                     map[string]interface{} `tfschema:"tags"`
}
