package github.com/hashicorp/terraform-provider-azurerm/internal/services/monitor
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/eventhub/2021-11-01/eventhubs"
	"github.com/hashicorp/go-azure-sdk/resource-manager/insights/2022-06-01/datacollectionendpoints"
	"github.com/hashicorp/go-azure-sdk/resource-manager/insights/2022-06-01/datacollectionrules"
	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2020-08-01/workspaces"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandDataCollectionRuleDataSources(input []DataSource) (*datacollectionrules.DataSourcesSpec, error) {
	if len(input) == 0 {
		return nil, nil
	}

	extension, err := expandDataCollectionRuleDataSourceExtensions(input[0].Extensions)
	if err != nil {
		return nil, err
	}

	return &datacollectionrules.DataSourcesSpec{
		DataImports:         expandDataCollectionRuleDataSourceDataImports(input[0].DataImport),
		Extensions:          extension,
		IisLogs:             expandDataCollectionRuleDataSourceIisLogs(input[0].IisLog),
		LogFiles:            expandDataCollectionRuleDataSourceLogFiles(input[0].LogFile),
		PerformanceCounters: expandDataCollectionRuleDataSourcePerfCounters(input[0].PerformanceCounters),
		PlatformTelemetry:   expandDataCollectionRuleDataSourcePlatformTelemetry(input[0].PlatformTelemetry),
		PrometheusForwarder: expandDataCollectionRuleDataSourcePrometheusForwarder(input[0].PrometheusForwarder),
		Syslog:              expandDataCollectionRuleDataSourceSyslog(input[0].Syslog),
		WindowsEventLogs:    expandDataCollectionRuleDataSourceWindowsEventLogs(input[0].WindowsEventLogs),
		WindowsFirewallLogs: expandDataCollectionRuleDataSourceWindowsFirewallLogs(input[0].WindowsFirewallLog),
	}, nil
}
