package github.com/hashicorp/terraform-provider-azurerm/internal/services/hybridcompute
import (
	"context"
	"fmt"
	"strconv"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/hybridcompute/2022-11-10/machines"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenAgentConfigurationModel(input *machines.AgentConfiguration) ([]AgentConfigurationModel, error) {
	var outputList []AgentConfigurationModel
	if input == nil {
		return outputList, nil
	}

	output := AgentConfigurationModel{}

	extensionsAllowListValue := flattenConfigurationExtensionModel(input.ExtensionsAllowList)

	output.ExtensionsAllowList = extensionsAllowListValue

	extensionsBlockListValue := flattenConfigurationExtensionModel(input.ExtensionsBlockList)

	output.ExtensionsBlockList = extensionsBlockListValue

	if input.ExtensionsEnabled != nil {
		parsedBool, err := strconv.ParseBool(*input.ExtensionsEnabled)
		if err != nil {
			return nil, err
		}
		output.ExtensionsEnabled = parsedBool
	}

	if input.GuestConfigurationEnabled != nil {
		parsedBool, err := strconv.ParseBool(*input.GuestConfigurationEnabled)
		if err != nil {
			return nil, err
		}
		output.GuestConfigurationEnabled = parsedBool
	}

	if input.IncomingConnectionsPorts != nil {
		output.IncomingConnectionsPorts = *input.IncomingConnectionsPorts
	}

	if input.ProxyBypass != nil {
		output.ProxyBypass = *input.ProxyBypass
	}

	if input.ProxyURL != nil {
		output.ProxyURL = *input.ProxyURL
	}

	return append(outputList, output), nil
}
