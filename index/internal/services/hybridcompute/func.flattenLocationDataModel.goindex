package github.com/hashicorp/terraform-provider-azurerm/internal/services/hybridcompute
import (
	"context"
	"fmt"
	"strconv"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/hybridcompute/2022-11-10/machines"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenLocationDataModel(input *machines.LocationData) []LocationDataModel {
	var outputList []LocationDataModel
	if input == nil {
		return outputList
	}

	output := LocationDataModel{
		Name: input.Name,
	}

	if input.City != nil {
		output.City = *input.City
	}

	if input.CountryOrRegion != nil {
		output.CountryOrRegion = *input.CountryOrRegion
	}

	if input.District != nil {
		output.District = *input.District
	}

	return append(outputList, output)
}
