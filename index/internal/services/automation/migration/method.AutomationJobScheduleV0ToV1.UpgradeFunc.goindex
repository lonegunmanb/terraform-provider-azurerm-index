package github.com/hashicorp/terraform-provider-azurerm/internal/services/automation/migration
import (
	"context"
	"log"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/automation/2023-11-01/jobschedule"
	"github.com/hashicorp/go-azure-sdk/resource-manager/automation/2023-11-01/runbook"
	"github.com/hashicorp/go-azure-sdk/resource-manager/automation/2023-11-01/schedule"
	pluginsdk "github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
)
func (s AutomationJobScheduleV0ToV1) UpgradeFunc() pluginsdk.StateUpgraderFunc {
	return func(ctx context.Context, rawState map[string]interface{}, meta interface{}) (map[string]interface{}, error) {
		oldId := rawState["id"].(string)
		id, err := jobschedule.ParseJobScheduleID(oldId)
		if err != nil {
			return nil, err
		}

		scheduleName := rawState["schedule_name"].(string)
		runbookName := rawState["runbook_name"].(string)
		scheduleID := schedule.NewScheduleID(id.SubscriptionId, id.ResourceGroupName, id.AutomationAccountName, scheduleName)
		runbookID := runbook.NewRunbookID(id.SubscriptionId, id.ResourceGroupName, id.AutomationAccountName, runbookName)

		tfID := &commonids.CompositeResourceID[*schedule.ScheduleId, *runbook.RunbookId]{
			First:  &scheduleID,
			Second: &runbookID,
		}

		log.Printf("[DEBUG] Upgrade automation job schedule resource id from %s to %s", oldId, tfID.ID())
		rawState["id"] = tfID.ID()
		rawState["resource_manager_id"] = oldId
		return rawState, nil
	}
}
