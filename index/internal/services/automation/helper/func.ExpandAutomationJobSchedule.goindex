package github.com/hashicorp/terraform-provider-azurerm/internal/services/automation/helper
import (
	"bytes"
	"fmt"
	"sort"
	"strings"

	"github.com/gofrs/uuid"
	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/resource-manager/automation/2023-11-01/jobschedule"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func ExpandAutomationJobSchedule(input []interface{}, runBookName string) (*map[string]jobschedule.JobScheduleCreateParameters, error) {
	res := make(map[string]jobschedule.JobScheduleCreateParameters)
	if len(input) == 0 || input[0] == nil {
		return &res, nil
	}

	for _, v := range input {
		js := v.(map[string]interface{})
		// skip SDK v2 bug: https://github.com/hashicorp/terraform-plugin-sdk/issues/1248
		if js["schedule_name"] == "" {
			continue
		}
		jobScheduleCreateParameters := jobschedule.JobScheduleCreateParameters{
			Properties: jobschedule.JobScheduleCreateProperties{
				Schedule: jobschedule.ScheduleAssociationProperty{
					Name: utils.String(js["schedule_name"].(string)),
				},
				Runbook: jobschedule.RunbookAssociationProperty{
					Name: utils.String(runBookName),
				},
			},
		}

		if v, ok := js["parameters"]; ok {
			jsParameters := make(map[string]string)
			for k, v := range v.(map[string]interface{}) {
				value := v.(string)
				jsParameters[k] = value
			}
			jobScheduleCreateParameters.Properties.Parameters = &jsParameters
		}

		if v, ok := js["run_on"]; ok && v.(string) != "" {
			value := v.(string)
			jobScheduleCreateParameters.Properties.RunOn = &value
		}
		res[ResourceAutomationJobScheduleDigest(jobScheduleCreateParameters.Properties)] = jobScheduleCreateParameters
	}

	return &res, nil
}
