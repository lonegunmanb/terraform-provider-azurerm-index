package github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/appplatform/2024-01-01-preview/appplatform"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenGatewaySsoProperties(input *appplatform.SsoProperties, old []GatewaySsoModel) []GatewaySsoModel {
	if input == nil {
		return make([]GatewaySsoModel, 0)
	}

	oldItems := make(map[string]GatewaySsoModel)
	for _, item := range old {
		oldItems[item.IssuerUri] = item
	}

	var issuerUri string
	if input.IssuerUri != nil {
		issuerUri = *input.IssuerUri
	}
	var clientId string
	var clientSecret string
	if oldItem, ok := oldItems[issuerUri]; ok {
		clientId = oldItem.ClientId
		clientSecret = oldItem.ClientSecret
	}
	return []GatewaySsoModel{
		{
			ClientId:     clientId,
			ClientSecret: clientSecret,
			IssuerUri:    issuerUri,
			Scope:        pointer.From(input.Scope),
		},
	}
}
