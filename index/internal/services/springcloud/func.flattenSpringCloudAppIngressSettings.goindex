package github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud
import (
	"encoding/json"
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/set"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/appplatform/2023-05-01-preview/appplatform"
)
func flattenSpringCloudAppIngressSettings(input *appplatform.IngressSettings) interface{} {
	if input == nil {
		return make([]interface{}, 0)
	}
	var readTimeout, sendTimeout, maxAge int32
	backendProtocol := string(input.BackendProtocol)
	sessionAffinity := string(input.SessionAffinity)
	if input.ReadTimeoutInSeconds != nil {
		readTimeout = *input.ReadTimeoutInSeconds
	}
	if input.SendTimeoutInSeconds != nil {
		sendTimeout = *input.SendTimeoutInSeconds
	}
	if input.SessionCookieMaxAge != nil {
		maxAge = *input.SessionCookieMaxAge
	}
	return []interface{}{map[string]interface{}{
		"backend_protocol":        backendProtocol,
		"read_timeout_in_seconds": readTimeout,
		"send_timeout_in_seconds": sendTimeout,
		"session_affinity":        sessionAffinity,
		"session_cookie_max_age":  maxAge,
	}}
}
