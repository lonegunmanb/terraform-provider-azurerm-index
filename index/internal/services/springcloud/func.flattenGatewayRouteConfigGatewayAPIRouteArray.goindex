package github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/appplatform/2023-05-01-preview/appplatform"
)
func flattenGatewayRouteConfigGatewayAPIRouteArray(input *[]appplatform.GatewayAPIRoute) []interface{} {
	results := make([]interface{}, 0)
	if input == nil {
		return results
	}

	for _, item := range *input {
		var description string
		if item.Description != nil {
			description = *item.Description
		}
		var order int32
		if item.Order != nil {
			order = *item.Order
		}
		var ssoEnabled bool
		if item.SsoEnabled != nil {
			ssoEnabled = *item.SsoEnabled
		}
		var title string
		if item.Title != nil {
			title = *item.Title
		}
		var tokenRelay bool
		if item.TokenRelay != nil {
			tokenRelay = *item.TokenRelay
		}
		var uri string
		if item.URI != nil {
			uri = *item.URI
		}
		results = append(results, map[string]interface{}{
			"description":            description,
			"filters":                utils.FlattenStringSlice(item.Filters),
			"order":                  order,
			"predicates":             utils.FlattenStringSlice(item.Predicates),
			"sso_validation_enabled": ssoEnabled,
			"title":                  title,
			"token_relay":            tokenRelay,
			"uri":                    uri,
			"classification_tags":    utils.FlattenStringSlice(item.Tags),
		})
	}
	return results
}
