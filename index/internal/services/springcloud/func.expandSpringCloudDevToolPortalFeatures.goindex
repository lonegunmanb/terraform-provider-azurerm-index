package github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/springcloud/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/appplatform/2023-05-01-preview/appplatform"
)
func expandSpringCloudDevToolPortalFeatures(applicationAcceleratorEnabled, applicationLiveViewEnabled bool) *appplatform.DevToolPortalFeatureSettings {
	applicationAcceleratorState := appplatform.DevToolPortalFeatureStateDisabled
	if applicationAcceleratorEnabled {
		applicationAcceleratorState = appplatform.DevToolPortalFeatureStateEnabled
	}

	applicationLiveViewState := appplatform.DevToolPortalFeatureStateDisabled
	if applicationLiveViewEnabled {
		applicationLiveViewState = appplatform.DevToolPortalFeatureStateEnabled
	}

	return &appplatform.DevToolPortalFeatureSettings{
		ApplicationAccelerator: &appplatform.DevToolPortalFeatureDetail{
			State: applicationAcceleratorState,
		},
		ApplicationLiveView: &appplatform.DevToolPortalFeatureDetail{
			State: applicationLiveViewState,
		},
	}
}
