package github.com/hashicorp/terraform-provider-azurerm/internal/services/loadtestservice
import (
	"context"
	"errors"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/loadtestservice/2022-12-01/loadtests"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func (r LoadTestResource) mapLoadTestResourceSchemaToLoadTestEncryption(input []LoadTestEncryption) *loadtests.EncryptionProperties {
	if len(input) == 0 || input[0].KeyURL == "" {
		return nil
	}

	attr := input[0]

	encryptionIdentity := &loadtests.EncryptionPropertiesIdentity{}
	if attrIdentity := attr.Identity; len(attrIdentity) > 0 {
		encryptionIdentity.ResourceId = pointer.To(attrIdentity[0].IdentityID)
		encryptionIdentity.Type = pointer.To(loadtests.Type(attrIdentity[0].Type))
	}

	return &loadtests.EncryptionProperties{
		KeyURL:   pointer.To(attr.KeyURL),
		Identity: encryptionIdentity,
	}
}
