package github.com/hashicorp/terraform-provider-azurerm/internal/services/arckubernetes
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	arckubernetes "github.com/hashicorp/go-azure-sdk/resource-manager/hybridkubernetes/2024-01-01/connectedclusters"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenArcKubernetesClusterAadProfile(input *arckubernetes.AadProfile) []AzureActiveDirectoryModel {
	if input == nil || (input.EnableAzureRBAC == nil && input.AdminGroupObjectIDs == nil && input.TenantID == nil) {
		return make([]AzureActiveDirectoryModel, 0)
	}

	return []AzureActiveDirectoryModel{
		{
			AzureRbacEnabled:    pointer.From(input.EnableAzureRBAC),
			AdminGroupObjectIds: pointer.From(input.AdminGroupObjectIDs),
			TenantId:            pointer.From(input.TenantID),
		},
	}
}
