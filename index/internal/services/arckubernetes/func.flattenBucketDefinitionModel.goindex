package github.com/hashicorp/terraform-provider-azurerm/internal/services/arckubernetes
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	arckubernetes "github.com/hashicorp/go-azure-sdk/resource-manager/hybridkubernetes/2024-01-01/connectedclusters"
	"github.com/hashicorp/go-azure-sdk/resource-manager/kubernetesconfiguration/2023-05-01/fluxconfiguration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/containers/validate"
	storageValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/giovanni/storage/2023-11-03/blob/accounts"
	"github.com/jackofallops/giovanni/storage/2023-11-03/blob/containers"
)
func flattenBucketDefinitionModel(input *fluxconfiguration.BucketDefinition, bucket []BucketDefinitionModel) []BucketDefinitionModel {
	outputList := make([]BucketDefinitionModel, 0)
	if input == nil {
		return outputList
	}

	output := BucketDefinitionModel{
		AccessKey:             pointer.From(input.AccessKey),
		BucketName:            pointer.From(input.BucketName),
		TlsEnabled:            !pointer.From(input.Insecure),
		LocalAuthRef:          pointer.From(input.LocalAuthRef),
		SyncIntervalInSeconds: pointer.From(input.SyncIntervalInSeconds),
		TimeoutInSeconds:      pointer.From(input.TimeoutInSeconds),
		Url:                   pointer.From(input.Url),
	}

	if len(bucket) > 0 {
		output.SecretKey = bucket[0].SecretKey
	}

	return append(outputList, output)
}
