package github.com/hashicorp/terraform-provider-azurerm/internal/services/arckubernetes
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	arckubernetes "github.com/hashicorp/go-azure-sdk/resource-manager/hybridkubernetes/2024-01-01/connectedclusters"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func (r ArcKubernetesProvisionedClusterResource) Attributes() map[string]*pluginsdk.Schema {
	return map[string]*pluginsdk.Schema{
		"agent_version": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},

		"distribution": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},

		"infrastructure": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},

		"kubernetes_version": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},

		"offering": {
			Type:     pluginsdk.TypeString,
			Computed: true,
		},

		"total_core_count": {
			Type:     pluginsdk.TypeInt,
			Computed: true,
		},

		"total_node_count": {
			Type:     pluginsdk.TypeInt,
			Computed: true,
		},
	}
}
