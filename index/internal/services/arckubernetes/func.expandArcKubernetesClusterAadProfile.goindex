package github.com/hashicorp/terraform-provider-azurerm/internal/services/arckubernetes
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	arckubernetes "github.com/hashicorp/go-azure-sdk/resource-manager/hybridkubernetes/2024-01-01/connectedclusters"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandArcKubernetesClusterAadProfile(input []AzureActiveDirectoryModel) *arckubernetes.AadProfile {
	if len(input) == 0 {
		return nil
	}

	v := input[0]
	output := arckubernetes.AadProfile{
		EnableAzureRBAC: pointer.To(v.AzureRbacEnabled),
	}

	if tenantIdVal := v.TenantId; tenantIdVal != "" {
		output.TenantID = pointer.To(tenantIdVal)
	}

	if groupVal := v.AdminGroupObjectIds; len(groupVal) != 0 {
		output.AdminGroupObjectIDs = pointer.To(groupVal)
	}

	return &output
}
