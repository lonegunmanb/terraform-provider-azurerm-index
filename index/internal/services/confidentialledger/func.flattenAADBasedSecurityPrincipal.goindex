package github.com/hashicorp/terraform-provider-azurerm/internal/services/confidentialledger
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/confidentialledger/2022-05-13/confidentialledger"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/confidentialledger/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenAADBasedSecurityPrincipal(input *[]confidentialledger.AADBasedSecurityPrincipal) []interface{} {
	output := make([]interface{}, 0)
	if input == nil {
		return output
	}

	for _, item := range *input {
		ledgerRoleName := ""
		if item.LedgerRoleName != nil {
			ledgerRoleName = string(*item.LedgerRoleName)
		}

		principalId := ""
		if item.PrincipalId != nil {
			principalId = *item.PrincipalId
		}

		tenantId := ""
		if item.TenantId != nil {
			tenantId = *item.TenantId
		}

		output = append(output, map[string]interface{}{
			"ledger_role_name": ledgerRoleName,
			"principal_id":     principalId,
			"tenant_id":        tenantId,
		})
	}

	return output
}
