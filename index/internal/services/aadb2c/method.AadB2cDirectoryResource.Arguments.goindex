package github.com/hashicorp/terraform-provider-azurerm/internal/services/aadb2c
import (
	"context"
	"errors"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-sdk/resource-manager/aadb2c/2021-04-01-preview/tenants"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tags"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func (r AadB2cDirectoryResource) Arguments() map[string]*pluginsdk.Schema {
	return map[string]*pluginsdk.Schema{
		"domain_name": {
			Description:  "Domain name of the B2C tenant, including onmicrosoft.com suffix.",
			Type:         pluginsdk.TypeString,
			Required:     true,
			ForceNew:     true,
			ValidateFunc: validation.StringIsNotEmpty,
		},

		"resource_group_name": commonschema.ResourceGroupName(),

		"country_code": {
			Description:  "Country code of the B2C tenant. See https://aka.ms/B2CDataResidency for valid country codes.",
			Type:         pluginsdk.TypeString,
			Optional:     true,
			Computed:     true,
			ForceNew:     true,
			ValidateFunc: validation.StringIsNotEmpty,
		},

		"data_residency_location": {
			Description: "Location in which the B2C tenant is hosted and data resides. See https://aka.ms/B2CDataResidency for more information.",
			Type:        pluginsdk.TypeString,
			Required:    true,
			ForceNew:    true,
			ValidateFunc: validation.StringInSlice([]string{
				string(tenants.LocationAsiaPacific),
				string(tenants.LocationAustralia),
				string(tenants.LocationEurope),
				string(tenants.LocationGlobal),
				string(tenants.LocationUnitedStates),
			}, false),
		},

		"display_name": {
			Description:  "The initial display name of the B2C tenant.",
			Type:         pluginsdk.TypeString,
			Optional:     true,
			Computed:     true,
			ForceNew:     true,
			ValidateFunc: validation.StringIsNotEmpty,
		},

		"sku_name": {
			Description: "Billing SKU for the B2C tenant. See https://aka.ms/b2cBilling for more information.",
			Type:        pluginsdk.TypeString,
			Required:    true,
			ValidateFunc: validation.StringInSlice([]string{
				string(tenants.SkuNamePremiumP1),
				string(tenants.SkuNamePremiumP2),
				// string(tenants.SkuNameStandard), // API doesn't seem to support "Standard", it's ignored and "PremiumP1" is used instead, even when patching
			}, false),
		},

		"tags": tags.Schema(),
	}
}
