package github.com/hashicorp/terraform-provider-azurerm/internal/services/datadog
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/datadog/2021-03-01/monitorsresource"
	"github.com/hashicorp/go-azure-sdk/resource-manager/datadog/2021-03-01/rules"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandFilteringTag(input []interface{}) *[]rules.FilteringTag {
	filteringTags := make([]rules.FilteringTag, 0)

	for _, v := range input {
		config := v.(map[string]interface{})

		filteringTags = append(filteringTags, rules.FilteringTag{
			Name:   utils.String(config["name"].(string)),
			Value:  utils.String(config["value"].(string)),
			Action: pointer.To(rules.TagAction(config["action"].(string))),
		})
	}

	return &filteringTags
}
