package github.com/hashicorp/terraform-provider-azurerm/internal/services/datadog
import (
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/datadog/2021-03-01/monitorsresource"
	"github.com/hashicorp/go-azure-sdk/resource-manager/datadog/2021-03-01/rules"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenLogRules(input *rules.LogRules) []interface{} {
	results := make([]interface{}, 0)

	if input != nil {
		aadLogEnabled := false
		if input.SendAadLogs != nil {
			aadLogEnabled = *input.SendAadLogs
		}

		subscriptionLogEnabled := false
		if input.SendSubscriptionLogs != nil {
			subscriptionLogEnabled = *input.SendSubscriptionLogs
		}

		resourceLogEnabled := false
		if input.SendResourceLogs != nil {
			resourceLogEnabled = *input.SendResourceLogs
		}

		results = append(results, map[string]interface{}{
			"aad_log_enabled":          aadLogEnabled,
			"filter":                   flattenFilteringTags(input.FilteringTags),
			"resource_log_enabled":     resourceLogEnabled,
			"subscription_log_enabled": subscriptionLogEnabled,
		})
	}

	return results
}
