package github.com/hashicorp/terraform-provider-azurerm/internal/services/policy
import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"net/http"
	"reflect"
	"regexp"
	"strconv"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/resources/2025-01-01/policysetdefinitions"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/policy/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func expandPolicyDefinitionGroup(input []PolicyDefinitionGroupModel) *[]policysetdefinitions.PolicyDefinitionGroup {
	result := make([]policysetdefinitions.PolicyDefinitionGroup, 0)

	for _, v := range input {
		group := policysetdefinitions.PolicyDefinitionGroup{
			Category:    pointer.To(v.Category),
			Description: pointer.To(v.Description),
			DisplayName: pointer.To(v.DisplayName),
			Name:        v.Name,
		}

		// The API returns an error if we send an empty string for `AdditionalMetadataResourceID`
		if v.AdditionalMetadataResourceID != "" {
			group.AdditionalMetadataId = pointer.To(v.AdditionalMetadataResourceID)
		}

		result = append(result, group)
	}

	return &result
}
