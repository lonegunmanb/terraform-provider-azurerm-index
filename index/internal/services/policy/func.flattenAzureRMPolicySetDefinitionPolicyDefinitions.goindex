package github.com/hashicorp/terraform-provider-azurerm/internal/services/policy
import (
	"context"
	"encoding/json"
	"fmt"
	"log"
	"net/http"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/resources/2025-01-01/policysetdefinitions"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	mgmtGrpParse "github.com/hashicorp/terraform-provider-azurerm/internal/services/managementgroup/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/policy/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/policy/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/policy/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenAzureRMPolicySetDefinitionPolicyDefinitions(input []policysetdefinitions.PolicyDefinitionReference) ([]interface{}, error) {
	result := make([]interface{}, 0)

	for _, definition := range input {
		parameterValues, err := flattenPolicyDefinitionReferenceParameterValues(definition.Parameters)
		if err != nil {
			return nil, fmt.Errorf("flattening `parameter_values`: %+v", err)
		}

		result = append(result, map[string]interface{}{
			"policy_definition_id": definition.PolicyDefinitionId,
			"parameter_values":     parameterValues,
			"reference_id":         pointer.From(definition.PolicyDefinitionReferenceId),
			"policy_group_names":   utils.FlattenStringSlice(definition.GroupNames),
			"version":              pointer.From(definition.DefinitionVersion),
		})
	}
	return result, nil
}
