package github.com/hashicorp/terraform-provider-azurerm/internal/services/policy
import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"net/http"
	"reflect"
	"regexp"
	"strconv"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/resource-manager/resources/2025-01-01/policysetdefinitions"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/policy/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func flattenPolicyDefinitionReference(input []policysetdefinitions.PolicyDefinitionReference) ([]PolicyDefinitionReferenceModel, error) {
	result := make([]PolicyDefinitionReferenceModel, 0)

	for _, definition := range input {
		parameterValues, err := flattenPolicyDefinitionReferenceParameterValues(definition.Parameters)
		if err != nil {
			return nil, fmt.Errorf("flattening `parameter_values`: %+v", err)
		}

		result = append(result, PolicyDefinitionReferenceModel{
			PolicyDefinitionID: definition.PolicyDefinitionId,
			ParameterValues:    parameterValues,
			ReferenceID:        pointer.From(definition.PolicyDefinitionReferenceId),
			PolicyGroupNames:   pointer.From(definition.GroupNames),
			Version:            pointer.From(definition.DefinitionVersion),
		})
	}

	return result, nil
}
