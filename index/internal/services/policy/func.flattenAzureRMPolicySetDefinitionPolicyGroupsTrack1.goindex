package github.com/hashicorp/terraform-provider-azurerm/internal/services/policy
import (
	"encoding/json"
	"fmt"
	"time"

	"github.com/Azure/azure-sdk-for-go/services/preview/resources/mgmt/2021-06-01-preview/policy" // nolint: staticcheck
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/policy/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenAzureRMPolicySetDefinitionPolicyGroupsTrack1(input *[]policy.DefinitionGroup) []interface{} {
	result := make([]interface{}, 0)
	if input == nil {
		return result
	}

	for _, group := range *input {
		name := ""
		if group.Name != nil {
			name = *group.Name
		}
		displayName := ""
		if group.DisplayName != nil {
			displayName = *group.DisplayName
		}
		category := ""
		if group.Category != nil {
			category = *group.Category
		}
		description := ""
		if group.Description != nil {
			description = *group.Description
		}
		metadataID := ""
		if group.AdditionalMetadataID != nil {
			metadataID = *group.AdditionalMetadataID
		}

		result = append(result, map[string]interface{}{
			"name":                            name,
			"display_name":                    displayName,
			"category":                        category,
			"description":                     description,
			"additional_metadata_resource_id": metadataID,
		})
	}

	return result
}
