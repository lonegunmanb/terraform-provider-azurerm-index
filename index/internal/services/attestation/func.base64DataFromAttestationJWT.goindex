package github.com/hashicorp/terraform-provider-azurerm/internal/services/attestation
import (
	"context"
	"encoding/base64"
	"encoding/json"
	"encoding/pem"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/attestation/2020-10-01/attestationproviders"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/attestation/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
	"github.com/jackofallops/kermit/sdk/attestation/2022-08-01/attestation"
)
func base64DataFromAttestationJWT(input *string) (*string, error) {
	if input == nil {
		return nil, nil
	}

	split := strings.Split(*input, ".")
	if len(split) != 3 {
		return nil, fmt.Errorf("expected the first token to have 3 segments but got %d", len(split))
	}
	// decode the JWT into a PolicyResult object
	decodedJwtSegment, err := base64.RawURLEncoding.DecodeString(split[1])
	if err != nil {
		return nil, fmt.Errorf("base64-decoding the first JWT Segment %q: %+v", split[1], err)
	}
	var firstResult attestation.PolicyResult
	if err := json.Unmarshal(decodedJwtSegment, &firstResult); err != nil {
		return nil, fmt.Errorf("unmarshaling into PolicyResult: %+v", err)
	}
	if firstResult.Policy == nil {
		return nil, nil
	}

	out := *firstResult.Policy
	return &out, nil
}
