package github.com/hashicorp/terraform-provider-azurerm/internal/services/serviceconnector
import (
	"fmt"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
	"github.com/hashicorp/go-azure-sdk/resource-manager/servicelinker/2022-05-01/links"
	"github.com/hashicorp/go-azure-sdk/resource-manager/servicelinker/2024-04-01/servicelinker"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/storage/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenTargetService(input servicelinker.TargetServiceBase) string {
	var targetServiceId string

	if value, ok := input.(servicelinker.AzureResource); ok {
		if value.Id != nil {
			targetServiceId = *value.Id
			if parsedId, err := parse.StorageAccountDefaultBlobID(targetServiceId); err == nil {
				storageAccountId := commonids.NewStorageAccountID(parsedId.SubscriptionId, parsedId.ResourceGroup, parsedId.StorageAccountName)
				targetServiceId = storageAccountId.ID()
			}
		}
	}

	return targetServiceId
}
