package github.com/hashicorp/terraform-provider-azurerm/internal/services/maintenance
import (
	"errors"
	"fmt"
	"log"
	"regexp"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
	"github.com/hashicorp/go-azure-sdk/resource-manager/maintenance/2023-04-01/maintenanceconfigurations"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/maintenance/migration"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/maintenance/validate"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func expandMaintenanceConfigurationInstallPatchesWindows(input []interface{}) *maintenanceconfigurations.InputWindowsParameters {
	if len(input) == 0 {
		return nil
	}

	v, ok := input[0].(map[string]interface{})
	if !ok {
		return nil
	}
	windowsInput := maintenanceconfigurations.InputWindowsParameters{}
	if v, ok := v["classifications_to_include"]; ok {
		windowsInput.ClassificationsToInclude = utils.ExpandStringSlice(v.([]interface{}))
	}
	if v, ok := v["kb_numbers_to_exclude"]; ok {
		windowsInput.KbNumbersToExclude = utils.ExpandStringSlice(v.([]interface{}))
	}
	if v, ok := v["kb_numbers_to_include"]; ok {
		windowsInput.KbNumbersToInclude = utils.ExpandStringSlice(v.([]interface{}))
	}
	return &windowsInput
}
