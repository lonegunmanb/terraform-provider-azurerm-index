package github.com/hashicorp/terraform-provider-azurerm/internal/services/sentinel
import (
	"context"
	"fmt"

	"github.com/hashicorp/go-azure-sdk/resource-manager/securityinsights/2023-12-01-preview/alertrules"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/utils"
)
func flattenAlertRuleGrouping(input *alertrules.GroupingConfiguration, withGroupPrefix bool) []interface{} {
	if input == nil {
		return []interface{}{}
	}

	var groupByEntities []interface{}
	if input.GroupByEntities != nil {
		for _, entity := range *input.GroupByEntities {
			groupByEntities = append(groupByEntities, string(entity))
		}
	}

	var groupByAlertDetails []interface{}
	if input.GroupByAlertDetails != nil {
		for _, detail := range *input.GroupByAlertDetails {
			groupByAlertDetails = append(groupByAlertDetails, string(detail))
		}
	}

	var groupByCustomDetails []interface{}
	if input.GroupByCustomDetails != nil {
		for _, detail := range *input.GroupByCustomDetails {
			groupByCustomDetails = append(groupByCustomDetails, detail)
		}
	}

	var (
		k1 = "by_entities"
		k2 = "by_alert_details"
		k3 = "by_custom_details"
	)

	if withGroupPrefix {
		k1 = "group_" + k1
		k2 = "group_" + k2
		k3 = "group_" + k3
	}
	return []interface{}{
		map[string]interface{}{
			"enabled":                 input.Enabled,
			"lookback_duration":       input.LookbackDuration,
			"reopen_closed_incidents": input.ReopenClosedIncident,
			"entity_matching_method":  string(input.MatchingMethod),
			k1:                        groupByEntities,
			k2:                        groupByAlertDetails,
			k3:                        groupByCustomDetails,
		},
	}
}
