package github.com/hashicorp/terraform-provider-azurerm/internal/services/sentinel
import (
	"context"
	"fmt"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2022-10-01/workspaces"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/sentinel/azuresdkhacks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/sentinel/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
	securityinsight "github.com/jackofallops/kermit/sdk/securityinsights/2022-10-01-preview/securityinsights"
)
func flattenSentinelAlertRuleAnomalyRequiredDataConnectors(input *[]securityinsight.SecurityMLAnalyticsSettingsDataSource) []AnomalyRuleRequiredDataConnectorModel {
	if input == nil {
		return []AnomalyRuleRequiredDataConnectorModel{}
	}

	output := make([]AnomalyRuleRequiredDataConnectorModel, 0)
	for _, v := range *input {
		if v.ConnectorID == nil || v.DataTypes == nil {
			continue
		}

		output = append(output, AnomalyRuleRequiredDataConnectorModel{
			ConnectorId: *v.ConnectorID,
			DataTypes:   *v.DataTypes,
		})
	}

	return output
}
