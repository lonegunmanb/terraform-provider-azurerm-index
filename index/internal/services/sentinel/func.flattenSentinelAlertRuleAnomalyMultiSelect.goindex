package github.com/hashicorp/terraform-provider-azurerm/internal/services/sentinel
import (
	"context"
	"fmt"

	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2022-10-01/workspaces"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/sentinel/azuresdkhacks"
	"github.com/hashicorp/terraform-provider-azurerm/internal/services/sentinel/parse"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	securityinsight "github.com/jackofallops/kermit/sdk/securityinsights/2022-10-01-preview/securityinsights"
)
func flattenSentinelAlertRuleAnomalyMultiSelect(input *[]azuresdkhacks.AnomalySecurityMLAnalyticsMultiSelectObservations) []AnomalyRuleMultiSelectModel {
	if input == nil {
		return []AnomalyRuleMultiSelectModel{}
	}

	output := make([]AnomalyRuleMultiSelectModel, 0)
	for _, item := range *input {
		o := AnomalyRuleMultiSelectModel{}
		if item.Values != nil {
			values := make([]string, 0)
			values = append(values, *item.Values...)
			o.Values = values
		}
		if item.SupportValues != nil {
			supportValues := make([]string, 0)
			supportValues = append(supportValues, *item.SupportValues...)
			o.SupportValues = supportValues
		}
		if item.Name != nil {
			o.Name = *item.Name
		}
		if item.Description != nil {
			o.Description = *item.Description
		}
		output = append(output, o)
	}
	return output
}
