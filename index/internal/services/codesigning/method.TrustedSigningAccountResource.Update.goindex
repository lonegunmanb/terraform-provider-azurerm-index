package github.com/hashicorp/terraform-provider-azurerm/internal/services/codesigning
import (
	"context"
	"fmt"
	"regexp"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
	"github.com/hashicorp/go-azure-sdk/resource-manager/codesigning/2024-09-30-preview/codesigningaccounts"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
)
func (m TrustedSigningAccountResource) Update() sdk.ResourceFunc {
	return sdk.ResourceFunc{
		Timeout: 10 * time.Minute,
		Func: func(ctx context.Context, meta sdk.ResourceMetaData) (err error) {
			client := meta.Client.CodeSigning.Client.CodeSigningAccounts
			id, err := codesigningaccounts.ParseCodeSigningAccountID(meta.ResourceData.Id())
			if err != nil {
				return err
			}
			var model TrustedSigningAccountModel
			if err = meta.Decode(&model); err != nil {
				return fmt.Errorf("decoding: %+v", err)
			}

			var patch codesigningaccounts.CodeSigningAccountPatch
			if meta.ResourceData.HasChange("sku_name") {
				patch.Properties = pointer.To(codesigningaccounts.CodeSigningAccountPatchProperties{
					Sku: pointer.To(codesigningaccounts.AccountSkuPatch{
						Name: pointer.To(codesigningaccounts.SkuName(model.SkuName)),
					}),
				})
			}
			if meta.ResourceData.HasChange("tags") {
				patch.Tags = pointer.To(model.Tags)
			}

			if err = client.UpdateThenPoll(ctx, *id, patch); err != nil {
				return fmt.Errorf("updating %s: %v", id, err)
			}

			return nil
		},
	}
}
