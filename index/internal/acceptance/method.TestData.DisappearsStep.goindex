package github.com/hashicorp/terraform-provider-azurerm/internal/acceptance
import (
	"context"
	"fmt"
	"strings"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-plugin-testing/terraform"
	"github.com/hashicorp/terraform-provider-azurerm/internal/acceptance/check"
	"github.com/hashicorp/terraform-provider-azurerm/internal/acceptance/helpers"
	"github.com/hashicorp/terraform-provider-azurerm/internal/acceptance/testclient"
	"github.com/hashicorp/terraform-provider-azurerm/internal/acceptance/types"
	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
)
func (td TestData) DisappearsStep(data DisappearsStepData) resource.TestStep {
	config := data.Config(td)
	return resource.TestStep{
		Config: config,
		Check: resource.ComposeTestCheckFunc(
			func(state *terraform.State) error {
				client, err := testclient.Build()
				if err != nil {
					return fmt.Errorf("building client: %+v", err)
				}
				return helpers.ExistsInAzure(client, data.TestResource, td.ResourceName)(state)
			},
			func(state *terraform.State) error {
				client, err := testclient.Build()
				if err != nil {
					return fmt.Errorf("building client: %+v", err)
				}
				return helpers.DeleteResourceFunc(client, data.TestResource, td.ResourceName)(state)
			},
		),
		ExpectNonEmptyPlan: true,
	}
}
