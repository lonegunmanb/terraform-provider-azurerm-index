package github.com/hashicorp/terraform-provider-azurerm/internal/tools/main
import (
	"flag"
	"fmt"
	"log"
	"math"
	"os"
	"path/filepath"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/provider"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/magodo/terraform-provider-azurerm-example-gen/examplegen"
)
func (gen documentationGenerator) determineDefaultValueForExample(name string, field *schema.Schema) string {
	if field.Default != nil {
		if v, ok := field.Default.(bool); ok {
			return strconv.FormatBool(v)
		}

		if v, ok := field.Default.(int); ok {
			return fmt.Sprintf("%d", v)
		}

		if v, ok := field.Default.(string); ok {
			return v
		}
	}

	if field.Type == schema.TypeBool {
		return "false"
	}

	if field.Type == schema.TypeInt {
		return "42"
	}

	if field.Type == schema.TypeFloat {
		return "1.23456"
	}

	if name == "name" || strings.HasSuffix(name, "_name") {
		if gen.isDataSource {
			return "\"existing\""
		}

		return "\"example\""
	}
	if name == "location" {
		return "\"West Europe\""
	}
	if name == "resource_group_name" {
		return "\"example-resources\""
	}

	return "\"TODO\""
}
