package github.com/hashicorp/terraform-provider-azurerm/internal/tools/main
import (
	"flag"
	"fmt"
	"log"
	"math"
	"os"
	"path/filepath"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-azurerm/internal/provider"
	"github.com/hashicorp/terraform-provider-azurerm/internal/sdk"
	"github.com/magodo/terraform-provider-azurerm-example-gen/examplegen"
)
func (gen documentationGenerator) exampleUsageBlock() string {
	if gen.exampleSource != nil {
		if cfg, err := gen.exampleSource.GenExample(); err == nil {
			return cfg
		}
	}

	requiredFields := gen.requiredFieldsForExampleBlock(gen.resource.Schema, 1)

	if gen.isDataSource {
		return fmt.Sprintf(`data "%s" "example" {
%s
}

output "id" {
  value = data.%s.example.id
}`, gen.resourceName, requiredFields, gen.resourceName)
	}

	return fmt.Sprintf(`resource "%s" "example" {
%s
}`, gen.resourceName, requiredFields)
}
