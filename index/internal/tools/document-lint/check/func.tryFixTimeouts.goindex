package github.com/hashicorp/terraform-provider-azurerm/internal/tools/document-lint/check
import (
	"log"
	"os"
	"strings"

	"github.com/hashicorp/terraform-provider-azurerm/internal/tools/document-lint/util"
)
func tryFixTimeouts(rt string, lines []string, diffs []TimeoutDiffItem) []string {
	var suf []string
	addSuf := func(line string) {
		suf = append(suf, line)
	}
	if diffs[0].Type == TimeoutMissed {
		// no such timeout block, add to the end of lines
		addSuf("## Timeouts")
		addSuf("")
		addSuf("The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:")
		addSuf("")
		diffs = diffs[1:]
	}
	// find timeout block
	var toLine, importIdx int
	for idx, line := range lines {
		if line == "## Timeouts" {
			toLine = idx + 4
			for toLine < len(lines) && lines[toLine] != "" {
				toLine++ // insert to an empty line
			}
		}
		if strings.HasPrefix(line, "## Import") {
			importIdx = idx
		}
	}
	rt = util.NormalizeResourceName(rt)

	for _, diff := range diffs {
		if diff.Line == 0 {
			// append line
			gen := diff.GenLine(rt)
			if len(suf) > 0 {
				addSuf(gen)
			} else {
				lines = append(lines[:toLine+1], lines[toLine:]...)
				lines[toLine] = gen
			}
		} else {
			lines[diff.Line-1] = diff.FixLine(lines[diff.Line-1])
		}
	}
	if len(suf) > 0 {
		addSuf("")
		// insert before import
		if importIdx > 0 {
			end := make([]string, len(lines)-importIdx)
			copy(end, lines[importIdx:])
			lines = append(lines[:importIdx], suf...)
			lines = append(lines, end...)
		} else {
			lines = append(lines, suf...)
		}
	}
	return lines
}
