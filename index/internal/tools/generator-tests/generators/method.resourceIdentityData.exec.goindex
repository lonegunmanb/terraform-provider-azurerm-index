package github.com/hashicorp/terraform-provider-azurerm/internal/tools/generator-tests/generators
import (
	"flag"
	"fmt"
	"log"
	"os"
	"strings"
	"text/template"

	"github.com/hashicorp/terraform-provider-azurerm/internal/tools/generator-tests/helpers"
	"github.com/mitchellh/cli"
)
func (d *resourceIdentityData) exec() error {
	tpl := template.Must(template.New("identity_test.gotpl").Funcs(TplFuncMap).ParseFS(Templatedir, "templates/identity_test.gotpl"))

	outputPath := fmt.Sprintf(riOutputFileFmt, d.ServicePackageName, d.ResourceName)

	f, err := os.Create(outputPath)
	if err != nil {
		return fmt.Errorf("failed opening output resource file for writing: %+v", err.Error())
	}
	defer func(f *os.File) {
		err := f.Close()
		if err != nil {
			log.Println("failed closing output resource file for writing:", err.Error())
			os.Exit(3)
		}
	}(f)

	if err := tpl.Execute(f, d); err != nil {
		return fmt.Errorf("failed writing output test file (%s): %s", outputPath, err.Error())
	}

	if err := helpers.GoFmt(outputPath); err != nil {
		return err
	}

	return nil
}
