package github.com/hashicorp/terraform-provider-azurerm/internal/common
import (
	"log"
	"net/http"
	"net/http/httputil"

	"github.com/hashicorp/go-azure-sdk/sdk/client"
)
func requestLoggerMiddleware(providerName string) client.RequestMiddleware {
	return func(request *http.Request) (*http.Request, error) {
		// strip the authorization header prior to printing
		authHeaderName := "Authorization"
		auth := request.Header.Get(authHeaderName)
		if auth != "" {
			request.Header.Del(authHeaderName)
		}

		// dump request to wire format
		if dump, err := httputil.DumpRequestOut(request, true); err == nil {
			log.Printf("[DEBUG] %s Request: \n%s\n", providerName, dump)
		} else {
			// fallback to basic message
			log.Printf("[DEBUG] %s Request: %s to %s\n", providerName, request.Method, request.URL)
		}

		// add the auth header back
		if auth != "" {
			request.Header.Add(authHeaderName, auth)
		}

		return request, nil
	}
}
